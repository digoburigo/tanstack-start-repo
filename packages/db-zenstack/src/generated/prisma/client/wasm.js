
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  username: 'username',
  displayUsername: 'displayUsername',
  role: 'role',
  banned: 'banned',
  banReason: 'banReason',
  banExpires: 'banExpires',
  changePassword: 'changePassword'
};

exports.Prisma.AssetScalarFieldEnum = {
  id: 'id',
  type: 'type',
  createdAt: 'createdAt',
  createdById: 'createdById',
  updatedAt: 'updatedAt',
  updatedById: 'updatedById',
  deletedAt: 'deletedAt',
  deletedById: 'deletedById',
  deleted: 'deleted',
  organizationId: 'organizationId'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId',
  impersonatedBy: 'impersonatedBy',
  activeOrganizationId: 'activeOrganizationId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  logo: 'logo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  metadata: 'metadata'
};

exports.Prisma.MemberScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  userId: 'userId',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  email: 'email',
  role: 'role',
  status: 'status',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  inviterId: 'inviterId'
};

exports.Prisma.CidScalarFieldEnum = {
  id: 'id',
  code: 'code',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AppointmentCidScalarFieldEnum = {
  id: 'id',
  appointmentId: 'appointmentId',
  cidId: 'cidId'
};

exports.Prisma.AppointmentScalarFieldEnum = {
  id: 'id',
  motive: 'motive',
  subjective: 'subjective',
  objective: 'objective',
  evaluation: 'evaluation',
  plan: 'plan',
  startDate: 'startDate',
  endDate: 'endDate',
  sickNoteDays: 'sickNoteDays',
  category: 'category',
  status: 'status',
  followUpId: 'followUpId',
  patientId: 'patientId'
};

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  name: 'name',
  cpf: 'cpf',
  cellphone: 'cellphone',
  email: 'email',
  sex: 'sex',
  responsible: 'responsible',
  nationality: 'nationality',
  race: 'race',
  state: 'state',
  city: 'city',
  zipcode: 'zipcode',
  neighborhood: 'neighborhood',
  street: 'street',
  number: 'number',
  complement: 'complement',
  occupation: 'occupation',
  sexualOrientation: 'sexualOrientation',
  civilStatus: 'civilStatus',
  bloodType: 'bloodType',
  genderIdentity: 'genderIdentity',
  password: 'password',
  userId: 'userId'
};

exports.Prisma.VaccinationsScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  vaccinationsValuesId: 'vaccinationsValuesId'
};

exports.Prisma.VaccinationsValuesScalarFieldEnum = {
  id: 'id',
  value: 'value',
  createdAt: 'createdAt'
};

exports.Prisma.AllergiesScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  allergiesValuesId: 'allergiesValuesId',
  appointmentId: 'appointmentId'
};

exports.Prisma.AllergiesValuesScalarFieldEnum = {
  id: 'id',
  value: 'value',
  createdAt: 'createdAt'
};

exports.Prisma.MedicationsScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  medicationsValuesId: 'medicationsValuesId',
  appointmentId: 'appointmentId'
};

exports.Prisma.MedicationsValuesScalarFieldEnum = {
  id: 'id',
  value: 'value',
  createdAt: 'createdAt'
};

exports.Prisma.ExamResultsScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  examResultsValuesId: 'examResultsValuesId',
  result: 'result',
  date: 'date'
};

exports.Prisma.ExamResultsValuesScalarFieldEnum = {
  id: 'id',
  value: 'value',
  createdAt: 'createdAt'
};

exports.Prisma.ComorbiditiesScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  comorbiditiesValuesId: 'comorbiditiesValuesId',
  appointmentId: 'appointmentId'
};

exports.Prisma.ComorbiditiesValuesScalarFieldEnum = {
  id: 'id',
  value: 'value',
  createdAt: 'createdAt'
};

exports.Prisma.SurgeriesScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  surgeriesValuesId: 'surgeriesValuesId'
};

exports.Prisma.SurgeriesValuesScalarFieldEnum = {
  id: 'id',
  value: 'value',
  createdAt: 'createdAt'
};

exports.Prisma.HealthPlansScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  healthPlansValuesId: 'healthPlansValuesId'
};

exports.Prisma.HealthPlansValuesScalarFieldEnum = {
  id: 'id',
  value: 'value',
  createdAt: 'createdAt'
};

exports.Prisma.DefaultObjectiveInformationScalarFieldEnum = {
  id: 'id',
  text: 'text'
};

exports.Prisma.EventCalendarScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  start: 'start',
  end: 'end',
  allDay: 'allDay',
  eventType: 'eventType',
  rrule: 'rrule',
  appointmentId: 'appointmentId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  admin: 'admin',
  user: 'user'
};

exports.MemberRole = exports.$Enums.MemberRole = {
  owner: 'owner',
  admin: 'admin',
  secretary: 'secretary',
  patient: 'patient',
  member: 'member'
};

exports.AppointmentCategory = exports.$Enums.AppointmentCategory = {
  NORMAL: 'NORMAL',
  FOLLOW_UP: 'FOLLOW_UP'
};

exports.AppointmentStatus = exports.$Enums.AppointmentStatus = {
  PENDING: 'PENDING',
  ONGOING: 'ONGOING',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  RESCHEDULED: 'RESCHEDULED',
  COMPLETED: 'COMPLETED',
  NO_SHOW: 'NO_SHOW'
};

exports.Sex = exports.$Enums.Sex = {
  male: 'male',
  female: 'female'
};

exports.Race = exports.$Enums.Race = {
  black: 'black',
  brown: 'brown',
  white: 'white',
  yellow: 'yellow',
  indigenous: 'indigenous'
};

exports.CivilStatus = exports.$Enums.CivilStatus = {
  single: 'single',
  married: 'married',
  separated: 'separated',
  divorced: 'divorced',
  widowed: 'widowed'
};

exports.BloodType = exports.$Enums.BloodType = {
  a_positive: 'a_positive',
  a_negative: 'a_negative',
  b_positive: 'b_positive',
  b_negative: 'b_negative',
  ab_positive: 'ab_positive',
  ab_negative: 'ab_negative',
  o_positive: 'o_positive',
  o_negative: 'o_negative'
};

exports.GenderIdentity = exports.$Enums.GenderIdentity = {
  cisgender: 'cisgender',
  transgender: 'transgender',
  non_binary: 'non_binary'
};

exports.EventCalendarType = exports.$Enums.EventCalendarType = {
  APPOINTMENT: 'APPOINTMENT',
  APPOINTMENT_FOLLOW_UP: 'APPOINTMENT_FOLLOW_UP',
  CONSULTATION: 'CONSULTATION',
  SURGERY: 'SURGERY',
  EXAM: 'EXAM',
  MEETING: 'MEETING',
  OTHER: 'OTHER'
};

exports.Prisma.ModelName = {
  User: 'User',
  Asset: 'Asset',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Organization: 'Organization',
  Member: 'Member',
  Invitation: 'Invitation',
  Cid: 'Cid',
  AppointmentCid: 'AppointmentCid',
  Appointment: 'Appointment',
  Patient: 'Patient',
  Vaccinations: 'Vaccinations',
  VaccinationsValues: 'VaccinationsValues',
  Allergies: 'Allergies',
  AllergiesValues: 'AllergiesValues',
  Medications: 'Medications',
  MedicationsValues: 'MedicationsValues',
  ExamResults: 'ExamResults',
  ExamResultsValues: 'ExamResultsValues',
  Comorbidities: 'Comorbidities',
  ComorbiditiesValues: 'ComorbiditiesValues',
  Surgeries: 'Surgeries',
  SurgeriesValues: 'SurgeriesValues',
  HealthPlans: 'HealthPlans',
  HealthPlansValues: 'HealthPlansValues',
  DefaultObjectiveInformation: 'DefaultObjectiveInformation',
  EventCalendar: 'EventCalendar'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/rodrigoburigo/Documents/Projects/JavaScript/tanstack-start-repo/packages/db-zenstack/src/generated/prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "moduleFormat": "cjs",
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "/Users/rodrigoburigo/Documents/Projects/JavaScript/tanstack-start-repo/packages/db-zenstack/src/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.11.1",
  "engineVersion": "f40f79ec31188888a2e33acda0ecc8fd10a853a9",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "//////////////////////////////////////////////////////////////////////////////////////////////\n// DO NOT MODIFY THIS FILE                                                                  //\n// This file is automatically generated by ZenStack CLI and should not be manually updated. //\n//////////////////////////////////////////////////////////////////////////////////////////////\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n  output          = \"../generated/prisma/client\"\n  moduleFormat    = \"cjs\"\n}\n\nenum UserRole {\n  admin\n  user\n}\n\nenum MemberRole {\n  owner\n  admin\n  secretary\n  patient\n  member\n}\n\nenum AppointmentCategory {\n  NORMAL\n  FOLLOW_UP\n}\n\nenum AppointmentStatus {\n  PENDING\n  ONGOING\n  CONFIRMED\n  CANCELLED\n  RESCHEDULED\n  COMPLETED\n  NO_SHOW\n}\n\nenum Sex {\n  male\n  female\n}\n\nenum Race {\n  black\n  brown\n  white\n  yellow\n  indigenous\n}\n\nenum CivilStatus {\n  single\n  married\n  separated\n  divorced\n  widowed\n}\n\nenum BloodType {\n  a_positive\n  a_negative\n  b_positive\n  b_negative\n  ab_positive\n  ab_negative\n  o_positive\n  o_negative\n}\n\nenum GenderIdentity {\n  cisgender\n  transgender\n  non_binary\n}\n\nenum EventCalendarType {\n  APPOINTMENT\n  APPOINTMENT_FOLLOW_UP\n  CONSULTATION\n  SURGERY\n  EXAM\n  MEETING\n  OTHER\n}\n\nmodel User {\n  id              String       @id() @default(nanoid())\n  name            String\n  email           String\n  emailVerified   Boolean\n  image           String?\n  createdAt       DateTime     @default(now())\n  updatedAt       DateTime     @updatedAt()\n  sessions        Session[]\n  accounts        Account[]\n  members         Member[]\n  invitations     Invitation[]\n  username        String?\n  displayUsername String?\n  role            UserRole?    @default(user)\n  banned          Boolean?\n  banReason       String?\n  banExpires      DateTime?\n  changePassword  Boolean?     @default(false)\n  patientUser     Patient[]    @relation(\"patientUser\")\n  createdAssets   Asset[]      @relation(\"createdAssets\")\n  updatedAssets   Asset[]      @relation(\"updatedAssets\")\n  deletedAssets   Asset[]      @relation(\"deletedAssets\")\n\n  @@unique([email])\n  @@map(\"user\")\n}\n\nmodel Asset {\n  id                                       String                       @id() @default(nanoid())\n  type                                     String\n  createdAt                                DateTime                     @default(now())\n  createdById                              String?\n  createdByUser                            User?                        @relation(\"createdAssets\", fields: [createdById], references: [id], onDelete: SetNull)\n  updatedAt                                DateTime                     @updatedAt()\n  updatedById                              String?\n  updatedByUser                            User?                        @relation(\"updatedAssets\", fields: [updatedById], references: [id], onDelete: SetNull)\n  deletedAt                                DateTime?\n  deletedById                              String?\n  deletedByUser                            User?                        @relation(\"deletedAssets\", fields: [deletedById], references: [id], onDelete: SetNull)\n  deleted                                  Boolean                      @default(false)\n  organizationId                           String?\n  organization                             Organization?                @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  delegate_aux_appointmentCid              AppointmentCid?\n  delegate_aux_appointment                 Appointment?\n  delegate_aux_patient                     Patient?\n  delegate_aux_vaccinations                Vaccinations?\n  delegate_aux_allergies                   Allergies?\n  delegate_aux_medications                 Medications?\n  delegate_aux_examResults                 ExamResults?\n  delegate_aux_comorbidities               Comorbidities?\n  delegate_aux_surgeries                   Surgeries?\n  delegate_aux_healthPlans                 HealthPlans?\n  delegate_aux_defaultObjectiveInformati_0 DefaultObjectiveInformation?\n  delegate_aux_eventCalendar               EventCalendar?\n\n  @@map(\"asset\")\n}\n\nmodel Session {\n  id                   String   @id() @default(nanoid())\n  expiresAt            DateTime\n  token                String\n  createdAt            DateTime @default(now())\n  updatedAt            DateTime @updatedAt()\n  ipAddress            String?\n  userAgent            String?\n  userId               String\n  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  impersonatedBy       String?\n  activeOrganizationId String?\n\n  @@unique([token])\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id() @default(nanoid())\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt()\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String   @id() @default(nanoid())\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt()\n\n  @@map(\"verification\")\n}\n\nmodel Organization {\n  id          String       @id() @default(nanoid())\n  name        String\n  slug        String?\n  logo        String?\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt()\n  metadata    String?\n  members     Member[]\n  invitations Invitation[]\n  assets      Asset[]\n\n  @@unique([slug])\n  @@map(\"organization\")\n}\n\nmodel Member {\n  id             String       @id() @default(nanoid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  userId         String\n  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  role           String\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt()\n\n  @@map(\"member\")\n}\n\nmodel Invitation {\n  id             String       @id() @default(nanoid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  email          String\n  role           String?\n  status         String\n  expiresAt      DateTime\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime?    @updatedAt()\n  inviterId      String\n  user           User         @relation(fields: [inviterId], references: [id], onDelete: Cascade)\n\n  @@map(\"invitation\")\n}\n\nmodel Cid {\n  id             String           @id() @default(nanoid())\n  code           String\n  description    String\n  createdAt      DateTime         @default(now())\n  updatedAt      DateTime?        @updatedAt()\n  appointmentCid AppointmentCid[]\n\n  @@unique([code])\n  @@index([code])\n  @@map(\"cid\")\n}\n\nmodel AppointmentCid {\n  id                 String      @id()\n  appointmentId      String\n  appointment        Appointment @relation(fields: [appointmentId], references: [id], onDelete: Cascade)\n  cidId              String\n  cid                Cid         @relation(fields: [cidId], references: [id], onDelete: Cascade)\n  delegate_aux_asset Asset       @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@unique([appointmentId, cidId])\n  @@map(\"appointment_cid\")\n}\n\nmodel Appointment {\n  id                  String               @id()\n  motive              String\n  subjective          String\n  objective           String\n  evaluation          String\n  plan                String\n  startDate           DateTime?\n  endDate             DateTime?\n  sickNoteDays        Int?\n  category            AppointmentCategory?\n  status              AppointmentStatus?\n  followUpId          String?              @unique()\n  followUp            Appointment?         @relation(\"FollowUpAppointment\", fields: [followUpId], references: [id])\n  predecessorFollowUp Appointment?         @relation(\"FollowUpAppointment\")\n  cids                AppointmentCid[]\n  allergies           Allergies[]\n  medications         Medications[]\n  comorbidities       Comorbidities[]\n  patientId           String\n  patient             Patient              @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  eventCalendar       EventCalendar?\n  delegate_aux_asset  Asset                @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"appointment\")\n}\n\nmodel Patient {\n  id                 String          @id()\n  name               String\n  cpf                String\n  cellphone          String\n  email              String\n  sex                Sex?\n  responsible        String?\n  nationality        String\n  race               Race?\n  state              String\n  city               String\n  zipcode            String\n  neighborhood       String\n  street             String\n  number             String\n  complement         String?\n  occupation         String\n  sexualOrientation  String?\n  civilStatus        CivilStatus?\n  bloodType          BloodType?\n  genderIdentity     GenderIdentity?\n  password           String?\n  userId             String?\n  user               User?           @relation(\"patientUser\", fields: [userId], references: [id])\n  appointments       Appointment[]\n  vaccinations       Vaccinations[]\n  allergies          Allergies[]\n  medications        Medications[]\n  examResults        ExamResults[]\n  comorbidities      Comorbidities[]\n  surgeries          Surgeries[]\n  healthPlans        HealthPlans[]\n  delegate_aux_asset Asset           @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"patient\")\n}\n\nmodel Vaccinations {\n  id                   String             @id()\n  patientId            String\n  patient              Patient            @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  vaccinationsValuesId String\n  vaccinationsValues   VaccinationsValues @relation(fields: [vaccinationsValuesId], references: [id], onDelete: Cascade)\n  delegate_aux_asset   Asset              @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"vaccinations\")\n}\n\nmodel VaccinationsValues {\n  id           String         @id() @default(nanoid())\n  value        String         @unique()\n  createdAt    DateTime       @default(now())\n  vaccinations Vaccinations[]\n\n  @@map(\"vaccinations_values\")\n}\n\nmodel Allergies {\n  id                 String          @id()\n  patientId          String?\n  patient            Patient?        @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  allergiesValuesId  String\n  allergiesValues    AllergiesValues @relation(fields: [allergiesValuesId], references: [id], onDelete: Cascade)\n  appointmentId      String?\n  appointment        Appointment?    @relation(fields: [appointmentId], references: [id], onDelete: Cascade)\n  delegate_aux_asset Asset           @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"allergies\")\n}\n\nmodel AllergiesValues {\n  id        String      @id() @default(nanoid())\n  value     String      @unique()\n  createdAt DateTime    @default(now())\n  allergies Allergies[]\n\n  @@map(\"allergies_values\")\n}\n\nmodel Medications {\n  id                  String            @id()\n  patientId           String?\n  patient             Patient?          @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  medicationsValuesId String\n  medicationsValues   MedicationsValues @relation(fields: [medicationsValuesId], references: [id], onDelete: Cascade)\n  appointmentId       String?\n  appointment         Appointment?      @relation(fields: [appointmentId], references: [id], onDelete: Cascade)\n  delegate_aux_asset  Asset             @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"medications\")\n}\n\nmodel MedicationsValues {\n  id          String        @id() @default(nanoid())\n  value       String        @unique()\n  createdAt   DateTime      @default(now())\n  medications Medications[]\n\n  @@map(\"medications_values\")\n}\n\nmodel ExamResults {\n  id                  String            @id()\n  patientId           String\n  patient             Patient           @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  examResultsValuesId String\n  examResultsValues   ExamResultsValues @relation(fields: [examResultsValuesId], references: [id], onDelete: Cascade)\n  result              String\n  date                DateTime\n  delegate_aux_asset  Asset             @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"exam_results\")\n}\n\nmodel ExamResultsValues {\n  id          String        @id() @default(nanoid())\n  value       String        @unique()\n  createdAt   DateTime      @default(now())\n  examResults ExamResults[]\n\n  @@map(\"exam_results_values\")\n}\n\nmodel Comorbidities {\n  id                    String              @id()\n  patientId             String?\n  patient               Patient?            @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  comorbiditiesValuesId String\n  comorbiditiesValues   ComorbiditiesValues @relation(fields: [comorbiditiesValuesId], references: [id], onDelete: Cascade)\n  appointmentId         String?\n  appointment           Appointment?        @relation(fields: [appointmentId], references: [id], onDelete: Cascade)\n  delegate_aux_asset    Asset               @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"comorbidities\")\n}\n\nmodel ComorbiditiesValues {\n  id            String          @id() @default(nanoid())\n  value         String          @unique()\n  createdAt     DateTime        @default(now())\n  comorbidities Comorbidities[]\n\n  @@map(\"comorbidities_values\")\n}\n\nmodel Surgeries {\n  id                 String          @id()\n  patientId          String\n  patient            Patient         @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  surgeriesValuesId  String\n  surgeriesValues    SurgeriesValues @relation(fields: [surgeriesValuesId], references: [id], onDelete: Cascade)\n  delegate_aux_asset Asset           @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"surgeries\")\n}\n\nmodel SurgeriesValues {\n  id        String      @id() @default(nanoid())\n  value     String      @unique()\n  createdAt DateTime    @default(now())\n  surgeries Surgeries[]\n\n  @@map(\"surgeries_values\")\n}\n\nmodel HealthPlans {\n  id                  String            @id()\n  patientId           String\n  patient             Patient           @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  healthPlansValuesId String\n  healthPlansValues   HealthPlansValues @relation(fields: [healthPlansValuesId], references: [id], onDelete: Cascade)\n  delegate_aux_asset  Asset             @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"health_plans\")\n}\n\nmodel HealthPlansValues {\n  id          String        @id() @default(nanoid())\n  value       String        @unique()\n  createdAt   DateTime      @default(now())\n  healthPlans HealthPlans[]\n\n  @@map(\"health_plans_values\")\n}\n\nmodel DefaultObjectiveInformation {\n  id                 String  @id()\n  text               String?\n  delegate_aux_asset Asset   @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"default_objective_information\")\n}\n\nmodel EventCalendar {\n  id                 String             @id()\n  title              String\n  description        String?\n  start              DateTime\n  end                DateTime\n  allDay             Boolean?           @default(false)\n  eventType          EventCalendarType?\n  rrule              String?\n  appointmentId      String?            @unique()\n  appointment        Appointment?       @relation(fields: [appointmentId], references: [id], onDelete: Cascade)\n  delegate_aux_asset Asset              @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@map(\"event_calendar\")\n}\n",
  "inlineSchemaHash": "ecc407f957d586b6da25d844d9672fa6bed64a1f560abb8191beb15f4782d3fc",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToUser\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToUser\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayUsername\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"changePassword\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"patientUser\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"patientUser\"},{\"name\":\"createdAssets\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"createdAssets\"},{\"name\":\"updatedAssets\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"updatedAssets\"},{\"name\":\"deletedAssets\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"deletedAssets\"}],\"dbName\":\"user\"},\"Asset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"createdAssets\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"updatedAssets\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deletedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"deletedAssets\"},{\"name\":\"deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AssetToOrganization\"},{\"name\":\"delegate_aux_appointmentCid\",\"kind\":\"object\",\"type\":\"AppointmentCid\",\"relationName\":\"AppointmentCidToAsset\"},{\"name\":\"delegate_aux_appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToAsset\"},{\"name\":\"delegate_aux_patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"AssetToPatient\"},{\"name\":\"delegate_aux_vaccinations\",\"kind\":\"object\",\"type\":\"Vaccinations\",\"relationName\":\"AssetToVaccinations\"},{\"name\":\"delegate_aux_allergies\",\"kind\":\"object\",\"type\":\"Allergies\",\"relationName\":\"AllergiesToAsset\"},{\"name\":\"delegate_aux_medications\",\"kind\":\"object\",\"type\":\"Medications\",\"relationName\":\"AssetToMedications\"},{\"name\":\"delegate_aux_examResults\",\"kind\":\"object\",\"type\":\"ExamResults\",\"relationName\":\"AssetToExamResults\"},{\"name\":\"delegate_aux_comorbidities\",\"kind\":\"object\",\"type\":\"Comorbidities\",\"relationName\":\"AssetToComorbidities\"},{\"name\":\"delegate_aux_surgeries\",\"kind\":\"object\",\"type\":\"Surgeries\",\"relationName\":\"AssetToSurgeries\"},{\"name\":\"delegate_aux_healthPlans\",\"kind\":\"object\",\"type\":\"HealthPlans\",\"relationName\":\"AssetToHealthPlans\"},{\"name\":\"delegate_aux_defaultObjectiveInformati_0\",\"kind\":\"object\",\"type\":\"DefaultObjectiveInformation\",\"relationName\":\"AssetToDefaultObjectiveInformation\"},{\"name\":\"delegate_aux_eventCalendar\",\"kind\":\"object\",\"type\":\"EventCalendar\",\"relationName\":\"AssetToEventCalendar\"}],\"dbName\":\"asset\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"impersonatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activeOrganizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToOrganization\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"assets\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToOrganization\"}],\"dbName\":\"organization\"},\"Member\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"MemberToOrganization\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MemberToUser\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"member\"},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inviterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitationToUser\"}],\"dbName\":\"invitation\"},\"Cid\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"appointmentCid\",\"kind\":\"object\",\"type\":\"AppointmentCid\",\"relationName\":\"AppointmentCidToCid\"}],\"dbName\":\"cid\"},\"AppointmentCid\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToAppointmentCid\"},{\"name\":\"cidId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cid\",\"kind\":\"object\",\"type\":\"Cid\",\"relationName\":\"AppointmentCidToCid\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AppointmentCidToAsset\"}],\"dbName\":\"appointment_cid\"},\"Appointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"motive\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subjective\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"objective\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"evaluation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sickNoteDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"AppointmentCategory\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AppointmentStatus\"},{\"name\":\"followUpId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"followUp\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"FollowUpAppointment\"},{\"name\":\"predecessorFollowUp\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"FollowUpAppointment\"},{\"name\":\"cids\",\"kind\":\"object\",\"type\":\"AppointmentCid\",\"relationName\":\"AppointmentToAppointmentCid\"},{\"name\":\"allergies\",\"kind\":\"object\",\"type\":\"Allergies\",\"relationName\":\"AllergiesToAppointment\"},{\"name\":\"medications\",\"kind\":\"object\",\"type\":\"Medications\",\"relationName\":\"AppointmentToMedications\"},{\"name\":\"comorbidities\",\"kind\":\"object\",\"type\":\"Comorbidities\",\"relationName\":\"AppointmentToComorbidities\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"AppointmentToPatient\"},{\"name\":\"eventCalendar\",\"kind\":\"object\",\"type\":\"EventCalendar\",\"relationName\":\"AppointmentToEventCalendar\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AppointmentToAsset\"}],\"dbName\":\"appointment\"},\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cpf\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cellphone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sex\",\"kind\":\"enum\",\"type\":\"Sex\"},{\"name\":\"responsible\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nationality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"race\",\"kind\":\"enum\",\"type\":\"Race\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"neighborhood\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"complement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"occupation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sexualOrientation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"civilStatus\",\"kind\":\"enum\",\"type\":\"CivilStatus\"},{\"name\":\"bloodType\",\"kind\":\"enum\",\"type\":\"BloodType\"},{\"name\":\"genderIdentity\",\"kind\":\"enum\",\"type\":\"GenderIdentity\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"patientUser\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToPatient\"},{\"name\":\"vaccinations\",\"kind\":\"object\",\"type\":\"Vaccinations\",\"relationName\":\"PatientToVaccinations\"},{\"name\":\"allergies\",\"kind\":\"object\",\"type\":\"Allergies\",\"relationName\":\"AllergiesToPatient\"},{\"name\":\"medications\",\"kind\":\"object\",\"type\":\"Medications\",\"relationName\":\"MedicationsToPatient\"},{\"name\":\"examResults\",\"kind\":\"object\",\"type\":\"ExamResults\",\"relationName\":\"ExamResultsToPatient\"},{\"name\":\"comorbidities\",\"kind\":\"object\",\"type\":\"Comorbidities\",\"relationName\":\"ComorbiditiesToPatient\"},{\"name\":\"surgeries\",\"kind\":\"object\",\"type\":\"Surgeries\",\"relationName\":\"PatientToSurgeries\"},{\"name\":\"healthPlans\",\"kind\":\"object\",\"type\":\"HealthPlans\",\"relationName\":\"HealthPlansToPatient\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToPatient\"}],\"dbName\":\"patient\"},\"Vaccinations\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToVaccinations\"},{\"name\":\"vaccinationsValuesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vaccinationsValues\",\"kind\":\"object\",\"type\":\"VaccinationsValues\",\"relationName\":\"VaccinationsToVaccinationsValues\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToVaccinations\"}],\"dbName\":\"vaccinations\"},\"VaccinationsValues\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vaccinations\",\"kind\":\"object\",\"type\":\"Vaccinations\",\"relationName\":\"VaccinationsToVaccinationsValues\"}],\"dbName\":\"vaccinations_values\"},\"Allergies\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"AllergiesToPatient\"},{\"name\":\"allergiesValuesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allergiesValues\",\"kind\":\"object\",\"type\":\"AllergiesValues\",\"relationName\":\"AllergiesToAllergiesValues\"},{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AllergiesToAppointment\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AllergiesToAsset\"}],\"dbName\":\"allergies\"},\"AllergiesValues\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"allergies\",\"kind\":\"object\",\"type\":\"Allergies\",\"relationName\":\"AllergiesToAllergiesValues\"}],\"dbName\":\"allergies_values\"},\"Medications\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"MedicationsToPatient\"},{\"name\":\"medicationsValuesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicationsValues\",\"kind\":\"object\",\"type\":\"MedicationsValues\",\"relationName\":\"MedicationsToMedicationsValues\"},{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToMedications\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToMedications\"}],\"dbName\":\"medications\"},\"MedicationsValues\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"medications\",\"kind\":\"object\",\"type\":\"Medications\",\"relationName\":\"MedicationsToMedicationsValues\"}],\"dbName\":\"medications_values\"},\"ExamResults\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"ExamResultsToPatient\"},{\"name\":\"examResultsValuesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"examResultsValues\",\"kind\":\"object\",\"type\":\"ExamResultsValues\",\"relationName\":\"ExamResultsToExamResultsValues\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToExamResults\"}],\"dbName\":\"exam_results\"},\"ExamResultsValues\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"examResults\",\"kind\":\"object\",\"type\":\"ExamResults\",\"relationName\":\"ExamResultsToExamResultsValues\"}],\"dbName\":\"exam_results_values\"},\"Comorbidities\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"ComorbiditiesToPatient\"},{\"name\":\"comorbiditiesValuesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comorbiditiesValues\",\"kind\":\"object\",\"type\":\"ComorbiditiesValues\",\"relationName\":\"ComorbiditiesToComorbiditiesValues\"},{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToComorbidities\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToComorbidities\"}],\"dbName\":\"comorbidities\"},\"ComorbiditiesValues\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comorbidities\",\"kind\":\"object\",\"type\":\"Comorbidities\",\"relationName\":\"ComorbiditiesToComorbiditiesValues\"}],\"dbName\":\"comorbidities_values\"},\"Surgeries\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToSurgeries\"},{\"name\":\"surgeriesValuesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"surgeriesValues\",\"kind\":\"object\",\"type\":\"SurgeriesValues\",\"relationName\":\"SurgeriesToSurgeriesValues\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToSurgeries\"}],\"dbName\":\"surgeries\"},\"SurgeriesValues\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"surgeries\",\"kind\":\"object\",\"type\":\"Surgeries\",\"relationName\":\"SurgeriesToSurgeriesValues\"}],\"dbName\":\"surgeries_values\"},\"HealthPlans\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"HealthPlansToPatient\"},{\"name\":\"healthPlansValuesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"healthPlansValues\",\"kind\":\"object\",\"type\":\"HealthPlansValues\",\"relationName\":\"HealthPlansToHealthPlansValues\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToHealthPlans\"}],\"dbName\":\"health_plans\"},\"HealthPlansValues\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"healthPlans\",\"kind\":\"object\",\"type\":\"HealthPlans\",\"relationName\":\"HealthPlansToHealthPlansValues\"}],\"dbName\":\"health_plans_values\"},\"DefaultObjectiveInformation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToDefaultObjectiveInformation\"}],\"dbName\":\"default_objective_information\"},\"EventCalendar\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"allDay\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"eventType\",\"kind\":\"enum\",\"type\":\"EventCalendarType\"},{\"name\":\"rrule\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToEventCalendar\"},{\"name\":\"delegate_aux_asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToEventCalendar\"}],\"dbName\":\"event_calendar\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

