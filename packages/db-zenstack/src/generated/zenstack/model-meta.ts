/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, email: {
                    name: "email",
                    type: "String",
                }, emailVerified: {
                    name: "emailVerified",
                    type: "Boolean",
                }, image: {
                    name: "image",
                    type: "String",
                    isOptional: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, sessions: {
                    name: "sessions",
                    type: "Session",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, accounts: {
                    name: "accounts",
                    type: "Account",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, members: {
                    name: "members",
                    type: "Member",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, invitations: {
                    name: "invitations",
                    type: "Invitation",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, username: {
                    name: "username",
                    type: "String",
                    isOptional: true,
                }, displayUsername: {
                    name: "displayUsername",
                    type: "String",
                    isOptional: true,
                }, role: {
                    name: "role",
                    type: "UserRole",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, banned: {
                    name: "banned",
                    type: "Boolean",
                    isOptional: true,
                }, banReason: {
                    name: "banReason",
                    type: "String",
                    isOptional: true,
                }, banExpires: {
                    name: "banExpires",
                    type: "DateTime",
                    isOptional: true,
                }, changePassword: {
                    name: "changePassword",
                    type: "Boolean",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, patientUser: {
                    name: "patientUser",
                    type: "Patient",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "patientUser" }] }],
                    backLink: 'user',
                }, createdAssets: {
                    name: "createdAssets",
                    type: "Asset",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdByUser',
                }, updatedAssets: {
                    name: "updatedAssets",
                    type: "Asset",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedByUser',
                }, deletedAssets: {
                    name: "deletedAssets",
                    type: "Asset",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedByUser',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "create,read" }, { "value": true }] }, { "name": "@@allow", "args": [{ "value": "update,delete" }] }, { "name": "@@unique", "args": [] }, { "name": "@@map", "args": [{ "value": "user" }] }],
        },
        asset: {
            name: 'Asset', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Asset$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Asset$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$Asset$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@delegate", "args": [] }, { "name": "@@map", "args": [{ "value": "asset" }] }], discriminator: "type",
        },
        session: {
            name: 'Session', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, expiresAt: {
                    name: "expiresAt",
                    type: "DateTime",
                }, token: {
                    name: "token",
                    type: "String",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, ipAddress: {
                    name: "ipAddress",
                    type: "String",
                    isOptional: true,
                }, userAgent: {
                    name: "userAgent",
                    type: "String",
                    isOptional: true,
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'sessions',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "userId" },
                }, impersonatedBy: {
                    name: "impersonatedBy",
                    type: "String",
                    isOptional: true,
                }, activeOrganizationId: {
                    name: "activeOrganizationId",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, token: {
                    name: "token",
                    fields: ["token"]
                },
            },
            attributes: [{ "name": "@@unique", "args": [] }, { "name": "@@map", "args": [{ "value": "session" }] }],
        },
        account: {
            name: 'Account', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, accountId: {
                    name: "accountId",
                    type: "String",
                }, providerId: {
                    name: "providerId",
                    type: "String",
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'accounts',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "userId" },
                }, accessToken: {
                    name: "accessToken",
                    type: "String",
                    isOptional: true,
                }, refreshToken: {
                    name: "refreshToken",
                    type: "String",
                    isOptional: true,
                }, idToken: {
                    name: "idToken",
                    type: "String",
                    isOptional: true,
                }, accessTokenExpiresAt: {
                    name: "accessTokenExpiresAt",
                    type: "DateTime",
                    isOptional: true,
                }, refreshTokenExpiresAt: {
                    name: "refreshTokenExpiresAt",
                    type: "DateTime",
                    isOptional: true,
                }, scope: {
                    name: "scope",
                    type: "String",
                    isOptional: true,
                }, password: {
                    name: "password",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@omit", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@map", "args": [{ "value": "account" }] }],
        },
        verification: {
            name: 'Verification', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, identifier: {
                    name: "identifier",
                    type: "String",
                }, value: {
                    name: "value",
                    type: "String",
                }, expiresAt: {
                    name: "expiresAt",
                    type: "DateTime",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@map", "args": [{ "value": "verification" }] }],
        },
        organization: {
            name: 'Organization', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, slug: {
                    name: "slug",
                    type: "String",
                    isOptional: true,
                }, logo: {
                    name: "logo",
                    type: "String",
                    isOptional: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, metadata: {
                    name: "metadata",
                    type: "String",
                    isOptional: true,
                }, members: {
                    name: "members",
                    type: "Member",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'organization',
                }, invitations: {
                    name: "invitations",
                    type: "Invitation",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'organization',
                }, assets: {
                    name: "assets",
                    type: "Asset",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'organization',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, slug: {
                    name: "slug",
                    fields: ["slug"]
                },
            },
            attributes: [{ "name": "@@unique", "args": [] }, { "name": "@@allow", "args": [{ "value": "create,read" }, { "value": true }] }, { "name": "@@map", "args": [{ "value": "organization" }] }],
        },
        member: {
            name: 'Member', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'organization',
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'members',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'members',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "userId" },
                }, role: {
                    name: "role",
                    type: "String",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "member" }] }],
        },
        invitation: {
            name: 'Invitation', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'organization',
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'invitations',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                }, email: {
                    name: "email",
                    type: "String",
                }, role: {
                    name: "role",
                    type: "String",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "String",
                }, expiresAt: {
                    name: "expiresAt",
                    type: "DateTime",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    isOptional: true,
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, inviterId: {
                    name: "inviterId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'invitations',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "inviterId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@map", "args": [{ "value": "invitation" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }],
        },
        cid: {
            name: 'Cid', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, code: {
                    name: "code",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    isOptional: true,
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, appointmentCid: {
                    name: "appointmentCid",
                    type: "AppointmentCid",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'cid',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, code: {
                    name: "code",
                    fields: ["code"]
                },
            },
            attributes: [{ "name": "@@unique", "args": [] }, { "name": "@@index", "args": [] }, { "name": "@@allow", "args": [{ "value": "read,create,delete" }, { "value": true }] }, { "name": "@@map", "args": [{ "value": "cid" }] }],
        },
        appointmentCid: {
            name: 'AppointmentCid', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$AppointmentCid$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$AppointmentCid$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$AppointmentCid$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, appointmentId: {
                    name: "appointmentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'appointment',
                }, appointment: {
                    name: "appointment",
                    type: "Appointment",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'cids',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "appointmentId" },
                }, cidId: {
                    name: "cidId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'cid',
                }, cid: {
                    name: "cid",
                    type: "Cid",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'appointmentCid',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "cidId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, appointmentId_cidId: {
                    name: "appointmentId_cidId",
                    fields: ["appointmentId", "cidId"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@unique", "args": [] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "appointment_cid" }] }],
        },
        appointment: {
            name: 'Appointment', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Appointment$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Appointment$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$Appointment$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, motive: {
                    name: "motive",
                    type: "String",
                }, subjective: {
                    name: "subjective",
                    type: "String",
                }, objective: {
                    name: "objective",
                    type: "String",
                }, evaluation: {
                    name: "evaluation",
                    type: "String",
                }, plan: {
                    name: "plan",
                    type: "String",
                }, startDate: {
                    name: "startDate",
                    type: "DateTime",
                    isOptional: true,
                }, endDate: {
                    name: "endDate",
                    type: "DateTime",
                    isOptional: true,
                }, sickNoteDays: {
                    name: "sickNoteDays",
                    type: "Int",
                    isOptional: true,
                }, category: {
                    name: "category",
                    type: "AppointmentCategory",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "AppointmentStatus",
                    isOptional: true,
                }, followUpId: {
                    name: "followUpId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@unique", "args": [] }],
                    isForeignKey: true,
                    relationField: 'followUp',
                }, followUp: {
                    name: "followUp",
                    type: "Appointment",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "FollowUpAppointment" }] }],
                    backLink: 'predecessorFollowUp',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "followUpId" },
                }, predecessorFollowUp: {
                    name: "predecessorFollowUp",
                    type: "Appointment",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "FollowUpAppointment" }] }],
                    backLink: 'followUp',
                }, cids: {
                    name: "cids",
                    type: "AppointmentCid",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'appointment',
                }, allergies: {
                    name: "allergies",
                    type: "Allergies",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'appointment',
                }, medications: {
                    name: "medications",
                    type: "Medications",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'appointment',
                }, comorbidities: {
                    name: "comorbidities",
                    type: "Comorbidities",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'appointment',
                }, patientId: {
                    name: "patientId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'patient',
                }, patient: {
                    name: "patient",
                    type: "Patient",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'appointments',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "patientId" },
                }, eventCalendar: {
                    name: "eventCalendar",
                    type: "EventCalendar",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'appointment',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, followUpId: {
                    name: "followUpId",
                    fields: ["followUpId"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "appointment" }] }],
        },
        patient: {
            name: 'Patient', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Patient$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Patient$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$Patient$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, name: {
                    name: "name",
                    type: "String",
                }, cpf: {
                    name: "cpf",
                    type: "String",
                }, cellphone: {
                    name: "cellphone",
                    type: "String",
                }, email: {
                    name: "email",
                    type: "String",
                }, sex: {
                    name: "sex",
                    type: "Sex",
                    isOptional: true,
                }, responsible: {
                    name: "responsible",
                    type: "String",
                    isOptional: true,
                }, nationality: {
                    name: "nationality",
                    type: "String",
                }, race: {
                    name: "race",
                    type: "Race",
                    isOptional: true,
                }, state: {
                    name: "state",
                    type: "String",
                }, city: {
                    name: "city",
                    type: "String",
                }, zipcode: {
                    name: "zipcode",
                    type: "String",
                }, neighborhood: {
                    name: "neighborhood",
                    type: "String",
                }, street: {
                    name: "street",
                    type: "String",
                }, number: {
                    name: "number",
                    type: "String",
                }, complement: {
                    name: "complement",
                    type: "String",
                    isOptional: true,
                }, occupation: {
                    name: "occupation",
                    type: "String",
                }, sexualOrientation: {
                    name: "sexualOrientation",
                    type: "String",
                    isOptional: true,
                }, civilStatus: {
                    name: "civilStatus",
                    type: "CivilStatus",
                    isOptional: true,
                }, bloodType: {
                    name: "bloodType",
                    type: "BloodType",
                    isOptional: true,
                }, genderIdentity: {
                    name: "genderIdentity",
                    type: "GenderIdentity",
                    isOptional: true,
                }, password: {
                    name: "password",
                    type: "String",
                    isOptional: true,
                }, userId: {
                    name: "userId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "patientUser" }] }],
                    backLink: 'patientUser',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, appointments: {
                    name: "appointments",
                    type: "Appointment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'patient',
                }, vaccinations: {
                    name: "vaccinations",
                    type: "Vaccinations",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'patient',
                }, allergies: {
                    name: "allergies",
                    type: "Allergies",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'patient',
                }, medications: {
                    name: "medications",
                    type: "Medications",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'patient',
                }, examResults: {
                    name: "examResults",
                    type: "ExamResults",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'patient',
                }, comorbidities: {
                    name: "comorbidities",
                    type: "Comorbidities",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'patient',
                }, surgeries: {
                    name: "surgeries",
                    type: "Surgeries",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'patient',
                }, healthPlans: {
                    name: "healthPlans",
                    type: "HealthPlans",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'patient',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "patient" }] }],
        },
        vaccinations: {
            name: 'Vaccinations', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Vaccinations$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Vaccinations$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$Vaccinations$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, patientId: {
                    name: "patientId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'patient',
                }, patient: {
                    name: "patient",
                    type: "Patient",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'vaccinations',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "patientId" },
                }, vaccinationsValuesId: {
                    name: "vaccinationsValuesId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'vaccinationsValues',
                }, vaccinationsValues: {
                    name: "vaccinationsValues",
                    type: "VaccinationsValues",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'vaccinations',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "vaccinationsValuesId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "vaccinations" }] }],
        },
        vaccinationsValues: {
            name: 'VaccinationsValues', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, value: {
                    name: "value",
                    type: "String",
                    attributes: [{ "name": "@unique", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, vaccinations: {
                    name: "vaccinations",
                    type: "Vaccinations",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'vaccinationsValues',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, value: {
                    name: "value",
                    fields: ["value"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "create,read,update" }, { "value": true }] }, { "name": "@@map", "args": [{ "value": "vaccinations_values" }] }],
        },
        allergies: {
            name: 'Allergies', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Allergies$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Allergies$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$Allergies$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, patientId: {
                    name: "patientId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'patient',
                }, patient: {
                    name: "patient",
                    type: "Patient",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'allergies',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "patientId" },
                }, allergiesValuesId: {
                    name: "allergiesValuesId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'allergiesValues',
                }, allergiesValues: {
                    name: "allergiesValues",
                    type: "AllergiesValues",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'allergies',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "allergiesValuesId" },
                }, appointmentId: {
                    name: "appointmentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'appointment',
                }, appointment: {
                    name: "appointment",
                    type: "Appointment",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'allergies',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "appointmentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "allergies" }] }],
        },
        allergiesValues: {
            name: 'AllergiesValues', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, value: {
                    name: "value",
                    type: "String",
                    attributes: [{ "name": "@unique", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, allergies: {
                    name: "allergies",
                    type: "Allergies",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'allergiesValues',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, value: {
                    name: "value",
                    fields: ["value"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "create,read,update" }, { "value": true }] }, { "name": "@@map", "args": [{ "value": "allergies_values" }] }],
        },
        medications: {
            name: 'Medications', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Medications$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Medications$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$Medications$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, patientId: {
                    name: "patientId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'patient',
                }, patient: {
                    name: "patient",
                    type: "Patient",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'medications',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "patientId" },
                }, medicationsValuesId: {
                    name: "medicationsValuesId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'medicationsValues',
                }, medicationsValues: {
                    name: "medicationsValues",
                    type: "MedicationsValues",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'medications',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "medicationsValuesId" },
                }, appointmentId: {
                    name: "appointmentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'appointment',
                }, appointment: {
                    name: "appointment",
                    type: "Appointment",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'medications',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "appointmentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "medications" }] }],
        },
        medicationsValues: {
            name: 'MedicationsValues', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, value: {
                    name: "value",
                    type: "String",
                    attributes: [{ "name": "@unique", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, medications: {
                    name: "medications",
                    type: "Medications",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'medicationsValues',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, value: {
                    name: "value",
                    fields: ["value"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "create,read,update" }, { "value": true }] }, { "name": "@@map", "args": [{ "value": "medications_values" }] }],
        },
        examResults: {
            name: 'ExamResults', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$ExamResults$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$ExamResults$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$ExamResults$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, patientId: {
                    name: "patientId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'patient',
                }, patient: {
                    name: "patient",
                    type: "Patient",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'examResults',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "patientId" },
                }, examResultsValuesId: {
                    name: "examResultsValuesId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'examResultsValues',
                }, examResultsValues: {
                    name: "examResultsValues",
                    type: "ExamResultsValues",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'examResults',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "examResultsValuesId" },
                }, result: {
                    name: "result",
                    type: "String",
                }, date: {
                    name: "date",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "exam_results" }] }],
        },
        examResultsValues: {
            name: 'ExamResultsValues', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, value: {
                    name: "value",
                    type: "String",
                    attributes: [{ "name": "@unique", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, examResults: {
                    name: "examResults",
                    type: "ExamResults",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'examResultsValues',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, value: {
                    name: "value",
                    fields: ["value"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "create,read,update" }, { "value": true }] }, { "name": "@@map", "args": [{ "value": "exam_results_values" }] }],
        },
        comorbidities: {
            name: 'Comorbidities', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Comorbidities$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Comorbidities$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$Comorbidities$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, patientId: {
                    name: "patientId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'patient',
                }, patient: {
                    name: "patient",
                    type: "Patient",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'comorbidities',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "patientId" },
                }, comorbiditiesValuesId: {
                    name: "comorbiditiesValuesId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'comorbiditiesValues',
                }, comorbiditiesValues: {
                    name: "comorbiditiesValues",
                    type: "ComorbiditiesValues",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'comorbidities',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "comorbiditiesValuesId" },
                }, appointmentId: {
                    name: "appointmentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'appointment',
                }, appointment: {
                    name: "appointment",
                    type: "Appointment",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'comorbidities',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "appointmentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "comorbidities" }] }],
        },
        comorbiditiesValues: {
            name: 'ComorbiditiesValues', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, value: {
                    name: "value",
                    type: "String",
                    attributes: [{ "name": "@unique", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, comorbidities: {
                    name: "comorbidities",
                    type: "Comorbidities",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'comorbiditiesValues',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, value: {
                    name: "value",
                    fields: ["value"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "create,read,update,delete" }, { "value": true }] }, { "name": "@@map", "args": [{ "value": "comorbidities_values" }] }],
        },
        surgeries: {
            name: 'Surgeries', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Surgeries$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Surgeries$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$Surgeries$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, patientId: {
                    name: "patientId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'patient',
                }, patient: {
                    name: "patient",
                    type: "Patient",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'surgeries',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "patientId" },
                }, surgeriesValuesId: {
                    name: "surgeriesValuesId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'surgeriesValues',
                }, surgeriesValues: {
                    name: "surgeriesValues",
                    type: "SurgeriesValues",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'surgeries',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "surgeriesValuesId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "surgeries" }] }],
        },
        surgeriesValues: {
            name: 'SurgeriesValues', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, value: {
                    name: "value",
                    type: "String",
                    attributes: [{ "name": "@unique", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, surgeries: {
                    name: "surgeries",
                    type: "Surgeries",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'surgeriesValues',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, value: {
                    name: "value",
                    fields: ["value"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "create,read,update,delete" }, { "value": true }] }, { "name": "@@map", "args": [{ "value": "surgeries_values" }] }],
        },
        healthPlans: {
            name: 'HealthPlans', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$HealthPlans$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$HealthPlans$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$HealthPlans$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, patientId: {
                    name: "patientId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'patient',
                }, patient: {
                    name: "patient",
                    type: "Patient",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'healthPlans',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "patientId" },
                }, healthPlansValuesId: {
                    name: "healthPlansValuesId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'healthPlansValues',
                }, healthPlansValues: {
                    name: "healthPlansValues",
                    type: "HealthPlansValues",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'healthPlans',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "healthPlansValuesId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "health_plans" }] }],
        },
        healthPlansValues: {
            name: 'HealthPlansValues', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, value: {
                    name: "value",
                    type: "String",
                    attributes: [{ "name": "@unique", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, healthPlans: {
                    name: "healthPlans",
                    type: "HealthPlans",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'healthPlansValues',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, value: {
                    name: "value",
                    fields: ["value"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "create,read,update,delete" }, { "value": true }] }, { "name": "@@map", "args": [{ "value": "health_plans_values" }] }],
        },
        defaultObjectiveInformation: {
            name: 'DefaultObjectiveInformation', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$DefaultObjectiveInformation$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$DefaultObjectiveInformation$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$DefaultObjectiveInformation$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, text: {
                    name: "text",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@map", "args": [{ "value": "default_objective_information" }] }],
        },
        eventCalendar: {
            name: 'EventCalendar', baseTypes: ['Asset'], fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "String",
                    inheritedFrom: "Asset",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                    inheritedFrom: "Asset",
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$EventCalendar$createdById,
                    isForeignKey: true,
                    relationField: 'createdByUser',
                    inheritedFrom: "Asset",
                }, createdByUser: {
                    name: "createdByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdAssets" }] }],
                    backLink: 'createdAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "createdById" },
                    inheritedFrom: "Asset",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                    inheritedFrom: "Asset",
                }, updatedById: {
                    name: "updatedById",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$EventCalendar$updatedById,
                    isForeignKey: true,
                    relationField: 'updatedByUser',
                    inheritedFrom: "Asset",
                }, updatedByUser: {
                    name: "updatedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "updatedAssets" }] }],
                    backLink: 'updatedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "updatedById" },
                    inheritedFrom: "Asset",
                }, deletedAt: {
                    name: "deletedAt",
                    type: "DateTime",
                    isOptional: true,
                    inheritedFrom: "Asset",
                }, deletedById: {
                    name: "deletedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'deletedByUser',
                    inheritedFrom: "Asset",
                }, deletedByUser: {
                    name: "deletedByUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "deletedAssets" }] }],
                    backLink: 'deletedAssets',
                    isRelationOwner: true,
                    onDeleteAction: 'SetNull',
                    foreignKeyMapping: { "id": "deletedById" },
                    inheritedFrom: "Asset",
                }, deleted: {
                    name: "deleted",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }, { "name": "@omit", "args": [] }],
                    inheritedFrom: "Asset",
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@allow", "args": [{ "value": "update" }, { "value": false }] }],
                    defaultValueProvider: $default$EventCalendar$organizationId,
                    isForeignKey: true,
                    relationField: 'organization',
                    inheritedFrom: "Asset",
                }, organization: {
                    name: "organization",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'assets',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "organizationId" },
                    inheritedFrom: "Asset",
                }, title: {
                    name: "title",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, start: {
                    name: "start",
                    type: "DateTime",
                }, end: {
                    name: "end",
                    type: "DateTime",
                }, allDay: {
                    name: "allDay",
                    type: "Boolean",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, eventType: {
                    name: "eventType",
                    type: "EventCalendarType",
                    isOptional: true,
                }, rrule: {
                    name: "rrule",
                    type: "String",
                    isOptional: true,
                }, appointmentId: {
                    name: "appointmentId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@unique", "args": [] }],
                    isForeignKey: true,
                    relationField: 'appointment',
                }, appointment: {
                    name: "appointment",
                    type: "Appointment",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'eventCalendar',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "appointmentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, appointmentId: {
                    name: "appointmentId",
                    fields: ["appointmentId"]
                },
            },
            attributes: [{ "name": "@@deny", "args": [{ "value": "read" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@deny", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "read,create,update" }] }, { "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@map", "args": [{ "value": "event_calendar" }] }],
        },

    },
    typeDefs: {
        auth: {
            name: 'Auth', fields: {
                userId: {
                    name: "userId",
                    type: "String",
                    attributes: [{ "name": "@id", "args": [] }],
                }, organizationId: {
                    name: "organizationId",
                    type: "String",
                    isOptional: true,
                }, organizationRole: {
                    name: "organizationRole",
                    type: "String",
                    isOptional: true,
                },
            },
        },

    },
    deleteCascade: {
        user: ['Session', 'Account', 'Member', 'Invitation'],
        organization: ['Asset', 'Member', 'Invitation', 'AppointmentCid', 'Appointment', 'Patient', 'Vaccinations', 'Allergies', 'Medications', 'ExamResults', 'Comorbidities', 'Surgeries', 'HealthPlans', 'DefaultObjectiveInformation', 'EventCalendar'],
        cid: ['AppointmentCid'],
        appointment: ['AppointmentCid', 'Allergies', 'Medications', 'Comorbidities', 'EventCalendar'],
        patient: ['Appointment', 'Vaccinations', 'Allergies', 'Medications', 'ExamResults', 'Comorbidities', 'Surgeries', 'HealthPlans'],
        vaccinationsValues: ['Vaccinations'],
        allergiesValues: ['Allergies'],
        medicationsValues: ['Medications'],
        examResultsValues: ['ExamResults'],
        comorbiditiesValues: ['Comorbidities'],
        surgeriesValues: ['Surgeries'],
        healthPlansValues: ['HealthPlans'],

    },
    shortNameMap: {
        delegate_aux_defaultObjectiveInformation: 'delegate_aux_defaultObjectiveInformati_0',
    }, authModel: 'Auth'

};

function $default$Asset$createdById(user: any): unknown {
    return user?.userId;
}

function $default$Asset$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$Asset$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$AppointmentCid$createdById(user: any): unknown {
    return user?.userId;
}

function $default$AppointmentCid$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$AppointmentCid$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$Appointment$createdById(user: any): unknown {
    return user?.userId;
}

function $default$Appointment$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$Appointment$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$Patient$createdById(user: any): unknown {
    return user?.userId;
}

function $default$Patient$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$Patient$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$Vaccinations$createdById(user: any): unknown {
    return user?.userId;
}

function $default$Vaccinations$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$Vaccinations$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$Allergies$createdById(user: any): unknown {
    return user?.userId;
}

function $default$Allergies$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$Allergies$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$Medications$createdById(user: any): unknown {
    return user?.userId;
}

function $default$Medications$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$Medications$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$ExamResults$createdById(user: any): unknown {
    return user?.userId;
}

function $default$ExamResults$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$ExamResults$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$Comorbidities$createdById(user: any): unknown {
    return user?.userId;
}

function $default$Comorbidities$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$Comorbidities$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$Surgeries$createdById(user: any): unknown {
    return user?.userId;
}

function $default$Surgeries$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$Surgeries$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$HealthPlans$createdById(user: any): unknown {
    return user?.userId;
}

function $default$HealthPlans$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$HealthPlans$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$DefaultObjectiveInformation$createdById(user: any): unknown {
    return user?.userId;
}

function $default$DefaultObjectiveInformation$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$DefaultObjectiveInformation$organizationId(user: any): unknown {
    return user?.organizationId;
}

function $default$EventCalendar$createdById(user: any): unknown {
    return user?.userId;
}

function $default$EventCalendar$updatedById(user: any): unknown {
    return user?.userId;
}

function $default$EventCalendar$organizationId(user: any): unknown {
    return user?.organizationId;
}
export default metadata;
