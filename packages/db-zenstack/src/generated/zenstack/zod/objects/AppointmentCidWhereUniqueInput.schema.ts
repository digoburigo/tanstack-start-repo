/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { AppointmentCidAppointmentIdCidIdCompoundUniqueInputObjectSchema } from './AppointmentCidAppointmentIdCidIdCompoundUniqueInput.schema';
import { AppointmentCidWhereInputObjectSchema } from './AppointmentCidWhereInput.schema';
import { StringFilterObjectSchema } from './StringFilter.schema';
import { DateTimeFilterObjectSchema } from './DateTimeFilter.schema';
import { StringNullableFilterObjectSchema } from './StringNullableFilter.schema';
import { DateTimeNullableFilterObjectSchema } from './DateTimeNullableFilter.schema';
import { BoolFilterObjectSchema } from './BoolFilter.schema';
import { UserNullableScalarRelationFilterObjectSchema } from './UserNullableScalarRelationFilter.schema';
import { UserWhereInputObjectSchema } from './UserWhereInput.schema';
import { OrganizationNullableScalarRelationFilterObjectSchema } from './OrganizationNullableScalarRelationFilter.schema';
import { OrganizationWhereInputObjectSchema } from './OrganizationWhereInput.schema';
import { AppointmentScalarRelationFilterObjectSchema } from './AppointmentScalarRelationFilter.schema';
import { AppointmentWhereInputObjectSchema } from './AppointmentWhereInput.schema';
import { CidScalarRelationFilterObjectSchema } from './CidScalarRelationFilter.schema';
import { CidWhereInputObjectSchema } from './CidWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.AppointmentCidWhereUniqueInput>;
export const AppointmentCidWhereUniqueInputObjectSchema: SchemaType = z.object({
    id: z.string().optional().optional(), appointmentId_cidId: z.lazy(() => AppointmentCidAppointmentIdCidIdCompoundUniqueInputObjectSchema).optional().optional(), AND: z.union([z.lazy(() => AppointmentCidWhereInputObjectSchema),
    z.lazy(() => AppointmentCidWhereInputObjectSchema).array()]).optional(), OR: z.lazy(() => AppointmentCidWhereInputObjectSchema).array().optional().optional(), NOT: z.union([z.lazy(() => AppointmentCidWhereInputObjectSchema),
    z.lazy(() => AppointmentCidWhereInputObjectSchema).array()]).optional(), type: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), createdAt: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), createdById: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), updatedAt: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), updatedById: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), deletedAt: z.union([z.lazy(() => DateTimeNullableFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()]),
    z.null()]).optional().nullable(), deletedById: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), deleted: z.union([z.lazy(() => BoolFilterObjectSchema),
    z.boolean()]).optional(), organizationId: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), appointmentId: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), cidId: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), createdByUser: z.union([z.lazy(() => UserNullableScalarRelationFilterObjectSchema),
    z.lazy(() => UserWhereInputObjectSchema),
    z.null()]).optional().nullable(), updatedByUser: z.union([z.lazy(() => UserNullableScalarRelationFilterObjectSchema),
    z.lazy(() => UserWhereInputObjectSchema),
    z.null()]).optional().nullable(), deletedByUser: z.union([z.lazy(() => UserNullableScalarRelationFilterObjectSchema),
    z.lazy(() => UserWhereInputObjectSchema),
    z.null()]).optional().nullable(), organization: z.union([z.lazy(() => OrganizationNullableScalarRelationFilterObjectSchema),
    z.lazy(() => OrganizationWhereInputObjectSchema),
    z.null()]).optional().nullable(), appointment: z.union([z.lazy(() => AppointmentScalarRelationFilterObjectSchema),
    z.lazy(() => AppointmentWhereInputObjectSchema)]).optional(), cid: z.union([z.lazy(() => CidScalarRelationFilterObjectSchema),
    z.lazy(() => CidWhereInputObjectSchema)]).optional()
}).strict() as SchemaType;
