/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { EventCalendarCreateWithoutAppointmentInputObjectSchema } from './EventCalendarCreateWithoutAppointmentInput.schema';
import { EventCalendarUncheckedCreateWithoutAppointmentInputObjectSchema } from './EventCalendarUncheckedCreateWithoutAppointmentInput.schema';
import { EventCalendarCreateOrConnectWithoutAppointmentInputObjectSchema } from './EventCalendarCreateOrConnectWithoutAppointmentInput.schema';
import { EventCalendarUpsertWithoutAppointmentInputObjectSchema } from './EventCalendarUpsertWithoutAppointmentInput.schema';
import { EventCalendarWhereInputObjectSchema } from './EventCalendarWhereInput.schema';
import { EventCalendarWhereUniqueInputObjectSchema } from './EventCalendarWhereUniqueInput.schema';
import { EventCalendarUpdateToOneWithWhereWithoutAppointmentInputObjectSchema } from './EventCalendarUpdateToOneWithWhereWithoutAppointmentInput.schema';
import { EventCalendarUpdateWithoutAppointmentInputObjectSchema } from './EventCalendarUpdateWithoutAppointmentInput.schema';
import { EventCalendarUncheckedUpdateWithoutAppointmentInputObjectSchema } from './EventCalendarUncheckedUpdateWithoutAppointmentInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.EventCalendarUpdateOneWithoutAppointmentNestedInput>;
export const EventCalendarUpdateOneWithoutAppointmentNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => EventCalendarCreateWithoutAppointmentInputObjectSchema), z.lazy(() => EventCalendarUncheckedCreateWithoutAppointmentInputObjectSchema)]).optional(), connectOrCreate: z.lazy(() => EventCalendarCreateOrConnectWithoutAppointmentInputObjectSchema).optional().optional(), upsert: z.lazy(() => EventCalendarUpsertWithoutAppointmentInputObjectSchema).optional().optional(), disconnect: z.union([z.boolean(),
    z.lazy(() => EventCalendarWhereInputObjectSchema)]).optional(), delete: z.union([z.boolean(),
    z.lazy(() => EventCalendarWhereInputObjectSchema)]).optional(), connect: z.lazy(() => EventCalendarWhereUniqueInputObjectSchema).optional().optional(), update: z.union([z.lazy(() => EventCalendarUpdateToOneWithWhereWithoutAppointmentInputObjectSchema), z.lazy(() => EventCalendarUpdateWithoutAppointmentInputObjectSchema), z.lazy(() => EventCalendarUncheckedUpdateWithoutAppointmentInputObjectSchema)]).optional()
}).strict() as SchemaType;
