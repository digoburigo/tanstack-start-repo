/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { StringFilterObjectSchema } from './StringFilter.schema';
import { DateTimeFilterObjectSchema } from './DateTimeFilter.schema';
import { StringNullableFilterObjectSchema } from './StringNullableFilter.schema';
import { DateTimeNullableFilterObjectSchema } from './DateTimeNullableFilter.schema';
import { BoolFilterObjectSchema } from './BoolFilter.schema';
import { BoolNullableFilterObjectSchema } from './BoolNullableFilter.schema';
import { EnumEventCalendarTypeNullableFilterObjectSchema } from './EnumEventCalendarTypeNullableFilter.schema';
import { EventCalendarTypeSchema } from '../enums/EventCalendarType.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.EventCalendarScalarWhereInput>;
export const EventCalendarScalarWhereInputObjectSchema: SchemaType = z.object({
    AND: z.union([z.lazy(() => EventCalendarScalarWhereInputObjectSchema),
    z.lazy(() => EventCalendarScalarWhereInputObjectSchema).array()]).optional(), OR: z.lazy(() => EventCalendarScalarWhereInputObjectSchema).array().optional().optional(), NOT: z.union([z.lazy(() => EventCalendarScalarWhereInputObjectSchema),
    z.lazy(() => EventCalendarScalarWhereInputObjectSchema).array()]).optional(), id: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), type: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), createdAt: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), createdById: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), updatedAt: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), updatedById: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), deletedAt: z.union([z.lazy(() => DateTimeNullableFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()]),
    z.null()]).optional().nullable(), deletedById: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), deleted: z.union([z.lazy(() => BoolFilterObjectSchema),
    z.boolean()]).optional(), organizationId: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), title: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), description: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), start: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), end: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), allDay: z.union([z.lazy(() => BoolNullableFilterObjectSchema),
    z.boolean(),
    z.null()]).optional().nullable(), eventType: z.union([z.lazy(() => EnumEventCalendarTypeNullableFilterObjectSchema),
    z.lazy(() => EventCalendarTypeSchema),
    z.null()]).optional().nullable(), rrule: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), appointmentId: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable()
}).strict() as SchemaType;
