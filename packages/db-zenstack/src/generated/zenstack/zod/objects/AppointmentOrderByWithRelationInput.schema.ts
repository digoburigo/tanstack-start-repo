/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SortOrderSchema } from '../enums/SortOrder.schema';
import { SortOrderInputObjectSchema } from './SortOrderInput.schema';
import { UserOrderByWithRelationInputObjectSchema } from './UserOrderByWithRelationInput.schema';
import { OrganizationOrderByWithRelationInputObjectSchema } from './OrganizationOrderByWithRelationInput.schema';
import { AppointmentCidOrderByRelationAggregateInputObjectSchema } from './AppointmentCidOrderByRelationAggregateInput.schema';
import { AllergiesOrderByRelationAggregateInputObjectSchema } from './AllergiesOrderByRelationAggregateInput.schema';
import { MedicationsOrderByRelationAggregateInputObjectSchema } from './MedicationsOrderByRelationAggregateInput.schema';
import { ComorbiditiesOrderByRelationAggregateInputObjectSchema } from './ComorbiditiesOrderByRelationAggregateInput.schema';
import { PatientOrderByWithRelationInputObjectSchema } from './PatientOrderByWithRelationInput.schema';
import { EventCalendarOrderByWithRelationInputObjectSchema } from './EventCalendarOrderByWithRelationInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.AppointmentOrderByWithRelationInput>;
export const AppointmentOrderByWithRelationInputObjectSchema: SchemaType = z.object({
    id: z.lazy(() => SortOrderSchema).optional().optional(), type: z.lazy(() => SortOrderSchema).optional().optional(), createdAt: z.lazy(() => SortOrderSchema).optional().optional(), createdById: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), updatedAt: z.lazy(() => SortOrderSchema).optional().optional(), updatedById: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), deletedAt: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), deletedById: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), deleted: z.lazy(() => SortOrderSchema).optional().optional(), organizationId: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), motive: z.lazy(() => SortOrderSchema).optional().optional(), subjective: z.lazy(() => SortOrderSchema).optional().optional(), objective: z.lazy(() => SortOrderSchema).optional().optional(), evaluation: z.lazy(() => SortOrderSchema).optional().optional(), plan: z.lazy(() => SortOrderSchema).optional().optional(), startDate: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), endDate: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), sickNoteDays: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), category: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), status: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), followUpId: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), patientId: z.lazy(() => SortOrderSchema).optional().optional(), createdByUser: z.lazy(() => UserOrderByWithRelationInputObjectSchema).optional().optional(), updatedByUser: z.lazy(() => UserOrderByWithRelationInputObjectSchema).optional().optional(), deletedByUser: z.lazy(() => UserOrderByWithRelationInputObjectSchema).optional().optional(), organization: z.lazy(() => OrganizationOrderByWithRelationInputObjectSchema).optional().optional(), followUp: z.lazy(() => AppointmentOrderByWithRelationInputObjectSchema).optional().optional(), predecessorFollowUp: z.lazy(() => AppointmentOrderByWithRelationInputObjectSchema).optional().optional(), cids: z.lazy(() => AppointmentCidOrderByRelationAggregateInputObjectSchema).optional().optional(), allergies: z.lazy(() => AllergiesOrderByRelationAggregateInputObjectSchema).optional().optional(), medications: z.lazy(() => MedicationsOrderByRelationAggregateInputObjectSchema).optional().optional(), comorbidities: z.lazy(() => ComorbiditiesOrderByRelationAggregateInputObjectSchema).optional().optional(), patient: z.lazy(() => PatientOrderByWithRelationInputObjectSchema).optional().optional(), eventCalendar: z.lazy(() => EventCalendarOrderByWithRelationInputObjectSchema).optional().optional()
}).strict() as SchemaType;
