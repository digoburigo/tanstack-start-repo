/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { UserDefaultArgsObjectSchema } from './UserDefaultArgs.schema';
import { OrganizationDefaultArgsObjectSchema } from './OrganizationDefaultArgs.schema';
import { AppointmentDefaultArgsObjectSchema } from './AppointmentDefaultArgs.schema';
import { AppointmentCidInputSchema } from '../input/AppointmentCidInput.schema';
import { AllergiesInputSchema } from '../input/AllergiesInput.schema';
import { MedicationsInputSchema } from '../input/MedicationsInput.schema';
import { ComorbiditiesInputSchema } from '../input/ComorbiditiesInput.schema';
import { PatientDefaultArgsObjectSchema } from './PatientDefaultArgs.schema';
import { EventCalendarDefaultArgsObjectSchema } from './EventCalendarDefaultArgs.schema';
import { AppointmentCountOutputTypeDefaultArgsObjectSchema } from './AppointmentCountOutputTypeDefaultArgs.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.AppointmentInclude>;
export const AppointmentIncludeObjectSchema: SchemaType = z.object({
    createdByUser: z.union([z.boolean(),
    z.lazy(() => UserDefaultArgsObjectSchema)]).optional(), updatedByUser: z.union([z.boolean(),
    z.lazy(() => UserDefaultArgsObjectSchema)]).optional(), deletedByUser: z.union([z.boolean(),
    z.lazy(() => UserDefaultArgsObjectSchema)]).optional(), organization: z.union([z.boolean(),
    z.lazy(() => OrganizationDefaultArgsObjectSchema)]).optional(), followUp: z.union([z.boolean(),
    z.lazy(() => AppointmentDefaultArgsObjectSchema)]).optional(), predecessorFollowUp: z.union([z.boolean(),
    z.lazy(() => AppointmentDefaultArgsObjectSchema)]).optional(), cids: z.union([z.boolean(),
    z.lazy(() => AppointmentCidInputSchema.findMany)]).optional(), allergies: z.union([z.boolean(),
    z.lazy(() => AllergiesInputSchema.findMany)]).optional(), medications: z.union([z.boolean(),
    z.lazy(() => MedicationsInputSchema.findMany)]).optional(), comorbidities: z.union([z.boolean(),
    z.lazy(() => ComorbiditiesInputSchema.findMany)]).optional(), patient: z.union([z.boolean(),
    z.lazy(() => PatientDefaultArgsObjectSchema)]).optional(), eventCalendar: z.union([z.boolean(),
    z.lazy(() => EventCalendarDefaultArgsObjectSchema)]).optional(), _count: z.union([z.boolean(),
    z.lazy(() => AppointmentCountOutputTypeDefaultArgsObjectSchema)]).optional()
}).strict() as SchemaType;
