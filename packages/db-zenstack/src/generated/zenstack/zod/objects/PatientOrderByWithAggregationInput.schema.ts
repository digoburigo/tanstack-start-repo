/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SortOrderSchema } from '../enums/SortOrder.schema';
import { SortOrderInputObjectSchema } from './SortOrderInput.schema';
import { PatientCountOrderByAggregateInputObjectSchema } from './PatientCountOrderByAggregateInput.schema';
import { PatientMaxOrderByAggregateInputObjectSchema } from './PatientMaxOrderByAggregateInput.schema';
import { PatientMinOrderByAggregateInputObjectSchema } from './PatientMinOrderByAggregateInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.PatientOrderByWithAggregationInput>;
export const PatientOrderByWithAggregationInputObjectSchema: SchemaType = z.object({
    id: z.lazy(() => SortOrderSchema).optional().optional(), type: z.lazy(() => SortOrderSchema).optional().optional(), createdAt: z.lazy(() => SortOrderSchema).optional().optional(), createdById: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), updatedAt: z.lazy(() => SortOrderSchema).optional().optional(), updatedById: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), deletedAt: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), deletedById: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), deleted: z.lazy(() => SortOrderSchema).optional().optional(), organizationId: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), name: z.lazy(() => SortOrderSchema).optional().optional(), cpf: z.lazy(() => SortOrderSchema).optional().optional(), cellphone: z.lazy(() => SortOrderSchema).optional().optional(), email: z.lazy(() => SortOrderSchema).optional().optional(), sex: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), responsible: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), nationality: z.lazy(() => SortOrderSchema).optional().optional(), race: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), state: z.lazy(() => SortOrderSchema).optional().optional(), city: z.lazy(() => SortOrderSchema).optional().optional(), zipcode: z.lazy(() => SortOrderSchema).optional().optional(), neighborhood: z.lazy(() => SortOrderSchema).optional().optional(), street: z.lazy(() => SortOrderSchema).optional().optional(), number: z.lazy(() => SortOrderSchema).optional().optional(), complement: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), occupation: z.lazy(() => SortOrderSchema).optional().optional(), sexualOrientation: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), civilStatus: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), bloodType: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), genderIdentity: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), password: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), userId: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), _count: z.lazy(() => PatientCountOrderByAggregateInputObjectSchema).optional().optional(), _max: z.lazy(() => PatientMaxOrderByAggregateInputObjectSchema).optional().optional(), _min: z.lazy(() => PatientMinOrderByAggregateInputObjectSchema).optional().optional()
}).strict() as SchemaType;
