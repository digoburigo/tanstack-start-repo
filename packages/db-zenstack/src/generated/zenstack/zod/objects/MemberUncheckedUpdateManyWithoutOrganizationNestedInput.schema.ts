/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { MemberCreateWithoutOrganizationInputObjectSchema } from './MemberCreateWithoutOrganizationInput.schema';
import { MemberUncheckedCreateWithoutOrganizationInputObjectSchema } from './MemberUncheckedCreateWithoutOrganizationInput.schema';
import { MemberCreateOrConnectWithoutOrganizationInputObjectSchema } from './MemberCreateOrConnectWithoutOrganizationInput.schema';
import { MemberUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema } from './MemberUpsertWithWhereUniqueWithoutOrganizationInput.schema';
import { MemberCreateManyOrganizationInputEnvelopeObjectSchema } from './MemberCreateManyOrganizationInputEnvelope.schema';
import { MemberWhereUniqueInputObjectSchema } from './MemberWhereUniqueInput.schema';
import { MemberUpdateWithWhereUniqueWithoutOrganizationInputObjectSchema } from './MemberUpdateWithWhereUniqueWithoutOrganizationInput.schema';
import { MemberUpdateManyWithWhereWithoutOrganizationInputObjectSchema } from './MemberUpdateManyWithWhereWithoutOrganizationInput.schema';
import { MemberScalarWhereInputObjectSchema } from './MemberScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.MemberUncheckedUpdateManyWithoutOrganizationNestedInput>;
export const MemberUncheckedUpdateManyWithoutOrganizationNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => MemberCreateWithoutOrganizationInputObjectSchema), z.lazy(() => MemberCreateWithoutOrganizationInputObjectSchema).array(), z.lazy(() => MemberUncheckedCreateWithoutOrganizationInputObjectSchema), z.lazy(() => MemberUncheckedCreateWithoutOrganizationInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => MemberCreateOrConnectWithoutOrganizationInputObjectSchema),
    z.lazy(() => MemberCreateOrConnectWithoutOrganizationInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => MemberUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema),
    z.lazy(() => MemberUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema).array()]).optional(), createMany: z.lazy(() => MemberCreateManyOrganizationInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => MemberWhereUniqueInputObjectSchema),
    z.lazy(() => MemberWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => MemberWhereUniqueInputObjectSchema),
    z.lazy(() => MemberWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => MemberWhereUniqueInputObjectSchema),
    z.lazy(() => MemberWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => MemberWhereUniqueInputObjectSchema),
    z.lazy(() => MemberWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => MemberUpdateWithWhereUniqueWithoutOrganizationInputObjectSchema),
    z.lazy(() => MemberUpdateWithWhereUniqueWithoutOrganizationInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => MemberUpdateManyWithWhereWithoutOrganizationInputObjectSchema),
    z.lazy(() => MemberUpdateManyWithWhereWithoutOrganizationInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => MemberScalarWhereInputObjectSchema),
    z.lazy(() => MemberScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
