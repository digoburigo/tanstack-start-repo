/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { PatientUpdateWithoutExamResultsInputObjectSchema } from './PatientUpdateWithoutExamResultsInput.schema';
import { PatientUncheckedUpdateWithoutExamResultsInputObjectSchema } from './PatientUncheckedUpdateWithoutExamResultsInput.schema';
import { PatientCreateWithoutExamResultsInputObjectSchema } from './PatientCreateWithoutExamResultsInput.schema';
import { PatientUncheckedCreateWithoutExamResultsInputObjectSchema } from './PatientUncheckedCreateWithoutExamResultsInput.schema';
import { PatientWhereInputObjectSchema } from './PatientWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.PatientUpsertWithoutExamResultsInput>;
export const PatientUpsertWithoutExamResultsInputObjectSchema: SchemaType = z.object({
    update: z.union([z.lazy(() => PatientUpdateWithoutExamResultsInputObjectSchema), z.lazy(() => PatientUncheckedUpdateWithoutExamResultsInputObjectSchema)]), create: z.union([z.lazy(() => PatientCreateWithoutExamResultsInputObjectSchema), z.lazy(() => PatientUncheckedCreateWithoutExamResultsInputObjectSchema)]), where: z.lazy(() => PatientWhereInputObjectSchema).optional().optional()
}).strict() as SchemaType;
