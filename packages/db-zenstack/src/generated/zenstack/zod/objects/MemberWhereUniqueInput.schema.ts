/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { MemberWhereInputObjectSchema } from './MemberWhereInput.schema';
import { StringFilterObjectSchema } from './StringFilter.schema';
import { DateTimeFilterObjectSchema } from './DateTimeFilter.schema';
import { OrganizationScalarRelationFilterObjectSchema } from './OrganizationScalarRelationFilter.schema';
import { OrganizationWhereInputObjectSchema } from './OrganizationWhereInput.schema';
import { UserScalarRelationFilterObjectSchema } from './UserScalarRelationFilter.schema';
import { UserWhereInputObjectSchema } from './UserWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.MemberWhereUniqueInput>;
export const MemberWhereUniqueInputObjectSchema: SchemaType = z.object({
    id: z.string().optional().optional(), AND: z.union([z.lazy(() => MemberWhereInputObjectSchema),
    z.lazy(() => MemberWhereInputObjectSchema).array()]).optional(), OR: z.lazy(() => MemberWhereInputObjectSchema).array().optional().optional(), NOT: z.union([z.lazy(() => MemberWhereInputObjectSchema),
    z.lazy(() => MemberWhereInputObjectSchema).array()]).optional(), organizationId: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), userId: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), role: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), createdAt: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), updatedAt: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), organization: z.union([z.lazy(() => OrganizationScalarRelationFilterObjectSchema),
    z.lazy(() => OrganizationWhereInputObjectSchema)]).optional(), user: z.union([z.lazy(() => UserScalarRelationFilterObjectSchema),
    z.lazy(() => UserWhereInputObjectSchema)]).optional()
}).strict() as SchemaType;
