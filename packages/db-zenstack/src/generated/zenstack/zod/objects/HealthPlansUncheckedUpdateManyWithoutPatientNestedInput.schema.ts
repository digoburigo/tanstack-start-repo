/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { HealthPlansCreateWithoutPatientInputObjectSchema } from './HealthPlansCreateWithoutPatientInput.schema';
import { HealthPlansUncheckedCreateWithoutPatientInputObjectSchema } from './HealthPlansUncheckedCreateWithoutPatientInput.schema';
import { HealthPlansCreateOrConnectWithoutPatientInputObjectSchema } from './HealthPlansCreateOrConnectWithoutPatientInput.schema';
import { HealthPlansUpsertWithWhereUniqueWithoutPatientInputObjectSchema } from './HealthPlansUpsertWithWhereUniqueWithoutPatientInput.schema';
import { HealthPlansCreateManyPatientInputEnvelopeObjectSchema } from './HealthPlansCreateManyPatientInputEnvelope.schema';
import { HealthPlansWhereUniqueInputObjectSchema } from './HealthPlansWhereUniqueInput.schema';
import { HealthPlansUpdateWithWhereUniqueWithoutPatientInputObjectSchema } from './HealthPlansUpdateWithWhereUniqueWithoutPatientInput.schema';
import { HealthPlansUpdateManyWithWhereWithoutPatientInputObjectSchema } from './HealthPlansUpdateManyWithWhereWithoutPatientInput.schema';
import { HealthPlansScalarWhereInputObjectSchema } from './HealthPlansScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.HealthPlansUncheckedUpdateManyWithoutPatientNestedInput>;
export const HealthPlansUncheckedUpdateManyWithoutPatientNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => HealthPlansCreateWithoutPatientInputObjectSchema), z.lazy(() => HealthPlansCreateWithoutPatientInputObjectSchema).array(), z.lazy(() => HealthPlansUncheckedCreateWithoutPatientInputObjectSchema), z.lazy(() => HealthPlansUncheckedCreateWithoutPatientInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => HealthPlansCreateOrConnectWithoutPatientInputObjectSchema),
    z.lazy(() => HealthPlansCreateOrConnectWithoutPatientInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => HealthPlansUpsertWithWhereUniqueWithoutPatientInputObjectSchema),
    z.lazy(() => HealthPlansUpsertWithWhereUniqueWithoutPatientInputObjectSchema).array()]).optional(), createMany: z.lazy(() => HealthPlansCreateManyPatientInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => HealthPlansUpdateWithWhereUniqueWithoutPatientInputObjectSchema),
    z.lazy(() => HealthPlansUpdateWithWhereUniqueWithoutPatientInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => HealthPlansUpdateManyWithWhereWithoutPatientInputObjectSchema),
    z.lazy(() => HealthPlansUpdateManyWithWhereWithoutPatientInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => HealthPlansScalarWhereInputObjectSchema),
    z.lazy(() => HealthPlansScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
