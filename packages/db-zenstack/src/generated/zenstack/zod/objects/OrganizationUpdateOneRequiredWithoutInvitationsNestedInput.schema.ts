/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { OrganizationCreateWithoutInvitationsInputObjectSchema } from './OrganizationCreateWithoutInvitationsInput.schema';
import { OrganizationUncheckedCreateWithoutInvitationsInputObjectSchema } from './OrganizationUncheckedCreateWithoutInvitationsInput.schema';
import { OrganizationCreateOrConnectWithoutInvitationsInputObjectSchema } from './OrganizationCreateOrConnectWithoutInvitationsInput.schema';
import { OrganizationUpsertWithoutInvitationsInputObjectSchema } from './OrganizationUpsertWithoutInvitationsInput.schema';
import { OrganizationWhereUniqueInputObjectSchema } from './OrganizationWhereUniqueInput.schema';
import { OrganizationUpdateToOneWithWhereWithoutInvitationsInputObjectSchema } from './OrganizationUpdateToOneWithWhereWithoutInvitationsInput.schema';
import { OrganizationUpdateWithoutInvitationsInputObjectSchema } from './OrganizationUpdateWithoutInvitationsInput.schema';
import { OrganizationUncheckedUpdateWithoutInvitationsInputObjectSchema } from './OrganizationUncheckedUpdateWithoutInvitationsInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.OrganizationUpdateOneRequiredWithoutInvitationsNestedInput>;
export const OrganizationUpdateOneRequiredWithoutInvitationsNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => OrganizationCreateWithoutInvitationsInputObjectSchema), z.lazy(() => OrganizationUncheckedCreateWithoutInvitationsInputObjectSchema)]).optional(), connectOrCreate: z.lazy(() => OrganizationCreateOrConnectWithoutInvitationsInputObjectSchema).optional().optional(), upsert: z.lazy(() => OrganizationUpsertWithoutInvitationsInputObjectSchema).optional().optional(), connect: z.lazy(() => OrganizationWhereUniqueInputObjectSchema).optional().optional(), update: z.union([z.lazy(() => OrganizationUpdateToOneWithWhereWithoutInvitationsInputObjectSchema), z.lazy(() => OrganizationUpdateWithoutInvitationsInputObjectSchema), z.lazy(() => OrganizationUncheckedUpdateWithoutInvitationsInputObjectSchema)]).optional()
}).strict() as SchemaType;
