/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SurgeriesValuesCreateWithoutSurgeriesInputObjectSchema } from './SurgeriesValuesCreateWithoutSurgeriesInput.schema';
import { SurgeriesValuesUncheckedCreateWithoutSurgeriesInputObjectSchema } from './SurgeriesValuesUncheckedCreateWithoutSurgeriesInput.schema';
import { SurgeriesValuesCreateOrConnectWithoutSurgeriesInputObjectSchema } from './SurgeriesValuesCreateOrConnectWithoutSurgeriesInput.schema';
import { SurgeriesValuesWhereUniqueInputObjectSchema } from './SurgeriesValuesWhereUniqueInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.SurgeriesValuesCreateNestedOneWithoutSurgeriesInput>;
export const SurgeriesValuesCreateNestedOneWithoutSurgeriesInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => SurgeriesValuesCreateWithoutSurgeriesInputObjectSchema), z.lazy(() => SurgeriesValuesUncheckedCreateWithoutSurgeriesInputObjectSchema)]).optional(), connectOrCreate: z.lazy(() => SurgeriesValuesCreateOrConnectWithoutSurgeriesInputObjectSchema).optional().optional(), connect: z.lazy(() => SurgeriesValuesWhereUniqueInputObjectSchema).optional().optional()
}).strict() as SchemaType;
