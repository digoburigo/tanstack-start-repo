/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { ExamResultsCreateWithoutExamResultsValuesInputObjectSchema } from './ExamResultsCreateWithoutExamResultsValuesInput.schema';
import { ExamResultsUncheckedCreateWithoutExamResultsValuesInputObjectSchema } from './ExamResultsUncheckedCreateWithoutExamResultsValuesInput.schema';
import { ExamResultsCreateOrConnectWithoutExamResultsValuesInputObjectSchema } from './ExamResultsCreateOrConnectWithoutExamResultsValuesInput.schema';
import { ExamResultsUpsertWithWhereUniqueWithoutExamResultsValuesInputObjectSchema } from './ExamResultsUpsertWithWhereUniqueWithoutExamResultsValuesInput.schema';
import { ExamResultsCreateManyExamResultsValuesInputEnvelopeObjectSchema } from './ExamResultsCreateManyExamResultsValuesInputEnvelope.schema';
import { ExamResultsWhereUniqueInputObjectSchema } from './ExamResultsWhereUniqueInput.schema';
import { ExamResultsUpdateWithWhereUniqueWithoutExamResultsValuesInputObjectSchema } from './ExamResultsUpdateWithWhereUniqueWithoutExamResultsValuesInput.schema';
import { ExamResultsUpdateManyWithWhereWithoutExamResultsValuesInputObjectSchema } from './ExamResultsUpdateManyWithWhereWithoutExamResultsValuesInput.schema';
import { ExamResultsScalarWhereInputObjectSchema } from './ExamResultsScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.ExamResultsUncheckedUpdateManyWithoutExamResultsValuesNestedInput>;
export const ExamResultsUncheckedUpdateManyWithoutExamResultsValuesNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => ExamResultsCreateWithoutExamResultsValuesInputObjectSchema), z.lazy(() => ExamResultsCreateWithoutExamResultsValuesInputObjectSchema).array(), z.lazy(() => ExamResultsUncheckedCreateWithoutExamResultsValuesInputObjectSchema), z.lazy(() => ExamResultsUncheckedCreateWithoutExamResultsValuesInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => ExamResultsCreateOrConnectWithoutExamResultsValuesInputObjectSchema),
    z.lazy(() => ExamResultsCreateOrConnectWithoutExamResultsValuesInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => ExamResultsUpsertWithWhereUniqueWithoutExamResultsValuesInputObjectSchema),
    z.lazy(() => ExamResultsUpsertWithWhereUniqueWithoutExamResultsValuesInputObjectSchema).array()]).optional(), createMany: z.lazy(() => ExamResultsCreateManyExamResultsValuesInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => ExamResultsWhereUniqueInputObjectSchema),
    z.lazy(() => ExamResultsWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => ExamResultsWhereUniqueInputObjectSchema),
    z.lazy(() => ExamResultsWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => ExamResultsWhereUniqueInputObjectSchema),
    z.lazy(() => ExamResultsWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => ExamResultsWhereUniqueInputObjectSchema),
    z.lazy(() => ExamResultsWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => ExamResultsUpdateWithWhereUniqueWithoutExamResultsValuesInputObjectSchema),
    z.lazy(() => ExamResultsUpdateWithWhereUniqueWithoutExamResultsValuesInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => ExamResultsUpdateManyWithWhereWithoutExamResultsValuesInputObjectSchema),
    z.lazy(() => ExamResultsUpdateManyWithWhereWithoutExamResultsValuesInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => ExamResultsScalarWhereInputObjectSchema),
    z.lazy(() => ExamResultsScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
