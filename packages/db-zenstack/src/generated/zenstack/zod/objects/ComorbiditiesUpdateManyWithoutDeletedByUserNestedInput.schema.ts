/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { ComorbiditiesCreateWithoutDeletedByUserInputObjectSchema } from './ComorbiditiesCreateWithoutDeletedByUserInput.schema';
import { ComorbiditiesUncheckedCreateWithoutDeletedByUserInputObjectSchema } from './ComorbiditiesUncheckedCreateWithoutDeletedByUserInput.schema';
import { ComorbiditiesCreateOrConnectWithoutDeletedByUserInputObjectSchema } from './ComorbiditiesCreateOrConnectWithoutDeletedByUserInput.schema';
import { ComorbiditiesUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema } from './ComorbiditiesUpsertWithWhereUniqueWithoutDeletedByUserInput.schema';
import { ComorbiditiesCreateManyDeletedByUserInputEnvelopeObjectSchema } from './ComorbiditiesCreateManyDeletedByUserInputEnvelope.schema';
import { ComorbiditiesWhereUniqueInputObjectSchema } from './ComorbiditiesWhereUniqueInput.schema';
import { ComorbiditiesUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema } from './ComorbiditiesUpdateWithWhereUniqueWithoutDeletedByUserInput.schema';
import { ComorbiditiesUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema } from './ComorbiditiesUpdateManyWithWhereWithoutDeletedByUserInput.schema';
import { ComorbiditiesScalarWhereInputObjectSchema } from './ComorbiditiesScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.ComorbiditiesUpdateManyWithoutDeletedByUserNestedInput>;
export const ComorbiditiesUpdateManyWithoutDeletedByUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => ComorbiditiesCreateWithoutDeletedByUserInputObjectSchema), z.lazy(() => ComorbiditiesCreateWithoutDeletedByUserInputObjectSchema).array(), z.lazy(() => ComorbiditiesUncheckedCreateWithoutDeletedByUserInputObjectSchema), z.lazy(() => ComorbiditiesUncheckedCreateWithoutDeletedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => ComorbiditiesCreateOrConnectWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => ComorbiditiesCreateOrConnectWithoutDeletedByUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => ComorbiditiesUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => ComorbiditiesUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => ComorbiditiesCreateManyDeletedByUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema),
    z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema),
    z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema),
    z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema),
    z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => ComorbiditiesUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => ComorbiditiesUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => ComorbiditiesUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => ComorbiditiesUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => ComorbiditiesScalarWhereInputObjectSchema),
    z.lazy(() => ComorbiditiesScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
