/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SessionInputSchema } from '../input/SessionInput.schema';
import { AccountInputSchema } from '../input/AccountInput.schema';
import { MemberInputSchema } from '../input/MemberInput.schema';
import { InvitationInputSchema } from '../input/InvitationInput.schema';
import { PatientInputSchema } from '../input/PatientInput.schema';
import { AssetInputSchema } from '../input/AssetInput.schema';
import { UserCountOutputTypeDefaultArgsObjectSchema } from './UserCountOutputTypeDefaultArgs.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.UserInclude>;
export const UserIncludeObjectSchema: SchemaType = z.object({
    sessions: z.union([z.boolean(),
    z.lazy(() => SessionInputSchema.findMany)]).optional(), accounts: z.union([z.boolean(),
    z.lazy(() => AccountInputSchema.findMany)]).optional(), members: z.union([z.boolean(),
    z.lazy(() => MemberInputSchema.findMany)]).optional(), invitations: z.union([z.boolean(),
    z.lazy(() => InvitationInputSchema.findMany)]).optional(), patientUser: z.union([z.boolean(),
    z.lazy(() => PatientInputSchema.findMany)]).optional(), createdAssets: z.union([z.boolean(),
    z.lazy(() => AssetInputSchema.findMany)]).optional(), updatedAssets: z.union([z.boolean(),
    z.lazy(() => AssetInputSchema.findMany)]).optional(), deletedAssets: z.union([z.boolean(),
    z.lazy(() => AssetInputSchema.findMany)]).optional(), _count: z.union([z.boolean(),
    z.lazy(() => UserCountOutputTypeDefaultArgsObjectSchema)]).optional()
}).strict() as SchemaType;
