/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { StringFieldUpdateOperationsInputObjectSchema } from './StringFieldUpdateOperationsInput.schema';
import { DateTimeFieldUpdateOperationsInputObjectSchema } from './DateTimeFieldUpdateOperationsInput.schema';
import { NullableDateTimeFieldUpdateOperationsInputObjectSchema } from './NullableDateTimeFieldUpdateOperationsInput.schema';
import { BoolFieldUpdateOperationsInputObjectSchema } from './BoolFieldUpdateOperationsInput.schema';
import { NullableIntFieldUpdateOperationsInputObjectSchema } from './NullableIntFieldUpdateOperationsInput.schema';
import { AppointmentCategorySchema } from '../enums/AppointmentCategory.schema';
import { NullableEnumAppointmentCategoryFieldUpdateOperationsInputObjectSchema } from './NullableEnumAppointmentCategoryFieldUpdateOperationsInput.schema';
import { AppointmentStatusSchema } from '../enums/AppointmentStatus.schema';
import { NullableEnumAppointmentStatusFieldUpdateOperationsInputObjectSchema } from './NullableEnumAppointmentStatusFieldUpdateOperationsInput.schema';
import { UserUpdateOneWithoutCreatedAssetsNestedInputObjectSchema } from './UserUpdateOneWithoutCreatedAssetsNestedInput.schema';
import { UserUpdateOneWithoutUpdatedAssetsNestedInputObjectSchema } from './UserUpdateOneWithoutUpdatedAssetsNestedInput.schema';
import { UserUpdateOneWithoutDeletedAssetsNestedInputObjectSchema } from './UserUpdateOneWithoutDeletedAssetsNestedInput.schema';
import { OrganizationUpdateOneWithoutAssetsNestedInputObjectSchema } from './OrganizationUpdateOneWithoutAssetsNestedInput.schema';
import { AppointmentUpdateOneWithoutPredecessorFollowUpNestedInputObjectSchema } from './AppointmentUpdateOneWithoutPredecessorFollowUpNestedInput.schema';
import { AppointmentUpdateOneWithoutFollowUpNestedInputObjectSchema } from './AppointmentUpdateOneWithoutFollowUpNestedInput.schema';
import { AppointmentCidUpdateManyWithoutAppointmentNestedInputObjectSchema } from './AppointmentCidUpdateManyWithoutAppointmentNestedInput.schema';
import { MedicationsUpdateManyWithoutAppointmentNestedInputObjectSchema } from './MedicationsUpdateManyWithoutAppointmentNestedInput.schema';
import { ComorbiditiesUpdateManyWithoutAppointmentNestedInputObjectSchema } from './ComorbiditiesUpdateManyWithoutAppointmentNestedInput.schema';
import { PatientUpdateOneRequiredWithoutAppointmentsNestedInputObjectSchema } from './PatientUpdateOneRequiredWithoutAppointmentsNestedInput.schema';
import { EventCalendarUpdateOneWithoutAppointmentNestedInputObjectSchema } from './EventCalendarUpdateOneWithoutAppointmentNestedInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.AppointmentUpdateWithoutAllergiesInput>;
export const AppointmentUpdateWithoutAllergiesInputObjectSchema: SchemaType = z.object({
    id: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), createdAt: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.lazy(() => DateTimeFieldUpdateOperationsInputObjectSchema)]).optional(), updatedAt: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.lazy(() => DateTimeFieldUpdateOperationsInputObjectSchema)]).optional(), deletedAt: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.lazy(() => NullableDateTimeFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), deleted: z.union([z.boolean(),
    z.lazy(() => BoolFieldUpdateOperationsInputObjectSchema)]).optional(), motive: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), subjective: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), objective: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), evaluation: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), plan: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), startDate: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.lazy(() => NullableDateTimeFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), endDate: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.lazy(() => NullableDateTimeFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), sickNoteDays: z.union([z.number(),
    z.lazy(() => NullableIntFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), category: z.union([z.lazy(() => AppointmentCategorySchema),
    z.lazy(() => NullableEnumAppointmentCategoryFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), status: z.union([z.lazy(() => AppointmentStatusSchema),
    z.lazy(() => NullableEnumAppointmentStatusFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), createdByUser: z.lazy(() => UserUpdateOneWithoutCreatedAssetsNestedInputObjectSchema).optional().optional(), updatedByUser: z.lazy(() => UserUpdateOneWithoutUpdatedAssetsNestedInputObjectSchema).optional().optional(), deletedByUser: z.lazy(() => UserUpdateOneWithoutDeletedAssetsNestedInputObjectSchema).optional().optional(), organization: z.lazy(() => OrganizationUpdateOneWithoutAssetsNestedInputObjectSchema).optional().optional(), followUp: z.lazy(() => AppointmentUpdateOneWithoutPredecessorFollowUpNestedInputObjectSchema).optional().optional(), predecessorFollowUp: z.lazy(() => AppointmentUpdateOneWithoutFollowUpNestedInputObjectSchema).optional().optional(), cids: z.lazy(() => AppointmentCidUpdateManyWithoutAppointmentNestedInputObjectSchema).optional().optional(), medications: z.lazy(() => MedicationsUpdateManyWithoutAppointmentNestedInputObjectSchema).optional().optional(), comorbidities: z.lazy(() => ComorbiditiesUpdateManyWithoutAppointmentNestedInputObjectSchema).optional().optional(), patient: z.lazy(() => PatientUpdateOneRequiredWithoutAppointmentsNestedInputObjectSchema).optional().optional(), eventCalendar: z.lazy(() => EventCalendarUpdateOneWithoutAppointmentNestedInputObjectSchema).optional().optional()
}).strict() as SchemaType;
