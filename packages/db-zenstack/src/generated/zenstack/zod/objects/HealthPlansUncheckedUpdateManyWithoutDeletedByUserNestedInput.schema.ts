/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { HealthPlansCreateWithoutDeletedByUserInputObjectSchema } from './HealthPlansCreateWithoutDeletedByUserInput.schema';
import { HealthPlansUncheckedCreateWithoutDeletedByUserInputObjectSchema } from './HealthPlansUncheckedCreateWithoutDeletedByUserInput.schema';
import { HealthPlansCreateOrConnectWithoutDeletedByUserInputObjectSchema } from './HealthPlansCreateOrConnectWithoutDeletedByUserInput.schema';
import { HealthPlansUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema } from './HealthPlansUpsertWithWhereUniqueWithoutDeletedByUserInput.schema';
import { HealthPlansCreateManyDeletedByUserInputEnvelopeObjectSchema } from './HealthPlansCreateManyDeletedByUserInputEnvelope.schema';
import { HealthPlansWhereUniqueInputObjectSchema } from './HealthPlansWhereUniqueInput.schema';
import { HealthPlansUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema } from './HealthPlansUpdateWithWhereUniqueWithoutDeletedByUserInput.schema';
import { HealthPlansUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema } from './HealthPlansUpdateManyWithWhereWithoutDeletedByUserInput.schema';
import { HealthPlansScalarWhereInputObjectSchema } from './HealthPlansScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.HealthPlansUncheckedUpdateManyWithoutDeletedByUserNestedInput>;
export const HealthPlansUncheckedUpdateManyWithoutDeletedByUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => HealthPlansCreateWithoutDeletedByUserInputObjectSchema), z.lazy(() => HealthPlansCreateWithoutDeletedByUserInputObjectSchema).array(), z.lazy(() => HealthPlansUncheckedCreateWithoutDeletedByUserInputObjectSchema), z.lazy(() => HealthPlansUncheckedCreateWithoutDeletedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => HealthPlansCreateOrConnectWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => HealthPlansCreateOrConnectWithoutDeletedByUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => HealthPlansUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => HealthPlansUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => HealthPlansCreateManyDeletedByUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => HealthPlansUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => HealthPlansUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => HealthPlansUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => HealthPlansUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => HealthPlansScalarWhereInputObjectSchema),
    z.lazy(() => HealthPlansScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
