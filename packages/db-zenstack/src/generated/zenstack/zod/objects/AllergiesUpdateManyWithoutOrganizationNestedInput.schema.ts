/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { AllergiesCreateWithoutOrganizationInputObjectSchema } from './AllergiesCreateWithoutOrganizationInput.schema';
import { AllergiesUncheckedCreateWithoutOrganizationInputObjectSchema } from './AllergiesUncheckedCreateWithoutOrganizationInput.schema';
import { AllergiesCreateOrConnectWithoutOrganizationInputObjectSchema } from './AllergiesCreateOrConnectWithoutOrganizationInput.schema';
import { AllergiesUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema } from './AllergiesUpsertWithWhereUniqueWithoutOrganizationInput.schema';
import { AllergiesCreateManyOrganizationInputEnvelopeObjectSchema } from './AllergiesCreateManyOrganizationInputEnvelope.schema';
import { AllergiesWhereUniqueInputObjectSchema } from './AllergiesWhereUniqueInput.schema';
import { AllergiesUpdateWithWhereUniqueWithoutOrganizationInputObjectSchema } from './AllergiesUpdateWithWhereUniqueWithoutOrganizationInput.schema';
import { AllergiesUpdateManyWithWhereWithoutOrganizationInputObjectSchema } from './AllergiesUpdateManyWithWhereWithoutOrganizationInput.schema';
import { AllergiesScalarWhereInputObjectSchema } from './AllergiesScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.AllergiesUpdateManyWithoutOrganizationNestedInput>;
export const AllergiesUpdateManyWithoutOrganizationNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => AllergiesCreateWithoutOrganizationInputObjectSchema), z.lazy(() => AllergiesCreateWithoutOrganizationInputObjectSchema).array(), z.lazy(() => AllergiesUncheckedCreateWithoutOrganizationInputObjectSchema), z.lazy(() => AllergiesUncheckedCreateWithoutOrganizationInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => AllergiesCreateOrConnectWithoutOrganizationInputObjectSchema),
    z.lazy(() => AllergiesCreateOrConnectWithoutOrganizationInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => AllergiesUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema),
    z.lazy(() => AllergiesUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema).array()]).optional(), createMany: z.lazy(() => AllergiesCreateManyOrganizationInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => AllergiesUpdateWithWhereUniqueWithoutOrganizationInputObjectSchema),
    z.lazy(() => AllergiesUpdateWithWhereUniqueWithoutOrganizationInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => AllergiesUpdateManyWithWhereWithoutOrganizationInputObjectSchema),
    z.lazy(() => AllergiesUpdateManyWithWhereWithoutOrganizationInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => AllergiesScalarWhereInputObjectSchema),
    z.lazy(() => AllergiesScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
