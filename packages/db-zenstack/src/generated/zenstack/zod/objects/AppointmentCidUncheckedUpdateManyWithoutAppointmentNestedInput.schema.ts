/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { AppointmentCidCreateWithoutAppointmentInputObjectSchema } from './AppointmentCidCreateWithoutAppointmentInput.schema';
import { AppointmentCidUncheckedCreateWithoutAppointmentInputObjectSchema } from './AppointmentCidUncheckedCreateWithoutAppointmentInput.schema';
import { AppointmentCidCreateOrConnectWithoutAppointmentInputObjectSchema } from './AppointmentCidCreateOrConnectWithoutAppointmentInput.schema';
import { AppointmentCidUpsertWithWhereUniqueWithoutAppointmentInputObjectSchema } from './AppointmentCidUpsertWithWhereUniqueWithoutAppointmentInput.schema';
import { AppointmentCidCreateManyAppointmentInputEnvelopeObjectSchema } from './AppointmentCidCreateManyAppointmentInputEnvelope.schema';
import { AppointmentCidWhereUniqueInputObjectSchema } from './AppointmentCidWhereUniqueInput.schema';
import { AppointmentCidUpdateWithWhereUniqueWithoutAppointmentInputObjectSchema } from './AppointmentCidUpdateWithWhereUniqueWithoutAppointmentInput.schema';
import { AppointmentCidUpdateManyWithWhereWithoutAppointmentInputObjectSchema } from './AppointmentCidUpdateManyWithWhereWithoutAppointmentInput.schema';
import { AppointmentCidScalarWhereInputObjectSchema } from './AppointmentCidScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.AppointmentCidUncheckedUpdateManyWithoutAppointmentNestedInput>;
export const AppointmentCidUncheckedUpdateManyWithoutAppointmentNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => AppointmentCidCreateWithoutAppointmentInputObjectSchema), z.lazy(() => AppointmentCidCreateWithoutAppointmentInputObjectSchema).array(), z.lazy(() => AppointmentCidUncheckedCreateWithoutAppointmentInputObjectSchema), z.lazy(() => AppointmentCidUncheckedCreateWithoutAppointmentInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => AppointmentCidCreateOrConnectWithoutAppointmentInputObjectSchema),
    z.lazy(() => AppointmentCidCreateOrConnectWithoutAppointmentInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => AppointmentCidUpsertWithWhereUniqueWithoutAppointmentInputObjectSchema),
    z.lazy(() => AppointmentCidUpsertWithWhereUniqueWithoutAppointmentInputObjectSchema).array()]).optional(), createMany: z.lazy(() => AppointmentCidCreateManyAppointmentInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => AppointmentCidWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentCidWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => AppointmentCidWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentCidWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => AppointmentCidWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentCidWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => AppointmentCidWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentCidWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => AppointmentCidUpdateWithWhereUniqueWithoutAppointmentInputObjectSchema),
    z.lazy(() => AppointmentCidUpdateWithWhereUniqueWithoutAppointmentInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => AppointmentCidUpdateManyWithWhereWithoutAppointmentInputObjectSchema),
    z.lazy(() => AppointmentCidUpdateManyWithWhereWithoutAppointmentInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => AppointmentCidScalarWhereInputObjectSchema),
    z.lazy(() => AppointmentCidScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
