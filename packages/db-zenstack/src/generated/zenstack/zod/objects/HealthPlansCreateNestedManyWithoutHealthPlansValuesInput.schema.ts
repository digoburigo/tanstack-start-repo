/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { HealthPlansCreateWithoutHealthPlansValuesInputObjectSchema } from './HealthPlansCreateWithoutHealthPlansValuesInput.schema';
import { HealthPlansUncheckedCreateWithoutHealthPlansValuesInputObjectSchema } from './HealthPlansUncheckedCreateWithoutHealthPlansValuesInput.schema';
import { HealthPlansCreateOrConnectWithoutHealthPlansValuesInputObjectSchema } from './HealthPlansCreateOrConnectWithoutHealthPlansValuesInput.schema';
import { HealthPlansCreateManyHealthPlansValuesInputEnvelopeObjectSchema } from './HealthPlansCreateManyHealthPlansValuesInputEnvelope.schema';
import { HealthPlansWhereUniqueInputObjectSchema } from './HealthPlansWhereUniqueInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.HealthPlansCreateNestedManyWithoutHealthPlansValuesInput>;
export const HealthPlansCreateNestedManyWithoutHealthPlansValuesInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => HealthPlansCreateWithoutHealthPlansValuesInputObjectSchema), z.lazy(() => HealthPlansCreateWithoutHealthPlansValuesInputObjectSchema).array(), z.lazy(() => HealthPlansUncheckedCreateWithoutHealthPlansValuesInputObjectSchema), z.lazy(() => HealthPlansUncheckedCreateWithoutHealthPlansValuesInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => HealthPlansCreateOrConnectWithoutHealthPlansValuesInputObjectSchema),
    z.lazy(() => HealthPlansCreateOrConnectWithoutHealthPlansValuesInputObjectSchema).array()]).optional(), createMany: z.lazy(() => HealthPlansCreateManyHealthPlansValuesInputEnvelopeObjectSchema).optional().optional(), connect: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
