/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SortOrderSchema } from '../enums/SortOrder.schema';
import { SortOrderInputObjectSchema } from './SortOrderInput.schema';
import { SessionOrderByRelationAggregateInputObjectSchema } from './SessionOrderByRelationAggregateInput.schema';
import { AccountOrderByRelationAggregateInputObjectSchema } from './AccountOrderByRelationAggregateInput.schema';
import { MemberOrderByRelationAggregateInputObjectSchema } from './MemberOrderByRelationAggregateInput.schema';
import { InvitationOrderByRelationAggregateInputObjectSchema } from './InvitationOrderByRelationAggregateInput.schema';
import { PatientOrderByRelationAggregateInputObjectSchema } from './PatientOrderByRelationAggregateInput.schema';
import { AssetOrderByRelationAggregateInputObjectSchema } from './AssetOrderByRelationAggregateInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.UserOrderByWithRelationInput>;
export const UserOrderByWithRelationInputObjectSchema: SchemaType = z.object({
    id: z.lazy(() => SortOrderSchema).optional().optional(), name: z.lazy(() => SortOrderSchema).optional().optional(), email: z.lazy(() => SortOrderSchema).optional().optional(), emailVerified: z.lazy(() => SortOrderSchema).optional().optional(), image: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), createdAt: z.lazy(() => SortOrderSchema).optional().optional(), updatedAt: z.lazy(() => SortOrderSchema).optional().optional(), username: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), displayUsername: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), role: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), banned: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), banReason: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), banExpires: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), changePassword: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), sessions: z.lazy(() => SessionOrderByRelationAggregateInputObjectSchema).optional().optional(), accounts: z.lazy(() => AccountOrderByRelationAggregateInputObjectSchema).optional().optional(), members: z.lazy(() => MemberOrderByRelationAggregateInputObjectSchema).optional().optional(), invitations: z.lazy(() => InvitationOrderByRelationAggregateInputObjectSchema).optional().optional(), patientUser: z.lazy(() => PatientOrderByRelationAggregateInputObjectSchema).optional().optional(), createdAssets: z.lazy(() => AssetOrderByRelationAggregateInputObjectSchema).optional().optional(), updatedAssets: z.lazy(() => AssetOrderByRelationAggregateInputObjectSchema).optional().optional(), deletedAssets: z.lazy(() => AssetOrderByRelationAggregateInputObjectSchema).optional().optional()
}).strict() as SchemaType;
