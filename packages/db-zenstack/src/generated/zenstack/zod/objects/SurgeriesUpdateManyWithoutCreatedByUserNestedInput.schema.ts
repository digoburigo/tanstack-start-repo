/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SurgeriesCreateWithoutCreatedByUserInputObjectSchema } from './SurgeriesCreateWithoutCreatedByUserInput.schema';
import { SurgeriesUncheckedCreateWithoutCreatedByUserInputObjectSchema } from './SurgeriesUncheckedCreateWithoutCreatedByUserInput.schema';
import { SurgeriesCreateOrConnectWithoutCreatedByUserInputObjectSchema } from './SurgeriesCreateOrConnectWithoutCreatedByUserInput.schema';
import { SurgeriesUpsertWithWhereUniqueWithoutCreatedByUserInputObjectSchema } from './SurgeriesUpsertWithWhereUniqueWithoutCreatedByUserInput.schema';
import { SurgeriesCreateManyCreatedByUserInputEnvelopeObjectSchema } from './SurgeriesCreateManyCreatedByUserInputEnvelope.schema';
import { SurgeriesWhereUniqueInputObjectSchema } from './SurgeriesWhereUniqueInput.schema';
import { SurgeriesUpdateWithWhereUniqueWithoutCreatedByUserInputObjectSchema } from './SurgeriesUpdateWithWhereUniqueWithoutCreatedByUserInput.schema';
import { SurgeriesUpdateManyWithWhereWithoutCreatedByUserInputObjectSchema } from './SurgeriesUpdateManyWithWhereWithoutCreatedByUserInput.schema';
import { SurgeriesScalarWhereInputObjectSchema } from './SurgeriesScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.SurgeriesUpdateManyWithoutCreatedByUserNestedInput>;
export const SurgeriesUpdateManyWithoutCreatedByUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => SurgeriesCreateWithoutCreatedByUserInputObjectSchema), z.lazy(() => SurgeriesCreateWithoutCreatedByUserInputObjectSchema).array(), z.lazy(() => SurgeriesUncheckedCreateWithoutCreatedByUserInputObjectSchema), z.lazy(() => SurgeriesUncheckedCreateWithoutCreatedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => SurgeriesCreateOrConnectWithoutCreatedByUserInputObjectSchema),
    z.lazy(() => SurgeriesCreateOrConnectWithoutCreatedByUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => SurgeriesUpsertWithWhereUniqueWithoutCreatedByUserInputObjectSchema),
    z.lazy(() => SurgeriesUpsertWithWhereUniqueWithoutCreatedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => SurgeriesCreateManyCreatedByUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => SurgeriesWhereUniqueInputObjectSchema),
    z.lazy(() => SurgeriesWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => SurgeriesWhereUniqueInputObjectSchema),
    z.lazy(() => SurgeriesWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => SurgeriesWhereUniqueInputObjectSchema),
    z.lazy(() => SurgeriesWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => SurgeriesWhereUniqueInputObjectSchema),
    z.lazy(() => SurgeriesWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => SurgeriesUpdateWithWhereUniqueWithoutCreatedByUserInputObjectSchema),
    z.lazy(() => SurgeriesUpdateWithWhereUniqueWithoutCreatedByUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => SurgeriesUpdateManyWithWhereWithoutCreatedByUserInputObjectSchema),
    z.lazy(() => SurgeriesUpdateManyWithWhereWithoutCreatedByUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => SurgeriesScalarWhereInputObjectSchema),
    z.lazy(() => SurgeriesScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
