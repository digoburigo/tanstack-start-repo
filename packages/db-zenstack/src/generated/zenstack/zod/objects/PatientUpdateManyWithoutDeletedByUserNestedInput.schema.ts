/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { PatientCreateWithoutDeletedByUserInputObjectSchema } from './PatientCreateWithoutDeletedByUserInput.schema';
import { PatientUncheckedCreateWithoutDeletedByUserInputObjectSchema } from './PatientUncheckedCreateWithoutDeletedByUserInput.schema';
import { PatientCreateOrConnectWithoutDeletedByUserInputObjectSchema } from './PatientCreateOrConnectWithoutDeletedByUserInput.schema';
import { PatientUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema } from './PatientUpsertWithWhereUniqueWithoutDeletedByUserInput.schema';
import { PatientCreateManyDeletedByUserInputEnvelopeObjectSchema } from './PatientCreateManyDeletedByUserInputEnvelope.schema';
import { PatientWhereUniqueInputObjectSchema } from './PatientWhereUniqueInput.schema';
import { PatientUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema } from './PatientUpdateWithWhereUniqueWithoutDeletedByUserInput.schema';
import { PatientUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema } from './PatientUpdateManyWithWhereWithoutDeletedByUserInput.schema';
import { PatientScalarWhereInputObjectSchema } from './PatientScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.PatientUpdateManyWithoutDeletedByUserNestedInput>;
export const PatientUpdateManyWithoutDeletedByUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => PatientCreateWithoutDeletedByUserInputObjectSchema), z.lazy(() => PatientCreateWithoutDeletedByUserInputObjectSchema).array(), z.lazy(() => PatientUncheckedCreateWithoutDeletedByUserInputObjectSchema), z.lazy(() => PatientUncheckedCreateWithoutDeletedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => PatientCreateOrConnectWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => PatientCreateOrConnectWithoutDeletedByUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => PatientUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => PatientUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => PatientCreateManyDeletedByUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => PatientWhereUniqueInputObjectSchema),
    z.lazy(() => PatientWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => PatientWhereUniqueInputObjectSchema),
    z.lazy(() => PatientWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => PatientWhereUniqueInputObjectSchema),
    z.lazy(() => PatientWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => PatientWhereUniqueInputObjectSchema),
    z.lazy(() => PatientWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => PatientUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => PatientUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => PatientUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => PatientUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => PatientScalarWhereInputObjectSchema),
    z.lazy(() => PatientScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
