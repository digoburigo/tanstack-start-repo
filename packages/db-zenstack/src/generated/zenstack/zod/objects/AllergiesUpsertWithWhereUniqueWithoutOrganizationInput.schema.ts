/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { AllergiesWhereUniqueInputObjectSchema } from './AllergiesWhereUniqueInput.schema';
import { AllergiesUpdateWithoutOrganizationInputObjectSchema } from './AllergiesUpdateWithoutOrganizationInput.schema';
import { AllergiesUncheckedUpdateWithoutOrganizationInputObjectSchema } from './AllergiesUncheckedUpdateWithoutOrganizationInput.schema';
import { AllergiesCreateWithoutOrganizationInputObjectSchema } from './AllergiesCreateWithoutOrganizationInput.schema';
import { AllergiesUncheckedCreateWithoutOrganizationInputObjectSchema } from './AllergiesUncheckedCreateWithoutOrganizationInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.AllergiesUpsertWithWhereUniqueWithoutOrganizationInput>;
export const AllergiesUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema: SchemaType = z.object({
    where: z.lazy(() => AllergiesWhereUniqueInputObjectSchema), update: z.union([z.lazy(() => AllergiesUpdateWithoutOrganizationInputObjectSchema), z.lazy(() => AllergiesUncheckedUpdateWithoutOrganizationInputObjectSchema)]), create: z.union([z.lazy(() => AllergiesCreateWithoutOrganizationInputObjectSchema), z.lazy(() => AllergiesUncheckedCreateWithoutOrganizationInputObjectSchema)])
}).strict() as SchemaType;
