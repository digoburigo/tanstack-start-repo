/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { StringFilterObjectSchema } from './StringFilter.schema';
import { DateTimeFilterObjectSchema } from './DateTimeFilter.schema';
import { StringNullableFilterObjectSchema } from './StringNullableFilter.schema';
import { DateTimeNullableFilterObjectSchema } from './DateTimeNullableFilter.schema';
import { BoolFilterObjectSchema } from './BoolFilter.schema';
import { IntNullableFilterObjectSchema } from './IntNullableFilter.schema';
import { EnumAppointmentCategoryNullableFilterObjectSchema } from './EnumAppointmentCategoryNullableFilter.schema';
import { AppointmentCategorySchema } from '../enums/AppointmentCategory.schema';
import { EnumAppointmentStatusNullableFilterObjectSchema } from './EnumAppointmentStatusNullableFilter.schema';
import { AppointmentStatusSchema } from '../enums/AppointmentStatus.schema';
import { UserNullableScalarRelationFilterObjectSchema } from './UserNullableScalarRelationFilter.schema';
import { UserWhereInputObjectSchema } from './UserWhereInput.schema';
import { OrganizationNullableScalarRelationFilterObjectSchema } from './OrganizationNullableScalarRelationFilter.schema';
import { OrganizationWhereInputObjectSchema } from './OrganizationWhereInput.schema';
import { AppointmentNullableScalarRelationFilterObjectSchema } from './AppointmentNullableScalarRelationFilter.schema';
import { AppointmentCidListRelationFilterObjectSchema } from './AppointmentCidListRelationFilter.schema';
import { AllergiesListRelationFilterObjectSchema } from './AllergiesListRelationFilter.schema';
import { MedicationsListRelationFilterObjectSchema } from './MedicationsListRelationFilter.schema';
import { ComorbiditiesListRelationFilterObjectSchema } from './ComorbiditiesListRelationFilter.schema';
import { PatientScalarRelationFilterObjectSchema } from './PatientScalarRelationFilter.schema';
import { PatientWhereInputObjectSchema } from './PatientWhereInput.schema';
import { EventCalendarNullableScalarRelationFilterObjectSchema } from './EventCalendarNullableScalarRelationFilter.schema';
import { EventCalendarWhereInputObjectSchema } from './EventCalendarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.AppointmentWhereInput>;
export const AppointmentWhereInputObjectSchema: SchemaType = z.object({
    AND: z.union([z.lazy(() => AppointmentWhereInputObjectSchema),
    z.lazy(() => AppointmentWhereInputObjectSchema).array()]).optional(), OR: z.lazy(() => AppointmentWhereInputObjectSchema).array().optional().optional(), NOT: z.union([z.lazy(() => AppointmentWhereInputObjectSchema),
    z.lazy(() => AppointmentWhereInputObjectSchema).array()]).optional(), id: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), type: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), createdAt: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), createdById: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), updatedAt: z.union([z.lazy(() => DateTimeFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), updatedById: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), deletedAt: z.union([z.lazy(() => DateTimeNullableFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()]),
    z.null()]).optional().nullable(), deletedById: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), deleted: z.union([z.lazy(() => BoolFilterObjectSchema),
    z.boolean()]).optional(), organizationId: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), motive: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), subjective: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), objective: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), evaluation: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), plan: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), startDate: z.union([z.lazy(() => DateTimeNullableFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()]),
    z.null()]).optional().nullable(), endDate: z.union([z.lazy(() => DateTimeNullableFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()]),
    z.null()]).optional().nullable(), sickNoteDays: z.union([z.lazy(() => IntNullableFilterObjectSchema),
    z.number(),
    z.null()]).optional().nullable(), category: z.union([z.lazy(() => EnumAppointmentCategoryNullableFilterObjectSchema),
    z.lazy(() => AppointmentCategorySchema),
    z.null()]).optional().nullable(), status: z.union([z.lazy(() => EnumAppointmentStatusNullableFilterObjectSchema),
    z.lazy(() => AppointmentStatusSchema),
    z.null()]).optional().nullable(), followUpId: z.union([z.lazy(() => StringNullableFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), patientId: z.union([z.lazy(() => StringFilterObjectSchema),
    z.string()]).optional(), createdByUser: z.union([z.lazy(() => UserNullableScalarRelationFilterObjectSchema),
    z.lazy(() => UserWhereInputObjectSchema),
    z.null()]).optional().nullable(), updatedByUser: z.union([z.lazy(() => UserNullableScalarRelationFilterObjectSchema),
    z.lazy(() => UserWhereInputObjectSchema),
    z.null()]).optional().nullable(), deletedByUser: z.union([z.lazy(() => UserNullableScalarRelationFilterObjectSchema),
    z.lazy(() => UserWhereInputObjectSchema),
    z.null()]).optional().nullable(), organization: z.union([z.lazy(() => OrganizationNullableScalarRelationFilterObjectSchema),
    z.lazy(() => OrganizationWhereInputObjectSchema),
    z.null()]).optional().nullable(), followUp: z.union([z.lazy(() => AppointmentNullableScalarRelationFilterObjectSchema),
    z.lazy(() => AppointmentWhereInputObjectSchema),
    z.null()]).optional().nullable(), predecessorFollowUp: z.union([z.lazy(() => AppointmentNullableScalarRelationFilterObjectSchema),
    z.lazy(() => AppointmentWhereInputObjectSchema),
    z.null()]).optional().nullable(), cids: z.lazy(() => AppointmentCidListRelationFilterObjectSchema).optional().optional(), allergies: z.lazy(() => AllergiesListRelationFilterObjectSchema).optional().optional(), medications: z.lazy(() => MedicationsListRelationFilterObjectSchema).optional().optional(), comorbidities: z.lazy(() => ComorbiditiesListRelationFilterObjectSchema).optional().optional(), patient: z.union([z.lazy(() => PatientScalarRelationFilterObjectSchema),
    z.lazy(() => PatientWhereInputObjectSchema)]).optional(), eventCalendar: z.union([z.lazy(() => EventCalendarNullableScalarRelationFilterObjectSchema),
    z.lazy(() => EventCalendarWhereInputObjectSchema),
    z.null()]).optional().nullable()
}).strict() as SchemaType;
