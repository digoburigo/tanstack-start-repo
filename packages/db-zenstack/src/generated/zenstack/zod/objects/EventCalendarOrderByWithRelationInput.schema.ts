/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SortOrderSchema } from '../enums/SortOrder.schema';
import { SortOrderInputObjectSchema } from './SortOrderInput.schema';
import { UserOrderByWithRelationInputObjectSchema } from './UserOrderByWithRelationInput.schema';
import { OrganizationOrderByWithRelationInputObjectSchema } from './OrganizationOrderByWithRelationInput.schema';
import { AppointmentOrderByWithRelationInputObjectSchema } from './AppointmentOrderByWithRelationInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.EventCalendarOrderByWithRelationInput>;
export const EventCalendarOrderByWithRelationInputObjectSchema: SchemaType = z.object({
    id: z.lazy(() => SortOrderSchema).optional().optional(), type: z.lazy(() => SortOrderSchema).optional().optional(), createdAt: z.lazy(() => SortOrderSchema).optional().optional(), createdById: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), updatedAt: z.lazy(() => SortOrderSchema).optional().optional(), updatedById: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), deletedAt: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), deletedById: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), deleted: z.lazy(() => SortOrderSchema).optional().optional(), organizationId: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), title: z.lazy(() => SortOrderSchema).optional().optional(), description: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), start: z.lazy(() => SortOrderSchema).optional().optional(), end: z.lazy(() => SortOrderSchema).optional().optional(), allDay: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), eventType: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), rrule: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), appointmentId: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), createdByUser: z.lazy(() => UserOrderByWithRelationInputObjectSchema).optional().optional(), updatedByUser: z.lazy(() => UserOrderByWithRelationInputObjectSchema).optional().optional(), deletedByUser: z.lazy(() => UserOrderByWithRelationInputObjectSchema).optional().optional(), organization: z.lazy(() => OrganizationOrderByWithRelationInputObjectSchema).optional().optional(), appointment: z.lazy(() => AppointmentOrderByWithRelationInputObjectSchema).optional().optional()
}).strict() as SchemaType;
