/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SurgeriesCreateWithoutOrganizationInputObjectSchema } from './SurgeriesCreateWithoutOrganizationInput.schema';
import { SurgeriesUncheckedCreateWithoutOrganizationInputObjectSchema } from './SurgeriesUncheckedCreateWithoutOrganizationInput.schema';
import { SurgeriesCreateOrConnectWithoutOrganizationInputObjectSchema } from './SurgeriesCreateOrConnectWithoutOrganizationInput.schema';
import { SurgeriesCreateManyOrganizationInputEnvelopeObjectSchema } from './SurgeriesCreateManyOrganizationInputEnvelope.schema';
import { SurgeriesWhereUniqueInputObjectSchema } from './SurgeriesWhereUniqueInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.SurgeriesCreateNestedManyWithoutOrganizationInput>;
export const SurgeriesCreateNestedManyWithoutOrganizationInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => SurgeriesCreateWithoutOrganizationInputObjectSchema), z.lazy(() => SurgeriesCreateWithoutOrganizationInputObjectSchema).array(), z.lazy(() => SurgeriesUncheckedCreateWithoutOrganizationInputObjectSchema), z.lazy(() => SurgeriesUncheckedCreateWithoutOrganizationInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => SurgeriesCreateOrConnectWithoutOrganizationInputObjectSchema),
    z.lazy(() => SurgeriesCreateOrConnectWithoutOrganizationInputObjectSchema).array()]).optional(), createMany: z.lazy(() => SurgeriesCreateManyOrganizationInputEnvelopeObjectSchema).optional().optional(), connect: z.union([z.lazy(() => SurgeriesWhereUniqueInputObjectSchema),
    z.lazy(() => SurgeriesWhereUniqueInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
