/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { UserDefaultArgsObjectSchema } from './UserDefaultArgs.schema';
import { OrganizationDefaultArgsObjectSchema } from './OrganizationDefaultArgs.schema';
import { AppointmentDefaultArgsObjectSchema } from './AppointmentDefaultArgs.schema';
import { CidDefaultArgsObjectSchema } from './CidDefaultArgs.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.AppointmentCidInclude>;
export const AppointmentCidIncludeObjectSchema: SchemaType = z.object({
    createdByUser: z.union([z.boolean(),
    z.lazy(() => UserDefaultArgsObjectSchema)]).optional(), updatedByUser: z.union([z.boolean(),
    z.lazy(() => UserDefaultArgsObjectSchema)]).optional(), deletedByUser: z.union([z.boolean(),
    z.lazy(() => UserDefaultArgsObjectSchema)]).optional(), organization: z.union([z.boolean(),
    z.lazy(() => OrganizationDefaultArgsObjectSchema)]).optional(), appointment: z.union([z.boolean(),
    z.lazy(() => AppointmentDefaultArgsObjectSchema)]).optional(), cid: z.union([z.boolean(),
    z.lazy(() => CidDefaultArgsObjectSchema)]).optional()
}).strict() as SchemaType;
