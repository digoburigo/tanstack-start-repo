/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SurgeriesCreateWithoutUpdatedByUserInputObjectSchema } from './SurgeriesCreateWithoutUpdatedByUserInput.schema';
import { SurgeriesUncheckedCreateWithoutUpdatedByUserInputObjectSchema } from './SurgeriesUncheckedCreateWithoutUpdatedByUserInput.schema';
import { SurgeriesCreateOrConnectWithoutUpdatedByUserInputObjectSchema } from './SurgeriesCreateOrConnectWithoutUpdatedByUserInput.schema';
import { SurgeriesUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema } from './SurgeriesUpsertWithWhereUniqueWithoutUpdatedByUserInput.schema';
import { SurgeriesCreateManyUpdatedByUserInputEnvelopeObjectSchema } from './SurgeriesCreateManyUpdatedByUserInputEnvelope.schema';
import { SurgeriesWhereUniqueInputObjectSchema } from './SurgeriesWhereUniqueInput.schema';
import { SurgeriesUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema } from './SurgeriesUpdateWithWhereUniqueWithoutUpdatedByUserInput.schema';
import { SurgeriesUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema } from './SurgeriesUpdateManyWithWhereWithoutUpdatedByUserInput.schema';
import { SurgeriesScalarWhereInputObjectSchema } from './SurgeriesScalarWhereInput.schema';

import type { Prisma } from '../../models';

type SchemaType = z.ZodType<Prisma.SurgeriesUpdateManyWithoutUpdatedByUserNestedInput>;
export const SurgeriesUpdateManyWithoutUpdatedByUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => SurgeriesCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => SurgeriesCreateWithoutUpdatedByUserInputObjectSchema).array(), z.lazy(() => SurgeriesUncheckedCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => SurgeriesUncheckedCreateWithoutUpdatedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => SurgeriesCreateOrConnectWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => SurgeriesCreateOrConnectWithoutUpdatedByUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => SurgeriesUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => SurgeriesUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => SurgeriesCreateManyUpdatedByUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => SurgeriesWhereUniqueInputObjectSchema),
    z.lazy(() => SurgeriesWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => SurgeriesWhereUniqueInputObjectSchema),
    z.lazy(() => SurgeriesWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => SurgeriesWhereUniqueInputObjectSchema),
    z.lazy(() => SurgeriesWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => SurgeriesWhereUniqueInputObjectSchema),
    z.lazy(() => SurgeriesWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => SurgeriesUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => SurgeriesUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => SurgeriesUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => SurgeriesUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => SurgeriesScalarWhereInputObjectSchema),
    z.lazy(() => SurgeriesScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
