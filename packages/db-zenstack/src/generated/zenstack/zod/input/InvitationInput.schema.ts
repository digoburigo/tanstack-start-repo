/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '../../models';

;
import { InvitationSelectObjectSchema } from '../objects/InvitationSelect.schema';
import { InvitationIncludeObjectSchema } from '../objects/InvitationInclude.schema';
import { InvitationWhereUniqueInputObjectSchema } from '../objects/InvitationWhereUniqueInput.schema';
import { InvitationWhereInputObjectSchema } from '../objects/InvitationWhereInput.schema';
import { InvitationOrderByWithRelationInputObjectSchema } from '../objects/InvitationOrderByWithRelationInput.schema';
import { InvitationScalarFieldEnumSchema } from '../enums/InvitationScalarFieldEnum.schema';
import { InvitationCreateInputObjectSchema } from '../objects/InvitationCreateInput.schema';
import { InvitationUncheckedCreateInputObjectSchema } from '../objects/InvitationUncheckedCreateInput.schema';
import { InvitationCreateManyInputObjectSchema } from '../objects/InvitationCreateManyInput.schema';
import { InvitationUpdateInputObjectSchema } from '../objects/InvitationUpdateInput.schema';
import { InvitationUncheckedUpdateInputObjectSchema } from '../objects/InvitationUncheckedUpdateInput.schema';
import { InvitationUpdateManyMutationInputObjectSchema } from '../objects/InvitationUpdateManyMutationInput.schema';
import { InvitationUncheckedUpdateManyInputObjectSchema } from '../objects/InvitationUncheckedUpdateManyInput.schema';
import { InvitationCountAggregateInputObjectSchema } from '../objects/InvitationCountAggregateInput.schema';
import { InvitationMinAggregateInputObjectSchema } from '../objects/InvitationMinAggregateInput.schema';
import { InvitationMaxAggregateInputObjectSchema } from '../objects/InvitationMaxAggregateInput.schema';
import { InvitationOrderByWithAggregationInputObjectSchema } from '../objects/InvitationOrderByWithAggregationInput.schema';
import { InvitationScalarWhereWithAggregatesInputObjectSchema } from '../objects/InvitationScalarWhereWithAggregatesInput.schema'

type InvitationInputSchemaType = {
    findUnique: z.ZodType<Prisma.InvitationFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.InvitationFindFirstArgs>,
    findMany: z.ZodType<Prisma.InvitationFindManyArgs>,
    create: z.ZodType<Prisma.InvitationCreateArgs>,
    createMany: z.ZodType<Prisma.InvitationCreateManyArgs>,
    delete: z.ZodType<Prisma.InvitationDeleteArgs>,
    deleteMany: z.ZodType<Prisma.InvitationDeleteManyArgs>,
    update: z.ZodType<Prisma.InvitationUpdateArgs>,
    updateMany: z.ZodType<Prisma.InvitationUpdateManyArgs>,
    upsert: z.ZodType<Prisma.InvitationUpsertArgs>,
    aggregate: z.ZodType<Prisma.InvitationAggregateArgs>,
    groupBy: z.ZodType<Prisma.InvitationGroupByArgs>,
    count: z.ZodType<Prisma.InvitationCountArgs>
}

export const InvitationInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => InvitationSelectObjectSchema.optional()), include: z.lazy(() => InvitationIncludeObjectSchema.optional()), where: InvitationWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => InvitationSelectObjectSchema.optional()), include: z.lazy(() => InvitationIncludeObjectSchema.optional()), where: InvitationWhereInputObjectSchema.optional(), orderBy: z.union([InvitationOrderByWithRelationInputObjectSchema, InvitationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: InvitationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(InvitationScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => InvitationSelectObjectSchema.optional()), include: z.lazy(() => InvitationIncludeObjectSchema.optional()), where: InvitationWhereInputObjectSchema.optional(), orderBy: z.union([InvitationOrderByWithRelationInputObjectSchema, InvitationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: InvitationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(InvitationScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => InvitationSelectObjectSchema.optional()), include: z.lazy(() => InvitationIncludeObjectSchema.optional()), data: z.union([InvitationCreateInputObjectSchema, InvitationUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([InvitationCreateManyInputObjectSchema, z.array(InvitationCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => InvitationSelectObjectSchema.optional()), include: z.lazy(() => InvitationIncludeObjectSchema.optional()), where: InvitationWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: InvitationWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => InvitationSelectObjectSchema.optional()), include: z.lazy(() => InvitationIncludeObjectSchema.optional()), data: z.union([InvitationUpdateInputObjectSchema, InvitationUncheckedUpdateInputObjectSchema]), where: InvitationWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([InvitationUpdateManyMutationInputObjectSchema, InvitationUncheckedUpdateManyInputObjectSchema]), where: InvitationWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => InvitationSelectObjectSchema.optional()), include: z.lazy(() => InvitationIncludeObjectSchema.optional()), where: InvitationWhereUniqueInputObjectSchema, create: z.union([InvitationCreateInputObjectSchema, InvitationUncheckedCreateInputObjectSchema]), update: z.union([InvitationUpdateInputObjectSchema, InvitationUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: InvitationWhereInputObjectSchema.optional(), orderBy: z.union([InvitationOrderByWithRelationInputObjectSchema, InvitationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: InvitationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), InvitationCountAggregateInputObjectSchema]).optional(), _min: InvitationMinAggregateInputObjectSchema.optional(), _max: InvitationMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: InvitationWhereInputObjectSchema.optional(), orderBy: z.union([InvitationOrderByWithAggregationInputObjectSchema, InvitationOrderByWithAggregationInputObjectSchema.array()]).optional(), having: InvitationScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(InvitationScalarFieldEnumSchema), _count: z.union([z.literal(true), InvitationCountAggregateInputObjectSchema]).optional(), _min: InvitationMinAggregateInputObjectSchema.optional(), _max: InvitationMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: InvitationWhereInputObjectSchema.optional(), orderBy: z.union([InvitationOrderByWithRelationInputObjectSchema, InvitationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: InvitationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(InvitationScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), InvitationCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as InvitationInputSchemaType;
