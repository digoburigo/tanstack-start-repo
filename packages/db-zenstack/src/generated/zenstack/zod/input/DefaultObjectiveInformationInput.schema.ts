/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '../../models';

;
import { DefaultObjectiveInformationSelectObjectSchema } from '../objects/DefaultObjectiveInformationSelect.schema';
import { DefaultObjectiveInformationIncludeObjectSchema } from '../objects/DefaultObjectiveInformationInclude.schema';
import { DefaultObjectiveInformationWhereUniqueInputObjectSchema } from '../objects/DefaultObjectiveInformationWhereUniqueInput.schema';
import { DefaultObjectiveInformationWhereInputObjectSchema } from '../objects/DefaultObjectiveInformationWhereInput.schema';
import { DefaultObjectiveInformationOrderByWithRelationInputObjectSchema } from '../objects/DefaultObjectiveInformationOrderByWithRelationInput.schema';
import { DefaultObjectiveInformationScalarFieldEnumSchema } from '../enums/DefaultObjectiveInformationScalarFieldEnum.schema';
import { DefaultObjectiveInformationCreateInputObjectSchema } from '../objects/DefaultObjectiveInformationCreateInput.schema';
import { DefaultObjectiveInformationUncheckedCreateInputObjectSchema } from '../objects/DefaultObjectiveInformationUncheckedCreateInput.schema';
import { DefaultObjectiveInformationCreateManyInputObjectSchema } from '../objects/DefaultObjectiveInformationCreateManyInput.schema';
import { DefaultObjectiveInformationUpdateInputObjectSchema } from '../objects/DefaultObjectiveInformationUpdateInput.schema';
import { DefaultObjectiveInformationUncheckedUpdateInputObjectSchema } from '../objects/DefaultObjectiveInformationUncheckedUpdateInput.schema';
import { DefaultObjectiveInformationUpdateManyMutationInputObjectSchema } from '../objects/DefaultObjectiveInformationUpdateManyMutationInput.schema';
import { DefaultObjectiveInformationUncheckedUpdateManyInputObjectSchema } from '../objects/DefaultObjectiveInformationUncheckedUpdateManyInput.schema';
import { DefaultObjectiveInformationCountAggregateInputObjectSchema } from '../objects/DefaultObjectiveInformationCountAggregateInput.schema';
import { DefaultObjectiveInformationMinAggregateInputObjectSchema } from '../objects/DefaultObjectiveInformationMinAggregateInput.schema';
import { DefaultObjectiveInformationMaxAggregateInputObjectSchema } from '../objects/DefaultObjectiveInformationMaxAggregateInput.schema';
import { DefaultObjectiveInformationOrderByWithAggregationInputObjectSchema } from '../objects/DefaultObjectiveInformationOrderByWithAggregationInput.schema';
import { DefaultObjectiveInformationScalarWhereWithAggregatesInputObjectSchema } from '../objects/DefaultObjectiveInformationScalarWhereWithAggregatesInput.schema'

type DefaultObjectiveInformationInputSchemaType = {
    findUnique: z.ZodType<Prisma.DefaultObjectiveInformationFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.DefaultObjectiveInformationFindFirstArgs>,
    findMany: z.ZodType<Prisma.DefaultObjectiveInformationFindManyArgs>,
    create: z.ZodType<Prisma.DefaultObjectiveInformationCreateArgs>,
    createMany: z.ZodType<Prisma.DefaultObjectiveInformationCreateManyArgs>,
    delete: z.ZodType<Prisma.DefaultObjectiveInformationDeleteArgs>,
    deleteMany: z.ZodType<Prisma.DefaultObjectiveInformationDeleteManyArgs>,
    update: z.ZodType<Prisma.DefaultObjectiveInformationUpdateArgs>,
    updateMany: z.ZodType<Prisma.DefaultObjectiveInformationUpdateManyArgs>,
    upsert: z.ZodType<Prisma.DefaultObjectiveInformationUpsertArgs>,
    aggregate: z.ZodType<Prisma.DefaultObjectiveInformationAggregateArgs>,
    groupBy: z.ZodType<Prisma.DefaultObjectiveInformationGroupByArgs>,
    count: z.ZodType<Prisma.DefaultObjectiveInformationCountArgs>
}

export const DefaultObjectiveInformationInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => DefaultObjectiveInformationSelectObjectSchema.optional()), include: z.lazy(() => DefaultObjectiveInformationIncludeObjectSchema.optional()), where: DefaultObjectiveInformationWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => DefaultObjectiveInformationSelectObjectSchema.optional()), include: z.lazy(() => DefaultObjectiveInformationIncludeObjectSchema.optional()), where: DefaultObjectiveInformationWhereInputObjectSchema.optional(), orderBy: z.union([DefaultObjectiveInformationOrderByWithRelationInputObjectSchema, DefaultObjectiveInformationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: DefaultObjectiveInformationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(DefaultObjectiveInformationScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => DefaultObjectiveInformationSelectObjectSchema.optional()), include: z.lazy(() => DefaultObjectiveInformationIncludeObjectSchema.optional()), where: DefaultObjectiveInformationWhereInputObjectSchema.optional(), orderBy: z.union([DefaultObjectiveInformationOrderByWithRelationInputObjectSchema, DefaultObjectiveInformationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: DefaultObjectiveInformationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(DefaultObjectiveInformationScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => DefaultObjectiveInformationSelectObjectSchema.optional()), include: z.lazy(() => DefaultObjectiveInformationIncludeObjectSchema.optional()), data: z.union([DefaultObjectiveInformationCreateInputObjectSchema, DefaultObjectiveInformationUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([DefaultObjectiveInformationCreateManyInputObjectSchema, z.array(DefaultObjectiveInformationCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => DefaultObjectiveInformationSelectObjectSchema.optional()), include: z.lazy(() => DefaultObjectiveInformationIncludeObjectSchema.optional()), where: DefaultObjectiveInformationWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: DefaultObjectiveInformationWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => DefaultObjectiveInformationSelectObjectSchema.optional()), include: z.lazy(() => DefaultObjectiveInformationIncludeObjectSchema.optional()), data: z.union([DefaultObjectiveInformationUpdateInputObjectSchema, DefaultObjectiveInformationUncheckedUpdateInputObjectSchema]), where: DefaultObjectiveInformationWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([DefaultObjectiveInformationUpdateManyMutationInputObjectSchema, DefaultObjectiveInformationUncheckedUpdateManyInputObjectSchema]), where: DefaultObjectiveInformationWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => DefaultObjectiveInformationSelectObjectSchema.optional()), include: z.lazy(() => DefaultObjectiveInformationIncludeObjectSchema.optional()), where: DefaultObjectiveInformationWhereUniqueInputObjectSchema, create: z.union([DefaultObjectiveInformationCreateInputObjectSchema, DefaultObjectiveInformationUncheckedCreateInputObjectSchema]), update: z.union([DefaultObjectiveInformationUpdateInputObjectSchema, DefaultObjectiveInformationUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: DefaultObjectiveInformationWhereInputObjectSchema.optional(), orderBy: z.union([DefaultObjectiveInformationOrderByWithRelationInputObjectSchema, DefaultObjectiveInformationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: DefaultObjectiveInformationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), DefaultObjectiveInformationCountAggregateInputObjectSchema]).optional(), _min: DefaultObjectiveInformationMinAggregateInputObjectSchema.optional(), _max: DefaultObjectiveInformationMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: DefaultObjectiveInformationWhereInputObjectSchema.optional(), orderBy: z.union([DefaultObjectiveInformationOrderByWithAggregationInputObjectSchema, DefaultObjectiveInformationOrderByWithAggregationInputObjectSchema.array()]).optional(), having: DefaultObjectiveInformationScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(DefaultObjectiveInformationScalarFieldEnumSchema), _count: z.union([z.literal(true), DefaultObjectiveInformationCountAggregateInputObjectSchema]).optional(), _min: DefaultObjectiveInformationMinAggregateInputObjectSchema.optional(), _max: DefaultObjectiveInformationMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: DefaultObjectiveInformationWhereInputObjectSchema.optional(), orderBy: z.union([DefaultObjectiveInformationOrderByWithRelationInputObjectSchema, DefaultObjectiveInformationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: DefaultObjectiveInformationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(DefaultObjectiveInformationScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), DefaultObjectiveInformationCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as DefaultObjectiveInformationInputSchemaType;
