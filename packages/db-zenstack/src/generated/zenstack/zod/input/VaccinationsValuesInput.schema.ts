/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '../../models';

;
import { VaccinationsValuesSelectObjectSchema } from '../objects/VaccinationsValuesSelect.schema';
import { VaccinationsValuesIncludeObjectSchema } from '../objects/VaccinationsValuesInclude.schema';
import { VaccinationsValuesWhereUniqueInputObjectSchema } from '../objects/VaccinationsValuesWhereUniqueInput.schema';
import { VaccinationsValuesWhereInputObjectSchema } from '../objects/VaccinationsValuesWhereInput.schema';
import { VaccinationsValuesOrderByWithRelationInputObjectSchema } from '../objects/VaccinationsValuesOrderByWithRelationInput.schema';
import { VaccinationsValuesScalarFieldEnumSchema } from '../enums/VaccinationsValuesScalarFieldEnum.schema';
import { VaccinationsValuesCreateInputObjectSchema } from '../objects/VaccinationsValuesCreateInput.schema';
import { VaccinationsValuesUncheckedCreateInputObjectSchema } from '../objects/VaccinationsValuesUncheckedCreateInput.schema';
import { VaccinationsValuesCreateManyInputObjectSchema } from '../objects/VaccinationsValuesCreateManyInput.schema';
import { VaccinationsValuesUpdateInputObjectSchema } from '../objects/VaccinationsValuesUpdateInput.schema';
import { VaccinationsValuesUncheckedUpdateInputObjectSchema } from '../objects/VaccinationsValuesUncheckedUpdateInput.schema';
import { VaccinationsValuesUpdateManyMutationInputObjectSchema } from '../objects/VaccinationsValuesUpdateManyMutationInput.schema';
import { VaccinationsValuesUncheckedUpdateManyInputObjectSchema } from '../objects/VaccinationsValuesUncheckedUpdateManyInput.schema';
import { VaccinationsValuesCountAggregateInputObjectSchema } from '../objects/VaccinationsValuesCountAggregateInput.schema';
import { VaccinationsValuesMinAggregateInputObjectSchema } from '../objects/VaccinationsValuesMinAggregateInput.schema';
import { VaccinationsValuesMaxAggregateInputObjectSchema } from '../objects/VaccinationsValuesMaxAggregateInput.schema';
import { VaccinationsValuesOrderByWithAggregationInputObjectSchema } from '../objects/VaccinationsValuesOrderByWithAggregationInput.schema';
import { VaccinationsValuesScalarWhereWithAggregatesInputObjectSchema } from '../objects/VaccinationsValuesScalarWhereWithAggregatesInput.schema'

type VaccinationsValuesInputSchemaType = {
    findUnique: z.ZodType<Prisma.VaccinationsValuesFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.VaccinationsValuesFindFirstArgs>,
    findMany: z.ZodType<Prisma.VaccinationsValuesFindManyArgs>,
    create: z.ZodType<Prisma.VaccinationsValuesCreateArgs>,
    createMany: z.ZodType<Prisma.VaccinationsValuesCreateManyArgs>,
    delete: z.ZodType<Prisma.VaccinationsValuesDeleteArgs>,
    deleteMany: z.ZodType<Prisma.VaccinationsValuesDeleteManyArgs>,
    update: z.ZodType<Prisma.VaccinationsValuesUpdateArgs>,
    updateMany: z.ZodType<Prisma.VaccinationsValuesUpdateManyArgs>,
    upsert: z.ZodType<Prisma.VaccinationsValuesUpsertArgs>,
    aggregate: z.ZodType<Prisma.VaccinationsValuesAggregateArgs>,
    groupBy: z.ZodType<Prisma.VaccinationsValuesGroupByArgs>,
    count: z.ZodType<Prisma.VaccinationsValuesCountArgs>
}

export const VaccinationsValuesInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => VaccinationsValuesSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsValuesIncludeObjectSchema.optional()), where: VaccinationsValuesWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => VaccinationsValuesSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsValuesIncludeObjectSchema.optional()), where: VaccinationsValuesWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsValuesOrderByWithRelationInputObjectSchema, VaccinationsValuesOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VaccinationsValuesWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(VaccinationsValuesScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => VaccinationsValuesSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsValuesIncludeObjectSchema.optional()), where: VaccinationsValuesWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsValuesOrderByWithRelationInputObjectSchema, VaccinationsValuesOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VaccinationsValuesWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(VaccinationsValuesScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => VaccinationsValuesSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsValuesIncludeObjectSchema.optional()), data: z.union([VaccinationsValuesCreateInputObjectSchema, VaccinationsValuesUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([VaccinationsValuesCreateManyInputObjectSchema, z.array(VaccinationsValuesCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => VaccinationsValuesSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsValuesIncludeObjectSchema.optional()), where: VaccinationsValuesWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: VaccinationsValuesWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => VaccinationsValuesSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsValuesIncludeObjectSchema.optional()), data: z.union([VaccinationsValuesUpdateInputObjectSchema, VaccinationsValuesUncheckedUpdateInputObjectSchema]), where: VaccinationsValuesWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([VaccinationsValuesUpdateManyMutationInputObjectSchema, VaccinationsValuesUncheckedUpdateManyInputObjectSchema]), where: VaccinationsValuesWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => VaccinationsValuesSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsValuesIncludeObjectSchema.optional()), where: VaccinationsValuesWhereUniqueInputObjectSchema, create: z.union([VaccinationsValuesCreateInputObjectSchema, VaccinationsValuesUncheckedCreateInputObjectSchema]), update: z.union([VaccinationsValuesUpdateInputObjectSchema, VaccinationsValuesUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: VaccinationsValuesWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsValuesOrderByWithRelationInputObjectSchema, VaccinationsValuesOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VaccinationsValuesWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), VaccinationsValuesCountAggregateInputObjectSchema]).optional(), _min: VaccinationsValuesMinAggregateInputObjectSchema.optional(), _max: VaccinationsValuesMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: VaccinationsValuesWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsValuesOrderByWithAggregationInputObjectSchema, VaccinationsValuesOrderByWithAggregationInputObjectSchema.array()]).optional(), having: VaccinationsValuesScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(VaccinationsValuesScalarFieldEnumSchema), _count: z.union([z.literal(true), VaccinationsValuesCountAggregateInputObjectSchema]).optional(), _min: VaccinationsValuesMinAggregateInputObjectSchema.optional(), _max: VaccinationsValuesMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: VaccinationsValuesWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsValuesOrderByWithRelationInputObjectSchema, VaccinationsValuesOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VaccinationsValuesWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(VaccinationsValuesScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), VaccinationsValuesCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as VaccinationsValuesInputSchemaType;
