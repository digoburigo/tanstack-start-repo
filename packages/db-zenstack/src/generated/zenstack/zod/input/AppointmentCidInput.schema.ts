/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '../../models';

;
import { AppointmentCidSelectObjectSchema } from '../objects/AppointmentCidSelect.schema';
import { AppointmentCidIncludeObjectSchema } from '../objects/AppointmentCidInclude.schema';
import { AppointmentCidWhereUniqueInputObjectSchema } from '../objects/AppointmentCidWhereUniqueInput.schema';
import { AppointmentCidWhereInputObjectSchema } from '../objects/AppointmentCidWhereInput.schema';
import { AppointmentCidOrderByWithRelationInputObjectSchema } from '../objects/AppointmentCidOrderByWithRelationInput.schema';
import { AppointmentCidScalarFieldEnumSchema } from '../enums/AppointmentCidScalarFieldEnum.schema';
import { AppointmentCidCreateInputObjectSchema } from '../objects/AppointmentCidCreateInput.schema';
import { AppointmentCidUncheckedCreateInputObjectSchema } from '../objects/AppointmentCidUncheckedCreateInput.schema';
import { AppointmentCidCreateManyInputObjectSchema } from '../objects/AppointmentCidCreateManyInput.schema';
import { AppointmentCidUpdateInputObjectSchema } from '../objects/AppointmentCidUpdateInput.schema';
import { AppointmentCidUncheckedUpdateInputObjectSchema } from '../objects/AppointmentCidUncheckedUpdateInput.schema';
import { AppointmentCidUpdateManyMutationInputObjectSchema } from '../objects/AppointmentCidUpdateManyMutationInput.schema';
import { AppointmentCidUncheckedUpdateManyInputObjectSchema } from '../objects/AppointmentCidUncheckedUpdateManyInput.schema';
import { AppointmentCidCountAggregateInputObjectSchema } from '../objects/AppointmentCidCountAggregateInput.schema';
import { AppointmentCidMinAggregateInputObjectSchema } from '../objects/AppointmentCidMinAggregateInput.schema';
import { AppointmentCidMaxAggregateInputObjectSchema } from '../objects/AppointmentCidMaxAggregateInput.schema';
import { AppointmentCidOrderByWithAggregationInputObjectSchema } from '../objects/AppointmentCidOrderByWithAggregationInput.schema';
import { AppointmentCidScalarWhereWithAggregatesInputObjectSchema } from '../objects/AppointmentCidScalarWhereWithAggregatesInput.schema'

type AppointmentCidInputSchemaType = {
    findUnique: z.ZodType<Prisma.AppointmentCidFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.AppointmentCidFindFirstArgs>,
    findMany: z.ZodType<Prisma.AppointmentCidFindManyArgs>,
    create: z.ZodType<Prisma.AppointmentCidCreateArgs>,
    createMany: z.ZodType<Prisma.AppointmentCidCreateManyArgs>,
    delete: z.ZodType<Prisma.AppointmentCidDeleteArgs>,
    deleteMany: z.ZodType<Prisma.AppointmentCidDeleteManyArgs>,
    update: z.ZodType<Prisma.AppointmentCidUpdateArgs>,
    updateMany: z.ZodType<Prisma.AppointmentCidUpdateManyArgs>,
    upsert: z.ZodType<Prisma.AppointmentCidUpsertArgs>,
    aggregate: z.ZodType<Prisma.AppointmentCidAggregateArgs>,
    groupBy: z.ZodType<Prisma.AppointmentCidGroupByArgs>,
    count: z.ZodType<Prisma.AppointmentCidCountArgs>
}

export const AppointmentCidInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => AppointmentCidSelectObjectSchema.optional()), include: z.lazy(() => AppointmentCidIncludeObjectSchema.optional()), where: AppointmentCidWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => AppointmentCidSelectObjectSchema.optional()), include: z.lazy(() => AppointmentCidIncludeObjectSchema.optional()), where: AppointmentCidWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentCidOrderByWithRelationInputObjectSchema, AppointmentCidOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: AppointmentCidWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(AppointmentCidScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => AppointmentCidSelectObjectSchema.optional()), include: z.lazy(() => AppointmentCidIncludeObjectSchema.optional()), where: AppointmentCidWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentCidOrderByWithRelationInputObjectSchema, AppointmentCidOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: AppointmentCidWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(AppointmentCidScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => AppointmentCidSelectObjectSchema.optional()), include: z.lazy(() => AppointmentCidIncludeObjectSchema.optional()), data: z.union([AppointmentCidCreateInputObjectSchema, AppointmentCidUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([AppointmentCidCreateManyInputObjectSchema, z.array(AppointmentCidCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => AppointmentCidSelectObjectSchema.optional()), include: z.lazy(() => AppointmentCidIncludeObjectSchema.optional()), where: AppointmentCidWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: AppointmentCidWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => AppointmentCidSelectObjectSchema.optional()), include: z.lazy(() => AppointmentCidIncludeObjectSchema.optional()), data: z.union([AppointmentCidUpdateInputObjectSchema, AppointmentCidUncheckedUpdateInputObjectSchema]), where: AppointmentCidWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([AppointmentCidUpdateManyMutationInputObjectSchema, AppointmentCidUncheckedUpdateManyInputObjectSchema]), where: AppointmentCidWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => AppointmentCidSelectObjectSchema.optional()), include: z.lazy(() => AppointmentCidIncludeObjectSchema.optional()), where: AppointmentCidWhereUniqueInputObjectSchema, create: z.union([AppointmentCidCreateInputObjectSchema, AppointmentCidUncheckedCreateInputObjectSchema]), update: z.union([AppointmentCidUpdateInputObjectSchema, AppointmentCidUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: AppointmentCidWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentCidOrderByWithRelationInputObjectSchema, AppointmentCidOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: AppointmentCidWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), AppointmentCidCountAggregateInputObjectSchema]).optional(), _min: AppointmentCidMinAggregateInputObjectSchema.optional(), _max: AppointmentCidMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: AppointmentCidWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentCidOrderByWithAggregationInputObjectSchema, AppointmentCidOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AppointmentCidScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AppointmentCidScalarFieldEnumSchema), _count: z.union([z.literal(true), AppointmentCidCountAggregateInputObjectSchema]).optional(), _min: AppointmentCidMinAggregateInputObjectSchema.optional(), _max: AppointmentCidMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: AppointmentCidWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentCidOrderByWithRelationInputObjectSchema, AppointmentCidOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: AppointmentCidWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(AppointmentCidScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), AppointmentCidCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as AppointmentCidInputSchemaType;
