/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '../../models';

;
import { VerificationSelectObjectSchema } from '../objects/VerificationSelect.schema';
;
import { VerificationWhereUniqueInputObjectSchema } from '../objects/VerificationWhereUniqueInput.schema';
import { VerificationWhereInputObjectSchema } from '../objects/VerificationWhereInput.schema';
import { VerificationOrderByWithRelationInputObjectSchema } from '../objects/VerificationOrderByWithRelationInput.schema';
import { VerificationScalarFieldEnumSchema } from '../enums/VerificationScalarFieldEnum.schema';
import { VerificationCreateInputObjectSchema } from '../objects/VerificationCreateInput.schema';
import { VerificationUncheckedCreateInputObjectSchema } from '../objects/VerificationUncheckedCreateInput.schema';
import { VerificationCreateManyInputObjectSchema } from '../objects/VerificationCreateManyInput.schema';
import { VerificationUpdateInputObjectSchema } from '../objects/VerificationUpdateInput.schema';
import { VerificationUncheckedUpdateInputObjectSchema } from '../objects/VerificationUncheckedUpdateInput.schema';
import { VerificationUpdateManyMutationInputObjectSchema } from '../objects/VerificationUpdateManyMutationInput.schema';
import { VerificationUncheckedUpdateManyInputObjectSchema } from '../objects/VerificationUncheckedUpdateManyInput.schema';
import { VerificationCountAggregateInputObjectSchema } from '../objects/VerificationCountAggregateInput.schema';
import { VerificationMinAggregateInputObjectSchema } from '../objects/VerificationMinAggregateInput.schema';
import { VerificationMaxAggregateInputObjectSchema } from '../objects/VerificationMaxAggregateInput.schema';
import { VerificationOrderByWithAggregationInputObjectSchema } from '../objects/VerificationOrderByWithAggregationInput.schema';
import { VerificationScalarWhereWithAggregatesInputObjectSchema } from '../objects/VerificationScalarWhereWithAggregatesInput.schema'

type VerificationInputSchemaType = {
    findUnique: z.ZodType<Prisma.VerificationFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.VerificationFindFirstArgs>,
    findMany: z.ZodType<Prisma.VerificationFindManyArgs>,
    create: z.ZodType<Prisma.VerificationCreateArgs>,
    createMany: z.ZodType<Prisma.VerificationCreateManyArgs>,
    delete: z.ZodType<Prisma.VerificationDeleteArgs>,
    deleteMany: z.ZodType<Prisma.VerificationDeleteManyArgs>,
    update: z.ZodType<Prisma.VerificationUpdateArgs>,
    updateMany: z.ZodType<Prisma.VerificationUpdateManyArgs>,
    upsert: z.ZodType<Prisma.VerificationUpsertArgs>,
    aggregate: z.ZodType<Prisma.VerificationAggregateArgs>,
    groupBy: z.ZodType<Prisma.VerificationGroupByArgs>,
    count: z.ZodType<Prisma.VerificationCountArgs>
}

export const VerificationInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => VerificationSelectObjectSchema.optional()), where: VerificationWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => VerificationSelectObjectSchema.optional()), where: VerificationWhereInputObjectSchema.optional(), orderBy: z.union([VerificationOrderByWithRelationInputObjectSchema, VerificationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VerificationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(VerificationScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => VerificationSelectObjectSchema.optional()), where: VerificationWhereInputObjectSchema.optional(), orderBy: z.union([VerificationOrderByWithRelationInputObjectSchema, VerificationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VerificationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(VerificationScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => VerificationSelectObjectSchema.optional()), data: z.union([VerificationCreateInputObjectSchema, VerificationUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([VerificationCreateManyInputObjectSchema, z.array(VerificationCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => VerificationSelectObjectSchema.optional()), where: VerificationWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: VerificationWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => VerificationSelectObjectSchema.optional()), data: z.union([VerificationUpdateInputObjectSchema, VerificationUncheckedUpdateInputObjectSchema]), where: VerificationWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([VerificationUpdateManyMutationInputObjectSchema, VerificationUncheckedUpdateManyInputObjectSchema]), where: VerificationWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => VerificationSelectObjectSchema.optional()), where: VerificationWhereUniqueInputObjectSchema, create: z.union([VerificationCreateInputObjectSchema, VerificationUncheckedCreateInputObjectSchema]), update: z.union([VerificationUpdateInputObjectSchema, VerificationUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: VerificationWhereInputObjectSchema.optional(), orderBy: z.union([VerificationOrderByWithRelationInputObjectSchema, VerificationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VerificationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), VerificationCountAggregateInputObjectSchema]).optional(), _min: VerificationMinAggregateInputObjectSchema.optional(), _max: VerificationMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: VerificationWhereInputObjectSchema.optional(), orderBy: z.union([VerificationOrderByWithAggregationInputObjectSchema, VerificationOrderByWithAggregationInputObjectSchema.array()]).optional(), having: VerificationScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(VerificationScalarFieldEnumSchema), _count: z.union([z.literal(true), VerificationCountAggregateInputObjectSchema]).optional(), _min: VerificationMinAggregateInputObjectSchema.optional(), _max: VerificationMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: VerificationWhereInputObjectSchema.optional(), orderBy: z.union([VerificationOrderByWithRelationInputObjectSchema, VerificationOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VerificationWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(VerificationScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), VerificationCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as VerificationInputSchemaType;
