/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { MedicationsCreateWithoutPatientInputObjectSchema } from './MedicationsCreateWithoutPatientInput.schema';
import { MedicationsUncheckedCreateWithoutPatientInputObjectSchema } from './MedicationsUncheckedCreateWithoutPatientInput.schema';
import { MedicationsCreateOrConnectWithoutPatientInputObjectSchema } from './MedicationsCreateOrConnectWithoutPatientInput.schema';
import { MedicationsUpsertWithWhereUniqueWithoutPatientInputObjectSchema } from './MedicationsUpsertWithWhereUniqueWithoutPatientInput.schema';
import { MedicationsCreateManyPatientInputEnvelopeObjectSchema } from './MedicationsCreateManyPatientInputEnvelope.schema';
import { MedicationsWhereUniqueInputObjectSchema } from './MedicationsWhereUniqueInput.schema';
import { MedicationsUpdateWithWhereUniqueWithoutPatientInputObjectSchema } from './MedicationsUpdateWithWhereUniqueWithoutPatientInput.schema';
import { MedicationsUpdateManyWithWhereWithoutPatientInputObjectSchema } from './MedicationsUpdateManyWithWhereWithoutPatientInput.schema';
import { MedicationsScalarWhereInputObjectSchema } from './MedicationsScalarWhereInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.MedicationsUpdateManyWithoutPatientNestedInput>;
export const MedicationsUpdateManyWithoutPatientNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => MedicationsCreateWithoutPatientInputObjectSchema), z.lazy(() => MedicationsCreateWithoutPatientInputObjectSchema).array(), z.lazy(() => MedicationsUncheckedCreateWithoutPatientInputObjectSchema), z.lazy(() => MedicationsUncheckedCreateWithoutPatientInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => MedicationsCreateOrConnectWithoutPatientInputObjectSchema),
    z.lazy(() => MedicationsCreateOrConnectWithoutPatientInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => MedicationsUpsertWithWhereUniqueWithoutPatientInputObjectSchema),
    z.lazy(() => MedicationsUpsertWithWhereUniqueWithoutPatientInputObjectSchema).array()]).optional(), createMany: z.lazy(() => MedicationsCreateManyPatientInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => MedicationsWhereUniqueInputObjectSchema),
    z.lazy(() => MedicationsWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => MedicationsWhereUniqueInputObjectSchema),
    z.lazy(() => MedicationsWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => MedicationsWhereUniqueInputObjectSchema),
    z.lazy(() => MedicationsWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => MedicationsWhereUniqueInputObjectSchema),
    z.lazy(() => MedicationsWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => MedicationsUpdateWithWhereUniqueWithoutPatientInputObjectSchema),
    z.lazy(() => MedicationsUpdateWithWhereUniqueWithoutPatientInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => MedicationsUpdateManyWithWhereWithoutPatientInputObjectSchema),
    z.lazy(() => MedicationsUpdateManyWithWhereWithoutPatientInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => MedicationsScalarWhereInputObjectSchema),
    z.lazy(() => MedicationsScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
