/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { ComorbiditiesCreateWithoutOrganizationInputObjectSchema } from './ComorbiditiesCreateWithoutOrganizationInput.schema';
import { ComorbiditiesUncheckedCreateWithoutOrganizationInputObjectSchema } from './ComorbiditiesUncheckedCreateWithoutOrganizationInput.schema';
import { ComorbiditiesCreateOrConnectWithoutOrganizationInputObjectSchema } from './ComorbiditiesCreateOrConnectWithoutOrganizationInput.schema';
import { ComorbiditiesCreateManyOrganizationInputEnvelopeObjectSchema } from './ComorbiditiesCreateManyOrganizationInputEnvelope.schema';
import { ComorbiditiesWhereUniqueInputObjectSchema } from './ComorbiditiesWhereUniqueInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.ComorbiditiesUncheckedCreateNestedManyWithoutOrganizationInput>;
export const ComorbiditiesUncheckedCreateNestedManyWithoutOrganizationInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => ComorbiditiesCreateWithoutOrganizationInputObjectSchema), z.lazy(() => ComorbiditiesCreateWithoutOrganizationInputObjectSchema).array(), z.lazy(() => ComorbiditiesUncheckedCreateWithoutOrganizationInputObjectSchema), z.lazy(() => ComorbiditiesUncheckedCreateWithoutOrganizationInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => ComorbiditiesCreateOrConnectWithoutOrganizationInputObjectSchema),
    z.lazy(() => ComorbiditiesCreateOrConnectWithoutOrganizationInputObjectSchema).array()]).optional(), createMany: z.lazy(() => ComorbiditiesCreateManyOrganizationInputEnvelopeObjectSchema).optional().optional(), connect: z.union([z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema),
    z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
