/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { ComorbiditiesValuesCreateWithoutComorbiditiesInputObjectSchema } from './ComorbiditiesValuesCreateWithoutComorbiditiesInput.schema';
import { ComorbiditiesValuesUncheckedCreateWithoutComorbiditiesInputObjectSchema } from './ComorbiditiesValuesUncheckedCreateWithoutComorbiditiesInput.schema';
import { ComorbiditiesValuesCreateOrConnectWithoutComorbiditiesInputObjectSchema } from './ComorbiditiesValuesCreateOrConnectWithoutComorbiditiesInput.schema';
import { ComorbiditiesValuesUpsertWithoutComorbiditiesInputObjectSchema } from './ComorbiditiesValuesUpsertWithoutComorbiditiesInput.schema';
import { ComorbiditiesValuesWhereUniqueInputObjectSchema } from './ComorbiditiesValuesWhereUniqueInput.schema';
import { ComorbiditiesValuesUpdateToOneWithWhereWithoutComorbiditiesInputObjectSchema } from './ComorbiditiesValuesUpdateToOneWithWhereWithoutComorbiditiesInput.schema';
import { ComorbiditiesValuesUpdateWithoutComorbiditiesInputObjectSchema } from './ComorbiditiesValuesUpdateWithoutComorbiditiesInput.schema';
import { ComorbiditiesValuesUncheckedUpdateWithoutComorbiditiesInputObjectSchema } from './ComorbiditiesValuesUncheckedUpdateWithoutComorbiditiesInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.ComorbiditiesValuesUpdateOneRequiredWithoutComorbiditiesNestedInput>;
export const ComorbiditiesValuesUpdateOneRequiredWithoutComorbiditiesNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => ComorbiditiesValuesCreateWithoutComorbiditiesInputObjectSchema), z.lazy(() => ComorbiditiesValuesUncheckedCreateWithoutComorbiditiesInputObjectSchema)]).optional(), connectOrCreate: z.lazy(() => ComorbiditiesValuesCreateOrConnectWithoutComorbiditiesInputObjectSchema).optional().optional(), upsert: z.lazy(() => ComorbiditiesValuesUpsertWithoutComorbiditiesInputObjectSchema).optional().optional(), connect: z.lazy(() => ComorbiditiesValuesWhereUniqueInputObjectSchema).optional().optional(), update: z.union([z.lazy(() => ComorbiditiesValuesUpdateToOneWithWhereWithoutComorbiditiesInputObjectSchema), z.lazy(() => ComorbiditiesValuesUpdateWithoutComorbiditiesInputObjectSchema), z.lazy(() => ComorbiditiesValuesUncheckedUpdateWithoutComorbiditiesInputObjectSchema)]).optional()
}).strict() as SchemaType;
