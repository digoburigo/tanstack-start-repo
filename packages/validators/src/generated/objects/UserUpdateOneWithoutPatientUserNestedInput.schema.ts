/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { UserCreateWithoutPatientUserInputObjectSchema } from './UserCreateWithoutPatientUserInput.schema';
import { UserUncheckedCreateWithoutPatientUserInputObjectSchema } from './UserUncheckedCreateWithoutPatientUserInput.schema';
import { UserCreateOrConnectWithoutPatientUserInputObjectSchema } from './UserCreateOrConnectWithoutPatientUserInput.schema';
import { UserUpsertWithoutPatientUserInputObjectSchema } from './UserUpsertWithoutPatientUserInput.schema';
import { UserWhereInputObjectSchema } from './UserWhereInput.schema';
import { UserWhereUniqueInputObjectSchema } from './UserWhereUniqueInput.schema';
import { UserUpdateToOneWithWhereWithoutPatientUserInputObjectSchema } from './UserUpdateToOneWithWhereWithoutPatientUserInput.schema';
import { UserUpdateWithoutPatientUserInputObjectSchema } from './UserUpdateWithoutPatientUserInput.schema';
import { UserUncheckedUpdateWithoutPatientUserInputObjectSchema } from './UserUncheckedUpdateWithoutPatientUserInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.UserUpdateOneWithoutPatientUserNestedInput>;
export const UserUpdateOneWithoutPatientUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => UserCreateWithoutPatientUserInputObjectSchema), z.lazy(() => UserUncheckedCreateWithoutPatientUserInputObjectSchema)]).optional(), connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutPatientUserInputObjectSchema).optional().optional(), upsert: z.lazy(() => UserUpsertWithoutPatientUserInputObjectSchema).optional().optional(), disconnect: z.union([z.boolean(),
    z.lazy(() => UserWhereInputObjectSchema)]).optional(), delete: z.union([z.boolean(),
    z.lazy(() => UserWhereInputObjectSchema)]).optional(), connect: z.lazy(() => UserWhereUniqueInputObjectSchema).optional().optional(), update: z.union([z.lazy(() => UserUpdateToOneWithWhereWithoutPatientUserInputObjectSchema), z.lazy(() => UserUpdateWithoutPatientUserInputObjectSchema), z.lazy(() => UserUncheckedUpdateWithoutPatientUserInputObjectSchema)]).optional()
}).strict() as SchemaType;
