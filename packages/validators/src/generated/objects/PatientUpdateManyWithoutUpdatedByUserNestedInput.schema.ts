/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { PatientCreateWithoutUpdatedByUserInputObjectSchema } from './PatientCreateWithoutUpdatedByUserInput.schema';
import { PatientUncheckedCreateWithoutUpdatedByUserInputObjectSchema } from './PatientUncheckedCreateWithoutUpdatedByUserInput.schema';
import { PatientCreateOrConnectWithoutUpdatedByUserInputObjectSchema } from './PatientCreateOrConnectWithoutUpdatedByUserInput.schema';
import { PatientUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema } from './PatientUpsertWithWhereUniqueWithoutUpdatedByUserInput.schema';
import { PatientCreateManyUpdatedByUserInputEnvelopeObjectSchema } from './PatientCreateManyUpdatedByUserInputEnvelope.schema';
import { PatientWhereUniqueInputObjectSchema } from './PatientWhereUniqueInput.schema';
import { PatientUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema } from './PatientUpdateWithWhereUniqueWithoutUpdatedByUserInput.schema';
import { PatientUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema } from './PatientUpdateManyWithWhereWithoutUpdatedByUserInput.schema';
import { PatientScalarWhereInputObjectSchema } from './PatientScalarWhereInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.PatientUpdateManyWithoutUpdatedByUserNestedInput>;
export const PatientUpdateManyWithoutUpdatedByUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => PatientCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => PatientCreateWithoutUpdatedByUserInputObjectSchema).array(), z.lazy(() => PatientUncheckedCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => PatientUncheckedCreateWithoutUpdatedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => PatientCreateOrConnectWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => PatientCreateOrConnectWithoutUpdatedByUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => PatientUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => PatientUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => PatientCreateManyUpdatedByUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => PatientWhereUniqueInputObjectSchema),
    z.lazy(() => PatientWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => PatientWhereUniqueInputObjectSchema),
    z.lazy(() => PatientWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => PatientWhereUniqueInputObjectSchema),
    z.lazy(() => PatientWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => PatientWhereUniqueInputObjectSchema),
    z.lazy(() => PatientWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => PatientUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => PatientUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => PatientUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => PatientUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => PatientScalarWhereInputObjectSchema),
    z.lazy(() => PatientScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
