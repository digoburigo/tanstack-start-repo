/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { DefaultObjectiveInformationCreateWithoutOrganizationInputObjectSchema } from './DefaultObjectiveInformationCreateWithoutOrganizationInput.schema';
import { DefaultObjectiveInformationUncheckedCreateWithoutOrganizationInputObjectSchema } from './DefaultObjectiveInformationUncheckedCreateWithoutOrganizationInput.schema';
import { DefaultObjectiveInformationCreateOrConnectWithoutOrganizationInputObjectSchema } from './DefaultObjectiveInformationCreateOrConnectWithoutOrganizationInput.schema';
import { DefaultObjectiveInformationCreateManyOrganizationInputEnvelopeObjectSchema } from './DefaultObjectiveInformationCreateManyOrganizationInputEnvelope.schema';
import { DefaultObjectiveInformationWhereUniqueInputObjectSchema } from './DefaultObjectiveInformationWhereUniqueInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.DefaultObjectiveInformationUncheckedCreateNestedManyWithoutOrganizationInput>;
export const DefaultObjectiveInformationUncheckedCreateNestedManyWithoutOrganizationInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => DefaultObjectiveInformationCreateWithoutOrganizationInputObjectSchema), z.lazy(() => DefaultObjectiveInformationCreateWithoutOrganizationInputObjectSchema).array(), z.lazy(() => DefaultObjectiveInformationUncheckedCreateWithoutOrganizationInputObjectSchema), z.lazy(() => DefaultObjectiveInformationUncheckedCreateWithoutOrganizationInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => DefaultObjectiveInformationCreateOrConnectWithoutOrganizationInputObjectSchema),
    z.lazy(() => DefaultObjectiveInformationCreateOrConnectWithoutOrganizationInputObjectSchema).array()]).optional(), createMany: z.lazy(() => DefaultObjectiveInformationCreateManyOrganizationInputEnvelopeObjectSchema).optional().optional(), connect: z.union([z.lazy(() => DefaultObjectiveInformationWhereUniqueInputObjectSchema),
    z.lazy(() => DefaultObjectiveInformationWhereUniqueInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
