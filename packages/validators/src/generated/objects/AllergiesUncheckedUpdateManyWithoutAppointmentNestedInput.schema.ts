/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { AllergiesCreateWithoutAppointmentInputObjectSchema } from './AllergiesCreateWithoutAppointmentInput.schema';
import { AllergiesUncheckedCreateWithoutAppointmentInputObjectSchema } from './AllergiesUncheckedCreateWithoutAppointmentInput.schema';
import { AllergiesCreateOrConnectWithoutAppointmentInputObjectSchema } from './AllergiesCreateOrConnectWithoutAppointmentInput.schema';
import { AllergiesUpsertWithWhereUniqueWithoutAppointmentInputObjectSchema } from './AllergiesUpsertWithWhereUniqueWithoutAppointmentInput.schema';
import { AllergiesCreateManyAppointmentInputEnvelopeObjectSchema } from './AllergiesCreateManyAppointmentInputEnvelope.schema';
import { AllergiesWhereUniqueInputObjectSchema } from './AllergiesWhereUniqueInput.schema';
import { AllergiesUpdateWithWhereUniqueWithoutAppointmentInputObjectSchema } from './AllergiesUpdateWithWhereUniqueWithoutAppointmentInput.schema';
import { AllergiesUpdateManyWithWhereWithoutAppointmentInputObjectSchema } from './AllergiesUpdateManyWithWhereWithoutAppointmentInput.schema';
import { AllergiesScalarWhereInputObjectSchema } from './AllergiesScalarWhereInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.AllergiesUncheckedUpdateManyWithoutAppointmentNestedInput>;
export const AllergiesUncheckedUpdateManyWithoutAppointmentNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => AllergiesCreateWithoutAppointmentInputObjectSchema), z.lazy(() => AllergiesCreateWithoutAppointmentInputObjectSchema).array(), z.lazy(() => AllergiesUncheckedCreateWithoutAppointmentInputObjectSchema), z.lazy(() => AllergiesUncheckedCreateWithoutAppointmentInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => AllergiesCreateOrConnectWithoutAppointmentInputObjectSchema),
    z.lazy(() => AllergiesCreateOrConnectWithoutAppointmentInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => AllergiesUpsertWithWhereUniqueWithoutAppointmentInputObjectSchema),
    z.lazy(() => AllergiesUpsertWithWhereUniqueWithoutAppointmentInputObjectSchema).array()]).optional(), createMany: z.lazy(() => AllergiesCreateManyAppointmentInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => AllergiesUpdateWithWhereUniqueWithoutAppointmentInputObjectSchema),
    z.lazy(() => AllergiesUpdateWithWhereUniqueWithoutAppointmentInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => AllergiesUpdateManyWithWhereWithoutAppointmentInputObjectSchema),
    z.lazy(() => AllergiesUpdateManyWithWhereWithoutAppointmentInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => AllergiesScalarWhereInputObjectSchema),
    z.lazy(() => AllergiesScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
