/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { EventCalendarCreateWithoutCreatedByUserInputObjectSchema } from './EventCalendarCreateWithoutCreatedByUserInput.schema';
import { EventCalendarUncheckedCreateWithoutCreatedByUserInputObjectSchema } from './EventCalendarUncheckedCreateWithoutCreatedByUserInput.schema';
import { EventCalendarCreateOrConnectWithoutCreatedByUserInputObjectSchema } from './EventCalendarCreateOrConnectWithoutCreatedByUserInput.schema';
import { EventCalendarCreateManyCreatedByUserInputEnvelopeObjectSchema } from './EventCalendarCreateManyCreatedByUserInputEnvelope.schema';
import { EventCalendarWhereUniqueInputObjectSchema } from './EventCalendarWhereUniqueInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.EventCalendarUncheckedCreateNestedManyWithoutCreatedByUserInput>;
export const EventCalendarUncheckedCreateNestedManyWithoutCreatedByUserInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => EventCalendarCreateWithoutCreatedByUserInputObjectSchema), z.lazy(() => EventCalendarCreateWithoutCreatedByUserInputObjectSchema).array(), z.lazy(() => EventCalendarUncheckedCreateWithoutCreatedByUserInputObjectSchema), z.lazy(() => EventCalendarUncheckedCreateWithoutCreatedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => EventCalendarCreateOrConnectWithoutCreatedByUserInputObjectSchema),
    z.lazy(() => EventCalendarCreateOrConnectWithoutCreatedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => EventCalendarCreateManyCreatedByUserInputEnvelopeObjectSchema).optional().optional(), connect: z.union([z.lazy(() => EventCalendarWhereUniqueInputObjectSchema),
    z.lazy(() => EventCalendarWhereUniqueInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
