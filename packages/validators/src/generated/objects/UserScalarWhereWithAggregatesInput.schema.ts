/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { StringWithAggregatesFilterObjectSchema } from './StringWithAggregatesFilter.schema';
import { BoolWithAggregatesFilterObjectSchema } from './BoolWithAggregatesFilter.schema';
import { StringNullableWithAggregatesFilterObjectSchema } from './StringNullableWithAggregatesFilter.schema';
import { DateTimeWithAggregatesFilterObjectSchema } from './DateTimeWithAggregatesFilter.schema';
import { EnumUserRoleNullableWithAggregatesFilterObjectSchema } from './EnumUserRoleNullableWithAggregatesFilter.schema';
import { UserRoleSchema } from '../enums/UserRole.schema';
import { BoolNullableWithAggregatesFilterObjectSchema } from './BoolNullableWithAggregatesFilter.schema';
import { DateTimeNullableWithAggregatesFilterObjectSchema } from './DateTimeNullableWithAggregatesFilter.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.UserScalarWhereWithAggregatesInput>;
export const UserScalarWhereWithAggregatesInputObjectSchema: SchemaType = z.object({
    AND: z.union([z.lazy(() => UserScalarWhereWithAggregatesInputObjectSchema),
    z.lazy(() => UserScalarWhereWithAggregatesInputObjectSchema).array()]).optional(), OR: z.lazy(() => UserScalarWhereWithAggregatesInputObjectSchema).array().optional().optional(), NOT: z.union([z.lazy(() => UserScalarWhereWithAggregatesInputObjectSchema),
    z.lazy(() => UserScalarWhereWithAggregatesInputObjectSchema).array()]).optional(), id: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), name: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), email: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), emailVerified: z.union([z.lazy(() => BoolWithAggregatesFilterObjectSchema),
    z.boolean()]).optional(), image: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), createdAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), updatedAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), username: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), displayUsername: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), role: z.union([z.lazy(() => EnumUserRoleNullableWithAggregatesFilterObjectSchema),
    z.lazy(() => UserRoleSchema),
    z.null()]).optional().nullable(), banned: z.union([z.lazy(() => BoolNullableWithAggregatesFilterObjectSchema),
    z.boolean(),
    z.null()]).optional().nullable(), banReason: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), banExpires: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()]),
    z.null()]).optional().nullable(), changePassword: z.union([z.lazy(() => BoolNullableWithAggregatesFilterObjectSchema),
    z.boolean(),
    z.null()]).optional().nullable()
}).strict() as SchemaType;
