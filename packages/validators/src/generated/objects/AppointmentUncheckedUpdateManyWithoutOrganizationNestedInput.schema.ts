/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { AppointmentCreateWithoutOrganizationInputObjectSchema } from './AppointmentCreateWithoutOrganizationInput.schema';
import { AppointmentUncheckedCreateWithoutOrganizationInputObjectSchema } from './AppointmentUncheckedCreateWithoutOrganizationInput.schema';
import { AppointmentCreateOrConnectWithoutOrganizationInputObjectSchema } from './AppointmentCreateOrConnectWithoutOrganizationInput.schema';
import { AppointmentUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema } from './AppointmentUpsertWithWhereUniqueWithoutOrganizationInput.schema';
import { AppointmentCreateManyOrganizationInputEnvelopeObjectSchema } from './AppointmentCreateManyOrganizationInputEnvelope.schema';
import { AppointmentWhereUniqueInputObjectSchema } from './AppointmentWhereUniqueInput.schema';
import { AppointmentUpdateWithWhereUniqueWithoutOrganizationInputObjectSchema } from './AppointmentUpdateWithWhereUniqueWithoutOrganizationInput.schema';
import { AppointmentUpdateManyWithWhereWithoutOrganizationInputObjectSchema } from './AppointmentUpdateManyWithWhereWithoutOrganizationInput.schema';
import { AppointmentScalarWhereInputObjectSchema } from './AppointmentScalarWhereInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.AppointmentUncheckedUpdateManyWithoutOrganizationNestedInput>;
export const AppointmentUncheckedUpdateManyWithoutOrganizationNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => AppointmentCreateWithoutOrganizationInputObjectSchema), z.lazy(() => AppointmentCreateWithoutOrganizationInputObjectSchema).array(), z.lazy(() => AppointmentUncheckedCreateWithoutOrganizationInputObjectSchema), z.lazy(() => AppointmentUncheckedCreateWithoutOrganizationInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => AppointmentCreateOrConnectWithoutOrganizationInputObjectSchema),
    z.lazy(() => AppointmentCreateOrConnectWithoutOrganizationInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => AppointmentUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema),
    z.lazy(() => AppointmentUpsertWithWhereUniqueWithoutOrganizationInputObjectSchema).array()]).optional(), createMany: z.lazy(() => AppointmentCreateManyOrganizationInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => AppointmentWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => AppointmentWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => AppointmentWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => AppointmentWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => AppointmentUpdateWithWhereUniqueWithoutOrganizationInputObjectSchema),
    z.lazy(() => AppointmentUpdateWithWhereUniqueWithoutOrganizationInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => AppointmentUpdateManyWithWhereWithoutOrganizationInputObjectSchema),
    z.lazy(() => AppointmentUpdateManyWithWhereWithoutOrganizationInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => AppointmentScalarWhereInputObjectSchema),
    z.lazy(() => AppointmentScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
