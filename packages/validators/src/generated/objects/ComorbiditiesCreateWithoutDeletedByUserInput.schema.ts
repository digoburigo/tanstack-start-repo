/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { UserCreateWithoutCreatedAssetsInputObjectSchema } from './UserCreateWithoutCreatedAssetsInput.schema';
import { UserCreateWithoutUpdatedAssetsInputObjectSchema } from './UserCreateWithoutUpdatedAssetsInput.schema';
import { OrganizationCreateWithoutAssetsInputObjectSchema } from './OrganizationCreateWithoutAssetsInput.schema';
import { PatientCreateNestedOneWithoutComorbiditiesInputObjectSchema } from './PatientCreateNestedOneWithoutComorbiditiesInput.schema';
import { ComorbiditiesValuesCreateNestedOneWithoutComorbiditiesInputObjectSchema } from './ComorbiditiesValuesCreateNestedOneWithoutComorbiditiesInput.schema';
import { AppointmentCreateNestedOneWithoutComorbiditiesInputObjectSchema } from './AppointmentCreateNestedOneWithoutComorbiditiesInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.ComorbiditiesCreateWithoutDeletedByUserInput>;
export const ComorbiditiesCreateWithoutDeletedByUserInputObjectSchema: SchemaType = z.object({
    id: z.string().optional().optional(), createdAt: z.union([z.date().optional(), z.string().datetime().optional()]).optional(), updatedAt: z.union([z.date().optional(), z.string().datetime().optional()]).optional(), deletedAt: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.null()]).optional().nullable(), deleted: z.boolean().optional().optional(), createdByUser: z.lazy(() => UserCreateWithoutCreatedAssetsInputObjectSchema).optional().optional(), updatedByUser: z.lazy(() => UserCreateWithoutUpdatedAssetsInputObjectSchema).optional().optional(), organization: z.lazy(() => OrganizationCreateWithoutAssetsInputObjectSchema).optional().optional(), patient: z.lazy(() => PatientCreateNestedOneWithoutComorbiditiesInputObjectSchema).optional().optional(), comorbiditiesValues: z.lazy(() => ComorbiditiesValuesCreateNestedOneWithoutComorbiditiesInputObjectSchema), appointment: z.lazy(() => AppointmentCreateNestedOneWithoutComorbiditiesInputObjectSchema).optional().optional()
}).strict() as SchemaType;
