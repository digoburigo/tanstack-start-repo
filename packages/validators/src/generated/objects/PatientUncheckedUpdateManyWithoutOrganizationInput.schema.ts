/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { StringFieldUpdateOperationsInputObjectSchema } from './StringFieldUpdateOperationsInput.schema';
import { DateTimeFieldUpdateOperationsInputObjectSchema } from './DateTimeFieldUpdateOperationsInput.schema';
import { NullableStringFieldUpdateOperationsInputObjectSchema } from './NullableStringFieldUpdateOperationsInput.schema';
import { NullableDateTimeFieldUpdateOperationsInputObjectSchema } from './NullableDateTimeFieldUpdateOperationsInput.schema';
import { BoolFieldUpdateOperationsInputObjectSchema } from './BoolFieldUpdateOperationsInput.schema';
import { SexSchema } from '../enums/Sex.schema';
import { NullableEnumSexFieldUpdateOperationsInputObjectSchema } from './NullableEnumSexFieldUpdateOperationsInput.schema';
import { RaceSchema } from '../enums/Race.schema';
import { NullableEnumRaceFieldUpdateOperationsInputObjectSchema } from './NullableEnumRaceFieldUpdateOperationsInput.schema';
import { CivilStatusSchema } from '../enums/CivilStatus.schema';
import { NullableEnumCivilStatusFieldUpdateOperationsInputObjectSchema } from './NullableEnumCivilStatusFieldUpdateOperationsInput.schema';
import { BloodTypeSchema } from '../enums/BloodType.schema';
import { NullableEnumBloodTypeFieldUpdateOperationsInputObjectSchema } from './NullableEnumBloodTypeFieldUpdateOperationsInput.schema';
import { GenderIdentitySchema } from '../enums/GenderIdentity.schema';
import { NullableEnumGenderIdentityFieldUpdateOperationsInputObjectSchema } from './NullableEnumGenderIdentityFieldUpdateOperationsInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.PatientUncheckedUpdateManyWithoutOrganizationInput>;
export const PatientUncheckedUpdateManyWithoutOrganizationInputObjectSchema: SchemaType = z.object({
    id: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), createdAt: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.lazy(() => DateTimeFieldUpdateOperationsInputObjectSchema)]).optional(), createdById: z.union([z.string(),
    z.lazy(() => NullableStringFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), updatedAt: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.lazy(() => DateTimeFieldUpdateOperationsInputObjectSchema)]).optional(), updatedById: z.union([z.string(),
    z.lazy(() => NullableStringFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), deletedAt: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.lazy(() => NullableDateTimeFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), deletedById: z.union([z.string(),
    z.lazy(() => NullableStringFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), deleted: z.union([z.boolean(),
    z.lazy(() => BoolFieldUpdateOperationsInputObjectSchema)]).optional(), name: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), cpf: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), cellphone: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), email: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), sex: z.union([z.lazy(() => SexSchema),
    z.lazy(() => NullableEnumSexFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), responsible: z.union([z.string(),
    z.lazy(() => NullableStringFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), nationality: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), race: z.union([z.lazy(() => RaceSchema),
    z.lazy(() => NullableEnumRaceFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), state: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), city: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), zipcode: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), neighborhood: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), street: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), number: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), complement: z.union([z.string(),
    z.lazy(() => NullableStringFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), occupation: z.union([z.string(),
    z.lazy(() => StringFieldUpdateOperationsInputObjectSchema)]).optional(), sexualOrientation: z.union([z.string(),
    z.lazy(() => NullableStringFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), civilStatus: z.union([z.lazy(() => CivilStatusSchema),
    z.lazy(() => NullableEnumCivilStatusFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), bloodType: z.union([z.lazy(() => BloodTypeSchema),
    z.lazy(() => NullableEnumBloodTypeFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), genderIdentity: z.union([z.lazy(() => GenderIdentitySchema),
    z.lazy(() => NullableEnumGenderIdentityFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), password: z.union([z.string(),
    z.lazy(() => NullableStringFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable(), userId: z.union([z.string(),
    z.lazy(() => NullableStringFieldUpdateOperationsInputObjectSchema),
    z.null()]).optional().nullable()
}).strict() as SchemaType;
