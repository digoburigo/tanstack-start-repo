/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { AppointmentCreateWithoutUpdatedByUserInputObjectSchema } from './AppointmentCreateWithoutUpdatedByUserInput.schema';
import { AppointmentUncheckedCreateWithoutUpdatedByUserInputObjectSchema } from './AppointmentUncheckedCreateWithoutUpdatedByUserInput.schema';
import { AppointmentCreateOrConnectWithoutUpdatedByUserInputObjectSchema } from './AppointmentCreateOrConnectWithoutUpdatedByUserInput.schema';
import { AppointmentUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema } from './AppointmentUpsertWithWhereUniqueWithoutUpdatedByUserInput.schema';
import { AppointmentCreateManyUpdatedByUserInputEnvelopeObjectSchema } from './AppointmentCreateManyUpdatedByUserInputEnvelope.schema';
import { AppointmentWhereUniqueInputObjectSchema } from './AppointmentWhereUniqueInput.schema';
import { AppointmentUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema } from './AppointmentUpdateWithWhereUniqueWithoutUpdatedByUserInput.schema';
import { AppointmentUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema } from './AppointmentUpdateManyWithWhereWithoutUpdatedByUserInput.schema';
import { AppointmentScalarWhereInputObjectSchema } from './AppointmentScalarWhereInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.AppointmentUpdateManyWithoutUpdatedByUserNestedInput>;
export const AppointmentUpdateManyWithoutUpdatedByUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => AppointmentCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => AppointmentCreateWithoutUpdatedByUserInputObjectSchema).array(), z.lazy(() => AppointmentUncheckedCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => AppointmentUncheckedCreateWithoutUpdatedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => AppointmentCreateOrConnectWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => AppointmentCreateOrConnectWithoutUpdatedByUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => AppointmentUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => AppointmentUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => AppointmentCreateManyUpdatedByUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => AppointmentWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => AppointmentWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => AppointmentWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => AppointmentWhereUniqueInputObjectSchema),
    z.lazy(() => AppointmentWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => AppointmentUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => AppointmentUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => AppointmentUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => AppointmentUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => AppointmentScalarWhereInputObjectSchema),
    z.lazy(() => AppointmentScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
