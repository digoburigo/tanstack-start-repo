/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { VaccinationsCreateWithoutVaccinationsValuesInputObjectSchema } from './VaccinationsCreateWithoutVaccinationsValuesInput.schema';
import { VaccinationsUncheckedCreateWithoutVaccinationsValuesInputObjectSchema } from './VaccinationsUncheckedCreateWithoutVaccinationsValuesInput.schema';
import { VaccinationsCreateOrConnectWithoutVaccinationsValuesInputObjectSchema } from './VaccinationsCreateOrConnectWithoutVaccinationsValuesInput.schema';
import { VaccinationsUpsertWithWhereUniqueWithoutVaccinationsValuesInputObjectSchema } from './VaccinationsUpsertWithWhereUniqueWithoutVaccinationsValuesInput.schema';
import { VaccinationsCreateManyVaccinationsValuesInputEnvelopeObjectSchema } from './VaccinationsCreateManyVaccinationsValuesInputEnvelope.schema';
import { VaccinationsWhereUniqueInputObjectSchema } from './VaccinationsWhereUniqueInput.schema';
import { VaccinationsUpdateWithWhereUniqueWithoutVaccinationsValuesInputObjectSchema } from './VaccinationsUpdateWithWhereUniqueWithoutVaccinationsValuesInput.schema';
import { VaccinationsUpdateManyWithWhereWithoutVaccinationsValuesInputObjectSchema } from './VaccinationsUpdateManyWithWhereWithoutVaccinationsValuesInput.schema';
import { VaccinationsScalarWhereInputObjectSchema } from './VaccinationsScalarWhereInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.VaccinationsUpdateManyWithoutVaccinationsValuesNestedInput>;
export const VaccinationsUpdateManyWithoutVaccinationsValuesNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => VaccinationsCreateWithoutVaccinationsValuesInputObjectSchema), z.lazy(() => VaccinationsCreateWithoutVaccinationsValuesInputObjectSchema).array(), z.lazy(() => VaccinationsUncheckedCreateWithoutVaccinationsValuesInputObjectSchema), z.lazy(() => VaccinationsUncheckedCreateWithoutVaccinationsValuesInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => VaccinationsCreateOrConnectWithoutVaccinationsValuesInputObjectSchema),
    z.lazy(() => VaccinationsCreateOrConnectWithoutVaccinationsValuesInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => VaccinationsUpsertWithWhereUniqueWithoutVaccinationsValuesInputObjectSchema),
    z.lazy(() => VaccinationsUpsertWithWhereUniqueWithoutVaccinationsValuesInputObjectSchema).array()]).optional(), createMany: z.lazy(() => VaccinationsCreateManyVaccinationsValuesInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => VaccinationsWhereUniqueInputObjectSchema),
    z.lazy(() => VaccinationsWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => VaccinationsWhereUniqueInputObjectSchema),
    z.lazy(() => VaccinationsWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => VaccinationsWhereUniqueInputObjectSchema),
    z.lazy(() => VaccinationsWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => VaccinationsWhereUniqueInputObjectSchema),
    z.lazy(() => VaccinationsWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => VaccinationsUpdateWithWhereUniqueWithoutVaccinationsValuesInputObjectSchema),
    z.lazy(() => VaccinationsUpdateWithWhereUniqueWithoutVaccinationsValuesInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => VaccinationsUpdateManyWithWhereWithoutVaccinationsValuesInputObjectSchema),
    z.lazy(() => VaccinationsUpdateManyWithWhereWithoutVaccinationsValuesInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => VaccinationsScalarWhereInputObjectSchema),
    z.lazy(() => VaccinationsScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
