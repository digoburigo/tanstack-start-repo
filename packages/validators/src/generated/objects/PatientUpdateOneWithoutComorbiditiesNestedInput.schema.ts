/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { PatientCreateWithoutComorbiditiesInputObjectSchema } from './PatientCreateWithoutComorbiditiesInput.schema';
import { PatientUncheckedCreateWithoutComorbiditiesInputObjectSchema } from './PatientUncheckedCreateWithoutComorbiditiesInput.schema';
import { PatientCreateOrConnectWithoutComorbiditiesInputObjectSchema } from './PatientCreateOrConnectWithoutComorbiditiesInput.schema';
import { PatientUpsertWithoutComorbiditiesInputObjectSchema } from './PatientUpsertWithoutComorbiditiesInput.schema';
import { PatientWhereInputObjectSchema } from './PatientWhereInput.schema';
import { PatientWhereUniqueInputObjectSchema } from './PatientWhereUniqueInput.schema';
import { PatientUpdateToOneWithWhereWithoutComorbiditiesInputObjectSchema } from './PatientUpdateToOneWithWhereWithoutComorbiditiesInput.schema';
import { PatientUpdateWithoutComorbiditiesInputObjectSchema } from './PatientUpdateWithoutComorbiditiesInput.schema';
import { PatientUncheckedUpdateWithoutComorbiditiesInputObjectSchema } from './PatientUncheckedUpdateWithoutComorbiditiesInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.PatientUpdateOneWithoutComorbiditiesNestedInput>;
export const PatientUpdateOneWithoutComorbiditiesNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => PatientCreateWithoutComorbiditiesInputObjectSchema), z.lazy(() => PatientUncheckedCreateWithoutComorbiditiesInputObjectSchema)]).optional(), connectOrCreate: z.lazy(() => PatientCreateOrConnectWithoutComorbiditiesInputObjectSchema).optional().optional(), upsert: z.lazy(() => PatientUpsertWithoutComorbiditiesInputObjectSchema).optional().optional(), disconnect: z.union([z.boolean(),
    z.lazy(() => PatientWhereInputObjectSchema)]).optional(), delete: z.union([z.boolean(),
    z.lazy(() => PatientWhereInputObjectSchema)]).optional(), connect: z.lazy(() => PatientWhereUniqueInputObjectSchema).optional().optional(), update: z.union([z.lazy(() => PatientUpdateToOneWithWhereWithoutComorbiditiesInputObjectSchema), z.lazy(() => PatientUpdateWithoutComorbiditiesInputObjectSchema), z.lazy(() => PatientUncheckedUpdateWithoutComorbiditiesInputObjectSchema)]).optional()
}).strict() as SchemaType;
