/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { AppointmentCreateWithoutPredecessorFollowUpInputObjectSchema } from './AppointmentCreateWithoutPredecessorFollowUpInput.schema';
import { AppointmentUncheckedCreateWithoutPredecessorFollowUpInputObjectSchema } from './AppointmentUncheckedCreateWithoutPredecessorFollowUpInput.schema';
import { AppointmentCreateOrConnectWithoutPredecessorFollowUpInputObjectSchema } from './AppointmentCreateOrConnectWithoutPredecessorFollowUpInput.schema';
import { AppointmentUpsertWithoutPredecessorFollowUpInputObjectSchema } from './AppointmentUpsertWithoutPredecessorFollowUpInput.schema';
import { AppointmentWhereInputObjectSchema } from './AppointmentWhereInput.schema';
import { AppointmentWhereUniqueInputObjectSchema } from './AppointmentWhereUniqueInput.schema';
import { AppointmentUpdateToOneWithWhereWithoutPredecessorFollowUpInputObjectSchema } from './AppointmentUpdateToOneWithWhereWithoutPredecessorFollowUpInput.schema';
import { AppointmentUpdateWithoutPredecessorFollowUpInputObjectSchema } from './AppointmentUpdateWithoutPredecessorFollowUpInput.schema';
import { AppointmentUncheckedUpdateWithoutPredecessorFollowUpInputObjectSchema } from './AppointmentUncheckedUpdateWithoutPredecessorFollowUpInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.AppointmentUpdateOneWithoutPredecessorFollowUpNestedInput>;
export const AppointmentUpdateOneWithoutPredecessorFollowUpNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => AppointmentCreateWithoutPredecessorFollowUpInputObjectSchema), z.lazy(() => AppointmentUncheckedCreateWithoutPredecessorFollowUpInputObjectSchema)]).optional(), connectOrCreate: z.lazy(() => AppointmentCreateOrConnectWithoutPredecessorFollowUpInputObjectSchema).optional().optional(), upsert: z.lazy(() => AppointmentUpsertWithoutPredecessorFollowUpInputObjectSchema).optional().optional(), disconnect: z.union([z.boolean(),
    z.lazy(() => AppointmentWhereInputObjectSchema)]).optional(), delete: z.union([z.boolean(),
    z.lazy(() => AppointmentWhereInputObjectSchema)]).optional(), connect: z.lazy(() => AppointmentWhereUniqueInputObjectSchema).optional().optional(), update: z.union([z.lazy(() => AppointmentUpdateToOneWithWhereWithoutPredecessorFollowUpInputObjectSchema), z.lazy(() => AppointmentUpdateWithoutPredecessorFollowUpInputObjectSchema), z.lazy(() => AppointmentUncheckedUpdateWithoutPredecessorFollowUpInputObjectSchema)]).optional()
}).strict() as SchemaType;
