/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { EventCalendarCreateWithoutUpdatedByUserInputObjectSchema } from './EventCalendarCreateWithoutUpdatedByUserInput.schema';
import { EventCalendarUncheckedCreateWithoutUpdatedByUserInputObjectSchema } from './EventCalendarUncheckedCreateWithoutUpdatedByUserInput.schema';
import { EventCalendarCreateOrConnectWithoutUpdatedByUserInputObjectSchema } from './EventCalendarCreateOrConnectWithoutUpdatedByUserInput.schema';
import { EventCalendarCreateManyUpdatedByUserInputEnvelopeObjectSchema } from './EventCalendarCreateManyUpdatedByUserInputEnvelope.schema';
import { EventCalendarWhereUniqueInputObjectSchema } from './EventCalendarWhereUniqueInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.EventCalendarUncheckedCreateNestedManyWithoutUpdatedByUserInput>;
export const EventCalendarUncheckedCreateNestedManyWithoutUpdatedByUserInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => EventCalendarCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => EventCalendarCreateWithoutUpdatedByUserInputObjectSchema).array(), z.lazy(() => EventCalendarUncheckedCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => EventCalendarUncheckedCreateWithoutUpdatedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => EventCalendarCreateOrConnectWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => EventCalendarCreateOrConnectWithoutUpdatedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => EventCalendarCreateManyUpdatedByUserInputEnvelopeObjectSchema).optional().optional(), connect: z.union([z.lazy(() => EventCalendarWhereUniqueInputObjectSchema),
    z.lazy(() => EventCalendarWhereUniqueInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
