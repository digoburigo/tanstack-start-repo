/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { AllergiesCreateWithoutDeletedByUserInputObjectSchema } from './AllergiesCreateWithoutDeletedByUserInput.schema';
import { AllergiesUncheckedCreateWithoutDeletedByUserInputObjectSchema } from './AllergiesUncheckedCreateWithoutDeletedByUserInput.schema';
import { AllergiesCreateOrConnectWithoutDeletedByUserInputObjectSchema } from './AllergiesCreateOrConnectWithoutDeletedByUserInput.schema';
import { AllergiesUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema } from './AllergiesUpsertWithWhereUniqueWithoutDeletedByUserInput.schema';
import { AllergiesCreateManyDeletedByUserInputEnvelopeObjectSchema } from './AllergiesCreateManyDeletedByUserInputEnvelope.schema';
import { AllergiesWhereUniqueInputObjectSchema } from './AllergiesWhereUniqueInput.schema';
import { AllergiesUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema } from './AllergiesUpdateWithWhereUniqueWithoutDeletedByUserInput.schema';
import { AllergiesUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema } from './AllergiesUpdateManyWithWhereWithoutDeletedByUserInput.schema';
import { AllergiesScalarWhereInputObjectSchema } from './AllergiesScalarWhereInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.AllergiesUpdateManyWithoutDeletedByUserNestedInput>;
export const AllergiesUpdateManyWithoutDeletedByUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => AllergiesCreateWithoutDeletedByUserInputObjectSchema), z.lazy(() => AllergiesCreateWithoutDeletedByUserInputObjectSchema).array(), z.lazy(() => AllergiesUncheckedCreateWithoutDeletedByUserInputObjectSchema), z.lazy(() => AllergiesUncheckedCreateWithoutDeletedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => AllergiesCreateOrConnectWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => AllergiesCreateOrConnectWithoutDeletedByUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => AllergiesUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => AllergiesUpsertWithWhereUniqueWithoutDeletedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => AllergiesCreateManyDeletedByUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => AllergiesWhereUniqueInputObjectSchema),
    z.lazy(() => AllergiesWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => AllergiesUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => AllergiesUpdateWithWhereUniqueWithoutDeletedByUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => AllergiesUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema),
    z.lazy(() => AllergiesUpdateManyWithWhereWithoutDeletedByUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => AllergiesScalarWhereInputObjectSchema),
    z.lazy(() => AllergiesScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
