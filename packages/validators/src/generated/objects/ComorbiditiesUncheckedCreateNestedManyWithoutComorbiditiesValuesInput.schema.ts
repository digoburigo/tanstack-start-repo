/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { ComorbiditiesCreateWithoutComorbiditiesValuesInputObjectSchema } from './ComorbiditiesCreateWithoutComorbiditiesValuesInput.schema';
import { ComorbiditiesUncheckedCreateWithoutComorbiditiesValuesInputObjectSchema } from './ComorbiditiesUncheckedCreateWithoutComorbiditiesValuesInput.schema';
import { ComorbiditiesCreateOrConnectWithoutComorbiditiesValuesInputObjectSchema } from './ComorbiditiesCreateOrConnectWithoutComorbiditiesValuesInput.schema';
import { ComorbiditiesCreateManyComorbiditiesValuesInputEnvelopeObjectSchema } from './ComorbiditiesCreateManyComorbiditiesValuesInputEnvelope.schema';
import { ComorbiditiesWhereUniqueInputObjectSchema } from './ComorbiditiesWhereUniqueInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.ComorbiditiesUncheckedCreateNestedManyWithoutComorbiditiesValuesInput>;
export const ComorbiditiesUncheckedCreateNestedManyWithoutComorbiditiesValuesInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => ComorbiditiesCreateWithoutComorbiditiesValuesInputObjectSchema), z.lazy(() => ComorbiditiesCreateWithoutComorbiditiesValuesInputObjectSchema).array(), z.lazy(() => ComorbiditiesUncheckedCreateWithoutComorbiditiesValuesInputObjectSchema), z.lazy(() => ComorbiditiesUncheckedCreateWithoutComorbiditiesValuesInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => ComorbiditiesCreateOrConnectWithoutComorbiditiesValuesInputObjectSchema),
    z.lazy(() => ComorbiditiesCreateOrConnectWithoutComorbiditiesValuesInputObjectSchema).array()]).optional(), createMany: z.lazy(() => ComorbiditiesCreateManyComorbiditiesValuesInputEnvelopeObjectSchema).optional().optional(), connect: z.union([z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema),
    z.lazy(() => ComorbiditiesWhereUniqueInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
