/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { HealthPlansCreateWithoutUpdatedByUserInputObjectSchema } from './HealthPlansCreateWithoutUpdatedByUserInput.schema';
import { HealthPlansUncheckedCreateWithoutUpdatedByUserInputObjectSchema } from './HealthPlansUncheckedCreateWithoutUpdatedByUserInput.schema';
import { HealthPlansCreateOrConnectWithoutUpdatedByUserInputObjectSchema } from './HealthPlansCreateOrConnectWithoutUpdatedByUserInput.schema';
import { HealthPlansUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema } from './HealthPlansUpsertWithWhereUniqueWithoutUpdatedByUserInput.schema';
import { HealthPlansCreateManyUpdatedByUserInputEnvelopeObjectSchema } from './HealthPlansCreateManyUpdatedByUserInputEnvelope.schema';
import { HealthPlansWhereUniqueInputObjectSchema } from './HealthPlansWhereUniqueInput.schema';
import { HealthPlansUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema } from './HealthPlansUpdateWithWhereUniqueWithoutUpdatedByUserInput.schema';
import { HealthPlansUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema } from './HealthPlansUpdateManyWithWhereWithoutUpdatedByUserInput.schema';
import { HealthPlansScalarWhereInputObjectSchema } from './HealthPlansScalarWhereInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.HealthPlansUpdateManyWithoutUpdatedByUserNestedInput>;
export const HealthPlansUpdateManyWithoutUpdatedByUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => HealthPlansCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => HealthPlansCreateWithoutUpdatedByUserInputObjectSchema).array(), z.lazy(() => HealthPlansUncheckedCreateWithoutUpdatedByUserInputObjectSchema), z.lazy(() => HealthPlansUncheckedCreateWithoutUpdatedByUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => HealthPlansCreateOrConnectWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => HealthPlansCreateOrConnectWithoutUpdatedByUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => HealthPlansUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => HealthPlansUpsertWithWhereUniqueWithoutUpdatedByUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => HealthPlansCreateManyUpdatedByUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => HealthPlansWhereUniqueInputObjectSchema),
    z.lazy(() => HealthPlansWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => HealthPlansUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => HealthPlansUpdateWithWhereUniqueWithoutUpdatedByUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => HealthPlansUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema),
    z.lazy(() => HealthPlansUpdateManyWithWhereWithoutUpdatedByUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => HealthPlansScalarWhereInputObjectSchema),
    z.lazy(() => HealthPlansScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
