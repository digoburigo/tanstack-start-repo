/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { OrganizationCreateWithoutAssetsInputObjectSchema } from './OrganizationCreateWithoutAssetsInput.schema';
import { OrganizationUncheckedCreateWithoutAssetsInputObjectSchema } from './OrganizationUncheckedCreateWithoutAssetsInput.schema';
import { OrganizationCreateOrConnectWithoutAssetsInputObjectSchema } from './OrganizationCreateOrConnectWithoutAssetsInput.schema';
import { OrganizationUpsertWithoutAssetsInputObjectSchema } from './OrganizationUpsertWithoutAssetsInput.schema';
import { OrganizationWhereInputObjectSchema } from './OrganizationWhereInput.schema';
import { OrganizationWhereUniqueInputObjectSchema } from './OrganizationWhereUniqueInput.schema';
import { OrganizationUpdateToOneWithWhereWithoutAssetsInputObjectSchema } from './OrganizationUpdateToOneWithWhereWithoutAssetsInput.schema';
import { OrganizationUpdateWithoutAssetsInputObjectSchema } from './OrganizationUpdateWithoutAssetsInput.schema';
import { OrganizationUncheckedUpdateWithoutAssetsInputObjectSchema } from './OrganizationUncheckedUpdateWithoutAssetsInput.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.OrganizationUpdateOneWithoutAssetsNestedInput>;
export const OrganizationUpdateOneWithoutAssetsNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => OrganizationCreateWithoutAssetsInputObjectSchema), z.lazy(() => OrganizationUncheckedCreateWithoutAssetsInputObjectSchema)]).optional(), connectOrCreate: z.lazy(() => OrganizationCreateOrConnectWithoutAssetsInputObjectSchema).optional().optional(), upsert: z.lazy(() => OrganizationUpsertWithoutAssetsInputObjectSchema).optional().optional(), disconnect: z.union([z.boolean(),
    z.lazy(() => OrganizationWhereInputObjectSchema)]).optional(), delete: z.union([z.boolean(),
    z.lazy(() => OrganizationWhereInputObjectSchema)]).optional(), connect: z.lazy(() => OrganizationWhereUniqueInputObjectSchema).optional().optional(), update: z.union([z.lazy(() => OrganizationUpdateToOneWithWhereWithoutAssetsInputObjectSchema), z.lazy(() => OrganizationUpdateWithoutAssetsInputObjectSchema), z.lazy(() => OrganizationUncheckedUpdateWithoutAssetsInputObjectSchema)]).optional()
}).strict() as SchemaType;
