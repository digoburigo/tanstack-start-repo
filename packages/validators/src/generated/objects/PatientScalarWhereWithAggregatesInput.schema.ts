/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { StringWithAggregatesFilterObjectSchema } from './StringWithAggregatesFilter.schema';
import { DateTimeWithAggregatesFilterObjectSchema } from './DateTimeWithAggregatesFilter.schema';
import { StringNullableWithAggregatesFilterObjectSchema } from './StringNullableWithAggregatesFilter.schema';
import { DateTimeNullableWithAggregatesFilterObjectSchema } from './DateTimeNullableWithAggregatesFilter.schema';
import { BoolWithAggregatesFilterObjectSchema } from './BoolWithAggregatesFilter.schema';
import { EnumSexNullableWithAggregatesFilterObjectSchema } from './EnumSexNullableWithAggregatesFilter.schema';
import { SexSchema } from '../enums/Sex.schema';
import { EnumRaceNullableWithAggregatesFilterObjectSchema } from './EnumRaceNullableWithAggregatesFilter.schema';
import { RaceSchema } from '../enums/Race.schema';
import { EnumCivilStatusNullableWithAggregatesFilterObjectSchema } from './EnumCivilStatusNullableWithAggregatesFilter.schema';
import { CivilStatusSchema } from '../enums/CivilStatus.schema';
import { EnumBloodTypeNullableWithAggregatesFilterObjectSchema } from './EnumBloodTypeNullableWithAggregatesFilter.schema';
import { BloodTypeSchema } from '../enums/BloodType.schema';
import { EnumGenderIdentityNullableWithAggregatesFilterObjectSchema } from './EnumGenderIdentityNullableWithAggregatesFilter.schema';
import { GenderIdentitySchema } from '../enums/GenderIdentity.schema';

import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

type SchemaType = z.ZodType<Prisma.PatientScalarWhereWithAggregatesInput>;
export const PatientScalarWhereWithAggregatesInputObjectSchema: SchemaType = z.object({
    AND: z.union([z.lazy(() => PatientScalarWhereWithAggregatesInputObjectSchema),
    z.lazy(() => PatientScalarWhereWithAggregatesInputObjectSchema).array()]).optional(), OR: z.lazy(() => PatientScalarWhereWithAggregatesInputObjectSchema).array().optional().optional(), NOT: z.union([z.lazy(() => PatientScalarWhereWithAggregatesInputObjectSchema),
    z.lazy(() => PatientScalarWhereWithAggregatesInputObjectSchema).array()]).optional(), id: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), type: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), createdAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), createdById: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), updatedAt: z.union([z.lazy(() => DateTimeWithAggregatesFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()])]).optional(), updatedById: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), deletedAt: z.union([z.lazy(() => DateTimeNullableWithAggregatesFilterObjectSchema),
    z.union([z.date(), z.string().datetime().optional()]),
    z.null()]).optional().nullable(), deletedById: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), deleted: z.union([z.lazy(() => BoolWithAggregatesFilterObjectSchema),
    z.boolean()]).optional(), organizationId: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), name: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), cpf: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), cellphone: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), email: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), sex: z.union([z.lazy(() => EnumSexNullableWithAggregatesFilterObjectSchema),
    z.lazy(() => SexSchema),
    z.null()]).optional().nullable(), responsible: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), nationality: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), race: z.union([z.lazy(() => EnumRaceNullableWithAggregatesFilterObjectSchema),
    z.lazy(() => RaceSchema),
    z.null()]).optional().nullable(), state: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), city: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), zipcode: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), neighborhood: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), street: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), number: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), complement: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), occupation: z.union([z.lazy(() => StringWithAggregatesFilterObjectSchema),
    z.string()]).optional(), sexualOrientation: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), civilStatus: z.union([z.lazy(() => EnumCivilStatusNullableWithAggregatesFilterObjectSchema),
    z.lazy(() => CivilStatusSchema),
    z.null()]).optional().nullable(), bloodType: z.union([z.lazy(() => EnumBloodTypeNullableWithAggregatesFilterObjectSchema),
    z.lazy(() => BloodTypeSchema),
    z.null()]).optional().nullable(), genderIdentity: z.union([z.lazy(() => EnumGenderIdentityNullableWithAggregatesFilterObjectSchema),
    z.lazy(() => GenderIdentitySchema),
    z.null()]).optional().nullable(), password: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable(), userId: z.union([z.lazy(() => StringNullableWithAggregatesFilterObjectSchema),
    z.string(),
    z.null()]).optional().nullable()
}).strict() as SchemaType;
