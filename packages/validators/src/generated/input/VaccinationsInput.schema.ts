/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

;
import { VaccinationsSelectObjectSchema } from '../objects/VaccinationsSelect.schema';
import { VaccinationsIncludeObjectSchema } from '../objects/VaccinationsInclude.schema';
import { VaccinationsWhereUniqueInputObjectSchema } from '../objects/VaccinationsWhereUniqueInput.schema';
import { VaccinationsWhereInputObjectSchema } from '../objects/VaccinationsWhereInput.schema';
import { VaccinationsOrderByWithRelationInputObjectSchema } from '../objects/VaccinationsOrderByWithRelationInput.schema';
import { VaccinationsScalarFieldEnumSchema } from '../enums/VaccinationsScalarFieldEnum.schema';
import { VaccinationsCreateInputObjectSchema } from '../objects/VaccinationsCreateInput.schema';
import { VaccinationsUncheckedCreateInputObjectSchema } from '../objects/VaccinationsUncheckedCreateInput.schema';
import { VaccinationsCreateManyInputObjectSchema } from '../objects/VaccinationsCreateManyInput.schema';
import { VaccinationsUpdateInputObjectSchema } from '../objects/VaccinationsUpdateInput.schema';
import { VaccinationsUncheckedUpdateInputObjectSchema } from '../objects/VaccinationsUncheckedUpdateInput.schema';
import { VaccinationsUpdateManyMutationInputObjectSchema } from '../objects/VaccinationsUpdateManyMutationInput.schema';
import { VaccinationsUncheckedUpdateManyInputObjectSchema } from '../objects/VaccinationsUncheckedUpdateManyInput.schema';
import { VaccinationsCountAggregateInputObjectSchema } from '../objects/VaccinationsCountAggregateInput.schema';
import { VaccinationsMinAggregateInputObjectSchema } from '../objects/VaccinationsMinAggregateInput.schema';
import { VaccinationsMaxAggregateInputObjectSchema } from '../objects/VaccinationsMaxAggregateInput.schema';
import { VaccinationsOrderByWithAggregationInputObjectSchema } from '../objects/VaccinationsOrderByWithAggregationInput.schema';
import { VaccinationsScalarWhereWithAggregatesInputObjectSchema } from '../objects/VaccinationsScalarWhereWithAggregatesInput.schema'

type VaccinationsInputSchemaType = {
    findUnique: z.ZodType<Prisma.VaccinationsFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.VaccinationsFindFirstArgs>,
    findMany: z.ZodType<Prisma.VaccinationsFindManyArgs>,
    create: z.ZodType<Prisma.VaccinationsCreateArgs>,
    createMany: z.ZodType<Prisma.VaccinationsCreateManyArgs>,
    delete: z.ZodType<Prisma.VaccinationsDeleteArgs>,
    deleteMany: z.ZodType<Prisma.VaccinationsDeleteManyArgs>,
    update: z.ZodType<Prisma.VaccinationsUpdateArgs>,
    updateMany: z.ZodType<Prisma.VaccinationsUpdateManyArgs>,
    upsert: z.ZodType<Prisma.VaccinationsUpsertArgs>,
    aggregate: z.ZodType<Prisma.VaccinationsAggregateArgs>,
    groupBy: z.ZodType<Prisma.VaccinationsGroupByArgs>,
    count: z.ZodType<Prisma.VaccinationsCountArgs>
}

export const VaccinationsInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => VaccinationsSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsIncludeObjectSchema.optional()), where: VaccinationsWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => VaccinationsSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsIncludeObjectSchema.optional()), where: VaccinationsWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsOrderByWithRelationInputObjectSchema, VaccinationsOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VaccinationsWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(VaccinationsScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => VaccinationsSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsIncludeObjectSchema.optional()), where: VaccinationsWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsOrderByWithRelationInputObjectSchema, VaccinationsOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VaccinationsWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(VaccinationsScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => VaccinationsSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsIncludeObjectSchema.optional()), data: z.union([VaccinationsCreateInputObjectSchema, VaccinationsUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([VaccinationsCreateManyInputObjectSchema, z.array(VaccinationsCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => VaccinationsSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsIncludeObjectSchema.optional()), where: VaccinationsWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: VaccinationsWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => VaccinationsSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsIncludeObjectSchema.optional()), data: z.union([VaccinationsUpdateInputObjectSchema, VaccinationsUncheckedUpdateInputObjectSchema]), where: VaccinationsWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([VaccinationsUpdateManyMutationInputObjectSchema, VaccinationsUncheckedUpdateManyInputObjectSchema]), where: VaccinationsWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => VaccinationsSelectObjectSchema.optional()), include: z.lazy(() => VaccinationsIncludeObjectSchema.optional()), where: VaccinationsWhereUniqueInputObjectSchema, create: z.union([VaccinationsCreateInputObjectSchema, VaccinationsUncheckedCreateInputObjectSchema]), update: z.union([VaccinationsUpdateInputObjectSchema, VaccinationsUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: VaccinationsWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsOrderByWithRelationInputObjectSchema, VaccinationsOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VaccinationsWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), VaccinationsCountAggregateInputObjectSchema]).optional(), _min: VaccinationsMinAggregateInputObjectSchema.optional(), _max: VaccinationsMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: VaccinationsWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsOrderByWithAggregationInputObjectSchema, VaccinationsOrderByWithAggregationInputObjectSchema.array()]).optional(), having: VaccinationsScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(VaccinationsScalarFieldEnumSchema), _count: z.union([z.literal(true), VaccinationsCountAggregateInputObjectSchema]).optional(), _min: VaccinationsMinAggregateInputObjectSchema.optional(), _max: VaccinationsMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: VaccinationsWhereInputObjectSchema.optional(), orderBy: z.union([VaccinationsOrderByWithRelationInputObjectSchema, VaccinationsOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: VaccinationsWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(VaccinationsScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), VaccinationsCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as VaccinationsInputSchemaType;
