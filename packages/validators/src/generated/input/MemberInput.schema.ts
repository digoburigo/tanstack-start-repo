/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

;
import { MemberSelectObjectSchema } from '../objects/MemberSelect.schema';
import { MemberIncludeObjectSchema } from '../objects/MemberInclude.schema';
import { MemberWhereUniqueInputObjectSchema } from '../objects/MemberWhereUniqueInput.schema';
import { MemberWhereInputObjectSchema } from '../objects/MemberWhereInput.schema';
import { MemberOrderByWithRelationInputObjectSchema } from '../objects/MemberOrderByWithRelationInput.schema';
import { MemberScalarFieldEnumSchema } from '../enums/MemberScalarFieldEnum.schema';
import { MemberCreateInputObjectSchema } from '../objects/MemberCreateInput.schema';
import { MemberUncheckedCreateInputObjectSchema } from '../objects/MemberUncheckedCreateInput.schema';
import { MemberCreateManyInputObjectSchema } from '../objects/MemberCreateManyInput.schema';
import { MemberUpdateInputObjectSchema } from '../objects/MemberUpdateInput.schema';
import { MemberUncheckedUpdateInputObjectSchema } from '../objects/MemberUncheckedUpdateInput.schema';
import { MemberUpdateManyMutationInputObjectSchema } from '../objects/MemberUpdateManyMutationInput.schema';
import { MemberUncheckedUpdateManyInputObjectSchema } from '../objects/MemberUncheckedUpdateManyInput.schema';
import { MemberCountAggregateInputObjectSchema } from '../objects/MemberCountAggregateInput.schema';
import { MemberMinAggregateInputObjectSchema } from '../objects/MemberMinAggregateInput.schema';
import { MemberMaxAggregateInputObjectSchema } from '../objects/MemberMaxAggregateInput.schema';
import { MemberOrderByWithAggregationInputObjectSchema } from '../objects/MemberOrderByWithAggregationInput.schema';
import { MemberScalarWhereWithAggregatesInputObjectSchema } from '../objects/MemberScalarWhereWithAggregatesInput.schema'

type MemberInputSchemaType = {
    findUnique: z.ZodType<Prisma.MemberFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.MemberFindFirstArgs>,
    findMany: z.ZodType<Prisma.MemberFindManyArgs>,
    create: z.ZodType<Prisma.MemberCreateArgs>,
    createMany: z.ZodType<Prisma.MemberCreateManyArgs>,
    delete: z.ZodType<Prisma.MemberDeleteArgs>,
    deleteMany: z.ZodType<Prisma.MemberDeleteManyArgs>,
    update: z.ZodType<Prisma.MemberUpdateArgs>,
    updateMany: z.ZodType<Prisma.MemberUpdateManyArgs>,
    upsert: z.ZodType<Prisma.MemberUpsertArgs>,
    aggregate: z.ZodType<Prisma.MemberAggregateArgs>,
    groupBy: z.ZodType<Prisma.MemberGroupByArgs>,
    count: z.ZodType<Prisma.MemberCountArgs>
}

export const MemberInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => MemberSelectObjectSchema.optional()), include: z.lazy(() => MemberIncludeObjectSchema.optional()), where: MemberWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => MemberSelectObjectSchema.optional()), include: z.lazy(() => MemberIncludeObjectSchema.optional()), where: MemberWhereInputObjectSchema.optional(), orderBy: z.union([MemberOrderByWithRelationInputObjectSchema, MemberOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: MemberWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(MemberScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => MemberSelectObjectSchema.optional()), include: z.lazy(() => MemberIncludeObjectSchema.optional()), where: MemberWhereInputObjectSchema.optional(), orderBy: z.union([MemberOrderByWithRelationInputObjectSchema, MemberOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: MemberWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(MemberScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => MemberSelectObjectSchema.optional()), include: z.lazy(() => MemberIncludeObjectSchema.optional()), data: z.union([MemberCreateInputObjectSchema, MemberUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([MemberCreateManyInputObjectSchema, z.array(MemberCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => MemberSelectObjectSchema.optional()), include: z.lazy(() => MemberIncludeObjectSchema.optional()), where: MemberWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: MemberWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => MemberSelectObjectSchema.optional()), include: z.lazy(() => MemberIncludeObjectSchema.optional()), data: z.union([MemberUpdateInputObjectSchema, MemberUncheckedUpdateInputObjectSchema]), where: MemberWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([MemberUpdateManyMutationInputObjectSchema, MemberUncheckedUpdateManyInputObjectSchema]), where: MemberWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => MemberSelectObjectSchema.optional()), include: z.lazy(() => MemberIncludeObjectSchema.optional()), where: MemberWhereUniqueInputObjectSchema, create: z.union([MemberCreateInputObjectSchema, MemberUncheckedCreateInputObjectSchema]), update: z.union([MemberUpdateInputObjectSchema, MemberUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: MemberWhereInputObjectSchema.optional(), orderBy: z.union([MemberOrderByWithRelationInputObjectSchema, MemberOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: MemberWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), MemberCountAggregateInputObjectSchema]).optional(), _min: MemberMinAggregateInputObjectSchema.optional(), _max: MemberMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: MemberWhereInputObjectSchema.optional(), orderBy: z.union([MemberOrderByWithAggregationInputObjectSchema, MemberOrderByWithAggregationInputObjectSchema.array()]).optional(), having: MemberScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(MemberScalarFieldEnumSchema), _count: z.union([z.literal(true), MemberCountAggregateInputObjectSchema]).optional(), _min: MemberMinAggregateInputObjectSchema.optional(), _max: MemberMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: MemberWhereInputObjectSchema.optional(), orderBy: z.union([MemberOrderByWithRelationInputObjectSchema, MemberOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: MemberWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(MemberScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), MemberCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as MemberInputSchemaType;
