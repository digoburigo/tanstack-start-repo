/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

;
import { AppointmentSelectObjectSchema } from '../objects/AppointmentSelect.schema';
import { AppointmentIncludeObjectSchema } from '../objects/AppointmentInclude.schema';
import { AppointmentWhereUniqueInputObjectSchema } from '../objects/AppointmentWhereUniqueInput.schema';
import { AppointmentWhereInputObjectSchema } from '../objects/AppointmentWhereInput.schema';
import { AppointmentOrderByWithRelationInputObjectSchema } from '../objects/AppointmentOrderByWithRelationInput.schema';
import { AppointmentScalarFieldEnumSchema } from '../enums/AppointmentScalarFieldEnum.schema';
import { AppointmentCreateInputObjectSchema } from '../objects/AppointmentCreateInput.schema';
import { AppointmentUncheckedCreateInputObjectSchema } from '../objects/AppointmentUncheckedCreateInput.schema';
import { AppointmentCreateManyInputObjectSchema } from '../objects/AppointmentCreateManyInput.schema';
import { AppointmentUpdateInputObjectSchema } from '../objects/AppointmentUpdateInput.schema';
import { AppointmentUncheckedUpdateInputObjectSchema } from '../objects/AppointmentUncheckedUpdateInput.schema';
import { AppointmentUpdateManyMutationInputObjectSchema } from '../objects/AppointmentUpdateManyMutationInput.schema';
import { AppointmentUncheckedUpdateManyInputObjectSchema } from '../objects/AppointmentUncheckedUpdateManyInput.schema';
import { AppointmentCountAggregateInputObjectSchema } from '../objects/AppointmentCountAggregateInput.schema';
import { AppointmentMinAggregateInputObjectSchema } from '../objects/AppointmentMinAggregateInput.schema';
import { AppointmentMaxAggregateInputObjectSchema } from '../objects/AppointmentMaxAggregateInput.schema';
import { AppointmentAvgAggregateInputObjectSchema } from '../objects/AppointmentAvgAggregateInput.schema';
import { AppointmentSumAggregateInputObjectSchema } from '../objects/AppointmentSumAggregateInput.schema';
import { AppointmentOrderByWithAggregationInputObjectSchema } from '../objects/AppointmentOrderByWithAggregationInput.schema';
import { AppointmentScalarWhereWithAggregatesInputObjectSchema } from '../objects/AppointmentScalarWhereWithAggregatesInput.schema'

type AppointmentInputSchemaType = {
    findUnique: z.ZodType<Prisma.AppointmentFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.AppointmentFindFirstArgs>,
    findMany: z.ZodType<Prisma.AppointmentFindManyArgs>,
    create: z.ZodType<Prisma.AppointmentCreateArgs>,
    createMany: z.ZodType<Prisma.AppointmentCreateManyArgs>,
    delete: z.ZodType<Prisma.AppointmentDeleteArgs>,
    deleteMany: z.ZodType<Prisma.AppointmentDeleteManyArgs>,
    update: z.ZodType<Prisma.AppointmentUpdateArgs>,
    updateMany: z.ZodType<Prisma.AppointmentUpdateManyArgs>,
    upsert: z.ZodType<Prisma.AppointmentUpsertArgs>,
    aggregate: z.ZodType<Prisma.AppointmentAggregateArgs>,
    groupBy: z.ZodType<Prisma.AppointmentGroupByArgs>,
    count: z.ZodType<Prisma.AppointmentCountArgs>
}

export const AppointmentInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => AppointmentSelectObjectSchema.optional()), include: z.lazy(() => AppointmentIncludeObjectSchema.optional()), where: AppointmentWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => AppointmentSelectObjectSchema.optional()), include: z.lazy(() => AppointmentIncludeObjectSchema.optional()), where: AppointmentWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentOrderByWithRelationInputObjectSchema, AppointmentOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: AppointmentWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(AppointmentScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => AppointmentSelectObjectSchema.optional()), include: z.lazy(() => AppointmentIncludeObjectSchema.optional()), where: AppointmentWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentOrderByWithRelationInputObjectSchema, AppointmentOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: AppointmentWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(AppointmentScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => AppointmentSelectObjectSchema.optional()), include: z.lazy(() => AppointmentIncludeObjectSchema.optional()), data: z.union([AppointmentCreateInputObjectSchema, AppointmentUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([AppointmentCreateManyInputObjectSchema, z.array(AppointmentCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => AppointmentSelectObjectSchema.optional()), include: z.lazy(() => AppointmentIncludeObjectSchema.optional()), where: AppointmentWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: AppointmentWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => AppointmentSelectObjectSchema.optional()), include: z.lazy(() => AppointmentIncludeObjectSchema.optional()), data: z.union([AppointmentUpdateInputObjectSchema, AppointmentUncheckedUpdateInputObjectSchema]), where: AppointmentWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([AppointmentUpdateManyMutationInputObjectSchema, AppointmentUncheckedUpdateManyInputObjectSchema]), where: AppointmentWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => AppointmentSelectObjectSchema.optional()), include: z.lazy(() => AppointmentIncludeObjectSchema.optional()), where: AppointmentWhereUniqueInputObjectSchema, create: z.union([AppointmentCreateInputObjectSchema, AppointmentUncheckedCreateInputObjectSchema]), update: z.union([AppointmentUpdateInputObjectSchema, AppointmentUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: AppointmentWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentOrderByWithRelationInputObjectSchema, AppointmentOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: AppointmentWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), AppointmentCountAggregateInputObjectSchema]).optional(), _min: AppointmentMinAggregateInputObjectSchema.optional(), _max: AppointmentMaxAggregateInputObjectSchema.optional(), _avg: AppointmentAvgAggregateInputObjectSchema.optional(), _sum: AppointmentSumAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: AppointmentWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentOrderByWithAggregationInputObjectSchema, AppointmentOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AppointmentScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AppointmentScalarFieldEnumSchema), _count: z.union([z.literal(true), AppointmentCountAggregateInputObjectSchema]).optional(), _min: AppointmentMinAggregateInputObjectSchema.optional(), _max: AppointmentMaxAggregateInputObjectSchema.optional(), _avg: AppointmentAvgAggregateInputObjectSchema.optional(), _sum: AppointmentSumAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: AppointmentWhereInputObjectSchema.optional(), orderBy: z.union([AppointmentOrderByWithRelationInputObjectSchema, AppointmentOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: AppointmentWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(AppointmentScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), AppointmentCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as AppointmentInputSchemaType;
