/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '../../../../db-zenstack/src/generated/zenstack/models';

;
import { HealthPlansValuesSelectObjectSchema } from '../objects/HealthPlansValuesSelect.schema';
import { HealthPlansValuesIncludeObjectSchema } from '../objects/HealthPlansValuesInclude.schema';
import { HealthPlansValuesWhereUniqueInputObjectSchema } from '../objects/HealthPlansValuesWhereUniqueInput.schema';
import { HealthPlansValuesWhereInputObjectSchema } from '../objects/HealthPlansValuesWhereInput.schema';
import { HealthPlansValuesOrderByWithRelationInputObjectSchema } from '../objects/HealthPlansValuesOrderByWithRelationInput.schema';
import { HealthPlansValuesScalarFieldEnumSchema } from '../enums/HealthPlansValuesScalarFieldEnum.schema';
import { HealthPlansValuesCreateInputObjectSchema } from '../objects/HealthPlansValuesCreateInput.schema';
import { HealthPlansValuesUncheckedCreateInputObjectSchema } from '../objects/HealthPlansValuesUncheckedCreateInput.schema';
import { HealthPlansValuesCreateManyInputObjectSchema } from '../objects/HealthPlansValuesCreateManyInput.schema';
import { HealthPlansValuesUpdateInputObjectSchema } from '../objects/HealthPlansValuesUpdateInput.schema';
import { HealthPlansValuesUncheckedUpdateInputObjectSchema } from '../objects/HealthPlansValuesUncheckedUpdateInput.schema';
import { HealthPlansValuesUpdateManyMutationInputObjectSchema } from '../objects/HealthPlansValuesUpdateManyMutationInput.schema';
import { HealthPlansValuesUncheckedUpdateManyInputObjectSchema } from '../objects/HealthPlansValuesUncheckedUpdateManyInput.schema';
import { HealthPlansValuesCountAggregateInputObjectSchema } from '../objects/HealthPlansValuesCountAggregateInput.schema';
import { HealthPlansValuesMinAggregateInputObjectSchema } from '../objects/HealthPlansValuesMinAggregateInput.schema';
import { HealthPlansValuesMaxAggregateInputObjectSchema } from '../objects/HealthPlansValuesMaxAggregateInput.schema';
import { HealthPlansValuesOrderByWithAggregationInputObjectSchema } from '../objects/HealthPlansValuesOrderByWithAggregationInput.schema';
import { HealthPlansValuesScalarWhereWithAggregatesInputObjectSchema } from '../objects/HealthPlansValuesScalarWhereWithAggregatesInput.schema'

type HealthPlansValuesInputSchemaType = {
    findUnique: z.ZodType<Prisma.HealthPlansValuesFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.HealthPlansValuesFindFirstArgs>,
    findMany: z.ZodType<Prisma.HealthPlansValuesFindManyArgs>,
    create: z.ZodType<Prisma.HealthPlansValuesCreateArgs>,
    createMany: z.ZodType<Prisma.HealthPlansValuesCreateManyArgs>,
    delete: z.ZodType<Prisma.HealthPlansValuesDeleteArgs>,
    deleteMany: z.ZodType<Prisma.HealthPlansValuesDeleteManyArgs>,
    update: z.ZodType<Prisma.HealthPlansValuesUpdateArgs>,
    updateMany: z.ZodType<Prisma.HealthPlansValuesUpdateManyArgs>,
    upsert: z.ZodType<Prisma.HealthPlansValuesUpsertArgs>,
    aggregate: z.ZodType<Prisma.HealthPlansValuesAggregateArgs>,
    groupBy: z.ZodType<Prisma.HealthPlansValuesGroupByArgs>,
    count: z.ZodType<Prisma.HealthPlansValuesCountArgs>
}

export const HealthPlansValuesInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => HealthPlansValuesSelectObjectSchema.optional()), include: z.lazy(() => HealthPlansValuesIncludeObjectSchema.optional()), where: HealthPlansValuesWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => HealthPlansValuesSelectObjectSchema.optional()), include: z.lazy(() => HealthPlansValuesIncludeObjectSchema.optional()), where: HealthPlansValuesWhereInputObjectSchema.optional(), orderBy: z.union([HealthPlansValuesOrderByWithRelationInputObjectSchema, HealthPlansValuesOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HealthPlansValuesWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(HealthPlansValuesScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => HealthPlansValuesSelectObjectSchema.optional()), include: z.lazy(() => HealthPlansValuesIncludeObjectSchema.optional()), where: HealthPlansValuesWhereInputObjectSchema.optional(), orderBy: z.union([HealthPlansValuesOrderByWithRelationInputObjectSchema, HealthPlansValuesOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HealthPlansValuesWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(HealthPlansValuesScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => HealthPlansValuesSelectObjectSchema.optional()), include: z.lazy(() => HealthPlansValuesIncludeObjectSchema.optional()), data: z.union([HealthPlansValuesCreateInputObjectSchema, HealthPlansValuesUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([HealthPlansValuesCreateManyInputObjectSchema, z.array(HealthPlansValuesCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => HealthPlansValuesSelectObjectSchema.optional()), include: z.lazy(() => HealthPlansValuesIncludeObjectSchema.optional()), where: HealthPlansValuesWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: HealthPlansValuesWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => HealthPlansValuesSelectObjectSchema.optional()), include: z.lazy(() => HealthPlansValuesIncludeObjectSchema.optional()), data: z.union([HealthPlansValuesUpdateInputObjectSchema, HealthPlansValuesUncheckedUpdateInputObjectSchema]), where: HealthPlansValuesWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([HealthPlansValuesUpdateManyMutationInputObjectSchema, HealthPlansValuesUncheckedUpdateManyInputObjectSchema]), where: HealthPlansValuesWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => HealthPlansValuesSelectObjectSchema.optional()), include: z.lazy(() => HealthPlansValuesIncludeObjectSchema.optional()), where: HealthPlansValuesWhereUniqueInputObjectSchema, create: z.union([HealthPlansValuesCreateInputObjectSchema, HealthPlansValuesUncheckedCreateInputObjectSchema]), update: z.union([HealthPlansValuesUpdateInputObjectSchema, HealthPlansValuesUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: HealthPlansValuesWhereInputObjectSchema.optional(), orderBy: z.union([HealthPlansValuesOrderByWithRelationInputObjectSchema, HealthPlansValuesOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HealthPlansValuesWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), HealthPlansValuesCountAggregateInputObjectSchema]).optional(), _min: HealthPlansValuesMinAggregateInputObjectSchema.optional(), _max: HealthPlansValuesMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: HealthPlansValuesWhereInputObjectSchema.optional(), orderBy: z.union([HealthPlansValuesOrderByWithAggregationInputObjectSchema, HealthPlansValuesOrderByWithAggregationInputObjectSchema.array()]).optional(), having: HealthPlansValuesScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(HealthPlansValuesScalarFieldEnumSchema), _count: z.union([z.literal(true), HealthPlansValuesCountAggregateInputObjectSchema]).optional(), _min: HealthPlansValuesMinAggregateInputObjectSchema.optional(), _max: HealthPlansValuesMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: HealthPlansValuesWhereInputObjectSchema.optional(), orderBy: z.union([HealthPlansValuesOrderByWithRelationInputObjectSchema, HealthPlansValuesOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HealthPlansValuesWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(HealthPlansValuesScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), HealthPlansValuesCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as HealthPlansValuesInputSchemaType;
